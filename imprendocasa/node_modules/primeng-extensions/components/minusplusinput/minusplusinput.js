"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var forms_1 = require("@angular/forms");
var button_1 = require("primeng/components/button/button");
exports.MINUSPLUSINPUT_VALUE_ACCESSOR = {
    provide: forms_1.NG_VALUE_ACCESSOR,
    useExisting: core_1.forwardRef(function () { return MinusPlusInput; }),
    multi: true
};
var MinusPlusInput = /** @class */ (function () {
    function MinusPlusInput(cd) {
        this.cd = cd;
        this.min = 0;
        this.max = 10;
        this.step = 1;
        this.vertical = false;
        this.disabled = false;
        this.decrementLabel = '-';
        this.incrementLabel = '+';
        this.styleClass = null;
        this.onInputChange = new core_1.EventEmitter();
        this.value = 0;
        this.inputValue = 0;
        this.onModelChange = function () {
        };
        this.onModelTouched = function () {
        };
    }
    MinusPlusInput.prototype.writeValue = function (value) {
        this.inputValue = value;
        this.cd.detectChanges();
    };
    MinusPlusInput.prototype.isIncrement = function () {
        return (this.inputValue + this.step) <= this.max;
    };
    MinusPlusInput.prototype.isDecrement = function () {
        return (this.inputValue - this.step) >= this.min;
    };
    MinusPlusInput.prototype.getButtonClass = function (status) {
        var buttonClass = '';
        if (status) {
            if (!this.isDecrement())
                buttonClass += ' ui-state-disabled';
        }
        else {
            if (!this.isIncrement())
                buttonClass += ' ui-state-disabled';
        }
        return buttonClass;
    };
    MinusPlusInput.prototype.increment = function () {
        if (this.isIncrement()) {
            this.inputValue = this.inputValue + this.step;
            this.onModelChange(this.inputValue);
            this.onModelTouched();
            this.onInputChange.emit(this.inputValue);
        }
    };
    MinusPlusInput.prototype.decrement = function () {
        if (this.isDecrement()) {
            this.inputValue = this.inputValue - this.step;
            this.onModelChange(this.inputValue);
            this.onModelTouched();
            this.onInputChange.emit(this.inputValue);
        }
    };
    MinusPlusInput.prototype.ngOnDestroy = function () {
    };
    MinusPlusInput.prototype.ngOnInit = function () {
        this.inputValue = this.value;
        if (this.step < 1)
            this.step = 1;
    };
    MinusPlusInput.prototype.registerOnChange = function (fn) {
        this.onModelChange = fn;
    };
    MinusPlusInput.prototype.registerOnTouched = function (fn) {
        this.onModelTouched = fn;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "min", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "max", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "step", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "vertical", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "disabled", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "decrementLabel", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Object)
    ], MinusPlusInput.prototype, "incrementLabel", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], MinusPlusInput.prototype, "styleClass", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], MinusPlusInput.prototype, "onInputChange", void 0);
    MinusPlusInput = __decorate([
        core_1.Component({
            selector: 'pe-minusplusinput',
            template: "\n    <div\n      [ngClass]=\"{styleClass: true,'ui-minusplus ui-widget ui-widget-content ui-corner-all': true,'ui-minusplus-vertical': vertical, 'ui-state-disabled': disabled}\">\n      <button pButton [ngClass]=\"getButtonClass(true)\" (click)=\"decrement()\" [label]=\"decrementLabel\">\n      </button>\n      <div class=\"ui-minusplus-value\">\n        <ng-content></ng-content>\n        {{ inputValue }}\n      </div>\n      <button pButton [ngClass]=\"getButtonClass(false)\" (click)=\"increment()\" [label]=\"incrementLabel\">\n      </button>\n    </div>",
            encapsulation: core_1.ViewEncapsulation.None,
            providers: [exports.MINUSPLUSINPUT_VALUE_ACCESSOR]
        }),
        __metadata("design:paramtypes", [core_1.ChangeDetectorRef])
    ], MinusPlusInput);
    return MinusPlusInput;
}());
exports.MinusPlusInput = MinusPlusInput;
var MinusPlusInputModule = /** @class */ (function () {
    function MinusPlusInputModule() {
    }
    MinusPlusInputModule = __decorate([
        core_1.NgModule({
            imports: [common_1.CommonModule, button_1.ButtonModule],
            exports: [MinusPlusInput],
            declarations: [MinusPlusInput]
        })
    ], MinusPlusInputModule);
    return MinusPlusInputModule;
}());
exports.MinusPlusInputModule = MinusPlusInputModule;
//# sourceMappingURL=minusplusinput.js.map
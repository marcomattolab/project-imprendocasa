{"version":3,"file":"diffMatchPatch.service.js","sourceRoot":"","sources":["../src/diffMatchPatch.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAC3C,mDAA0D;AAG1D;IAEE,+BAAoB,GAAmB;QAAnB,QAAG,GAAH,GAAG,CAAgB;IAAM,CAAC;IAE9C,wCAAQ,GAAR;IAEA,CAAC;IAED,uCAAO,GAAP,UAAQ,IAAY,EAAE,KAAa;QAChC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,+CAAe,GAAf,UAAgB,IAAY,EAAE,KAAa;QACzC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,iDAAiB,GAAjB,UAAkB,IAAY,EAAE,KAAa;QAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,2CAAW,GAAX,UAAY,IAAY,EAAE,KAAa;QACrC,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACvD,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QACpD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,sCAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAjCU,qBAAqB;QADjC,iBAAU,EAAE;yCAGc,+BAAc;OAF5B,qBAAqB,CAmCjC;IAAD,4BAAC;CAAA,AAnCD,IAmCC;AAnCY,sDAAqB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DiffMatchPatch, DiffOp } from './diffMatchPatch';\n\n@Injectable()\nexport class DiffMatchPatchService {\n\n  constructor(private dmp: DiffMatchPatch) {   }\n\n  ngOnInit () {\n    \n  }\n\n  getDiff(left: string, right: string) {\n     return this.dmp.diff_main(left, right);\n  }\n\n  getSemanticDiff(left: string, right: string) {\n    const diffs = this.dmp.diff_main(left, right);\n    this.dmp.diff_cleanupSemantic(diffs);\n    return diffs;\n  }\n\n  getProcessingDiff(left: string, right: string) {\n    const diffs = this.dmp.diff_main(left, right);\n    this.dmp.diff_cleanupEfficiency(diffs);\n    return diffs;\n  }\n\n  getLineDiff(left: string, right: string) {\n    const chars = this.dmp.diff_linesToChars_(left, right);\n    const diffs = this.dmp.diff_main(chars.chars1, chars.chars2, false);\n    this.dmp.diff_charsToLines_(diffs, chars.lineArray);\n    return diffs;\n  }\n\n  getDmp() {\n    return this.dmp;\n  }\n\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
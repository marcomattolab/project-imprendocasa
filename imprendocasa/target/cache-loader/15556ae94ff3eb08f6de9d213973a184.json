{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\partner\\partner.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\partner\\partner.component.ts","mtime":1548761753851},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar partner_service_1 = require(\"./partner.service\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar professione_1 = require(\"app/entities/professione\");\r\nvar PartnerComponent = /** @class */ (function () {\r\n    function PartnerComponent(partnerService, parseLinks, jhiAlertService, principal, activatedRoute, dataUtils, router, eventManager, professioneService) {\r\n        var _this = this;\r\n        this.partnerService = partnerService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.principal = principal;\r\n        this.activatedRoute = activatedRoute;\r\n        this.dataUtils = dataUtils;\r\n        this.router = router;\r\n        this.eventManager = eventManager;\r\n        this.professioneService = professioneService;\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n    PartnerComponent.prototype.initRicerca = function () {\r\n        this.formPartners = new forms_1.FormGroup({\r\n            nome: new forms_1.FormControl(''),\r\n            cognome: new forms_1.FormControl(''),\r\n            codiceFiscale: new forms_1.FormControl(''),\r\n            telefonoFisso: new forms_1.FormControl(''),\r\n            telefonoCellulare: new forms_1.FormControl(''),\r\n            email: new forms_1.FormControl(''),\r\n            tipoIndirizzo: new forms_1.FormControl(''),\r\n            indirizzo: new forms_1.FormControl(''),\r\n            cap: new forms_1.FormControl(''),\r\n            regione: new forms_1.FormControl(''),\r\n            provincia: new forms_1.FormControl(''),\r\n            citta: new forms_1.FormControl(''),\r\n            note: new forms_1.FormControl(''),\r\n            professioneId: new forms_1.FormControl('')\r\n        });\r\n    };\r\n    PartnerComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        this.partnerService\r\n            .query({\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) { return _this.paginatePartners(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    PartnerComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    PartnerComponent.prototype.transition = function () {\r\n        this.router.navigate(['/partner'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    PartnerComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/partner',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    PartnerComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.principal.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.professioneService.query().subscribe(function (res) {\r\n            _this.professiones = res.body;\r\n        }, function (res) { return _this.onError(res.message); });\r\n        this.registerChangeInPartners();\r\n        this.initRicerca();\r\n    };\r\n    PartnerComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    PartnerComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    PartnerComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    PartnerComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    PartnerComponent.prototype.registerChangeInPartners = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('partnerListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    PartnerComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    PartnerComponent.prototype.paginatePartners = function (data, headers) {\r\n        var _this = this;\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.partners = data;\r\n        this.completamento = [];\r\n        this.partners.forEach(function (partner) {\r\n            _this.retrievePercentualeCompletamento(partner);\r\n        });\r\n    };\r\n    PartnerComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    PartnerComponent.prototype.retrievePercentualeCompletamento = function (current) {\r\n        var nCampi = 12;\r\n        var i = 0;\r\n        if (current.nome != null) {\r\n            i++;\r\n        }\r\n        if (current.cognome != null) {\r\n            i++;\r\n        }\r\n        // if (current.professione != null) {\r\n        //    i++;\r\n        // }\r\n        if (current.professioneId != null) {\r\n            i++;\r\n        }\r\n        if (current.telefonoCellulare != null) {\r\n            i++;\r\n        }\r\n        if (current.email != null) {\r\n            i++;\r\n        }\r\n        if (current.indirizzo != null) {\r\n            i++;\r\n        }\r\n        if (current.cap != null) {\r\n            i++;\r\n        }\r\n        if (current.regione != null) {\r\n            i++;\r\n        }\r\n        if (current.provincia != null) {\r\n            i++;\r\n        }\r\n        if (current.citta != null) {\r\n            i++;\r\n        }\r\n        if (current.note != null) {\r\n            i++;\r\n        }\r\n        this.completamento[current.id] = (i / nCampi) * 100;\r\n    };\r\n    PartnerComponent.prototype.retrieveCompletamento = function (id) {\r\n        return this.completamento[id].toPrecision(3);\r\n    };\r\n    PartnerComponent.prototype.cerca = function () {\r\n        var _this = this;\r\n        var formClienteControls = this.formPartners.controls;\r\n        var searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        // filtro nome\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'nome');\r\n        // filtro cognome\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cognome');\r\n        // filtro codiceFiscale\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codiceFiscale');\r\n        // filtro provincia\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\r\n        // filtro telefonoCellulare\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoCellulare');\r\n        // filtro telefonoFisso\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoFisso');\r\n        // filtro email\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'email');\r\n        // filtro tipoIndirizzo\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tipoIndirizzo');\r\n        // filtro dati cap\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\r\n        // filtro dati indirizzo\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\r\n        // filtro dati regione\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'regione');\r\n        // filtro dati provincia\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\r\n        // filtro dati citta\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\r\n        // filtro dati note\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'note');\r\n        // filtro dati note\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'professioneId');\r\n        this.partnerService\r\n            .query(searchFilter)\r\n            .subscribe(function (res) { return _this.paginatePartners(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    PartnerComponent.prototype.resetFiltri = function () {\r\n        this.initRicerca();\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n    PartnerComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-partner',\r\n            templateUrl: './partner.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof partner_service_1.PartnerService !== \"undefined\" && partner_service_1.PartnerService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _f : Object, typeof (_g = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _g : Object, typeof (_h = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _h : Object, typeof (_j = typeof professione_1.ProfessioneService !== \"undefined\" && professione_1.ProfessioneService) === \"function\" ? _j : Object])\r\n    ], PartnerComponent);\r\n    return PartnerComponent;\r\n}());\r\nexports.PartnerComponent = PartnerComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\partner\\partner.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\partner\\partner.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpErrorResponse, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {JhiAlertService, JhiDataUtils, JhiEventManager, JhiParseLinks} from 'ng-jhipster';\n\nimport {Partner} from 'app/shared/model/partner.model';\nimport {Principal} from 'app/core';\n\nimport {checkAndCompileSearchFilterContains, checkAndCompileSearchFilterEquals, ITEMS_PER_PAGE} from 'app/shared';\nimport {PartnerService} from './partner.service';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Cliente} from 'app/shared/model/cliente.model';\nimport {IProfessione, Professione} from 'app/shared/model/professione.model';\nimport {ProfessioneService} from 'app/entities/professione';\n\n@Component({\n    selector: 'jhi-partner',\n    templateUrl: './partner.component.html'\n})\nexport class PartnerComponent implements OnInit, OnDestroy {\n    currentAccount: any;\n    partners: Partner[];\n    error: any;\n    success: any;\n    eventSubscriber: Subscription;\n    routeData: any;\n    links: any;\n    totalItems: any;\n    queryCount: any;\n    itemsPerPage: any;\n    page: any;\n    predicate: any;\n    previousPage: any;\n    reverse: any;\n    professiones: Professione[];\n\n    completamento: any;\n    formPartners: FormGroup;\n\n    constructor(\n        private partnerService: PartnerService,\n        private parseLinks: JhiParseLinks,\n        private jhiAlertService: JhiAlertService,\n        private principal: Principal,\n        private activatedRoute: ActivatedRoute,\n        private dataUtils: JhiDataUtils,\n        private router: Router,\n        private eventManager: JhiEventManager,\n        private professioneService: ProfessioneService,\n    ) {\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe(data => {\n            this.page = data.pagingParams.page;\n            this.previousPage = data.pagingParams.page;\n            this.reverse = data.pagingParams.ascending;\n            this.predicate = data.pagingParams.predicate;\n        });\n\n    }\n\n    initRicerca() {\n\n        this.formPartners = new FormGroup({\n            nome: new FormControl(''),\n            cognome: new FormControl(''),\n            codiceFiscale: new FormControl(''),\n            telefonoFisso: new FormControl(''),\n            telefonoCellulare: new FormControl(''),\n            email: new FormControl(''),\n            tipoIndirizzo: new FormControl(''),\n            indirizzo: new FormControl(''),\n            cap: new FormControl(''),\n            regione: new FormControl(''),\n            provincia: new FormControl(''),\n            citta: new FormControl(''),\n            note: new FormControl(''),\n            professioneId: new FormControl('')\n        });\n    }\n\n    loadAll() {\n        this.partnerService\n            .query({\n                page: this.page - 1,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n            .subscribe(\n                (res: HttpResponse<Partner[]>) => this.paginatePartners(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    loadPage(page: number) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n\n    transition() {\n        this.router.navigate(['/partner'], {\n            queryParams: {\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        });\n        this.loadAll();\n    }\n\n    clear() {\n        this.page = 0;\n        this.router.navigate([\n            '/partner',\n            {\n                page: this.page,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        ]);\n        this.loadAll();\n    }\n\n    ngOnInit() {\n        this.loadAll();\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n        });\n        this.professioneService.query().subscribe(\n            (res: HttpResponse<IProfessione[]>) => {\n                this.professiones = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.registerChangeInPartners();\n        this.initRicerca();\n    }\n\n    ngOnDestroy() {\n        this.eventManager.destroy(this.eventSubscriber);\n    }\n\n    trackId(index: number, item: Partner) {\n        return item.id;\n    }\n\n    byteSize(field) {\n        return this.dataUtils.byteSize(field);\n    }\n\n    openFile(contentType, field) {\n        return this.dataUtils.openFile(contentType, field);\n    }\n\n    registerChangeInPartners() {\n        this.eventSubscriber = this.eventManager.subscribe('partnerListModification', response => this.loadAll());\n    }\n\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n\n    private paginatePartners(data: Partner[], headers: HttpHeaders) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        this.queryCount = this.totalItems;\n        this.partners = data;\n        this.completamento = [];\n        this.partners.forEach(partner => {\n            this.retrievePercentualeCompletamento(partner);\n        });\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    retrievePercentualeCompletamento(current: Partner) {\n        const nCampi = 12;\n        let i = 0;\n\n        if (current.nome != null) {\n            i++;\n        }\n        if (current.cognome != null) {\n            i++;\n        }\n        // if (current.professione != null) {\n        //    i++;\n        // }\n        if (current.professioneId != null) {\n            i++;\n        }\n        if (current.telefonoCellulare != null) {\n            i++;\n        }\n        if (current.email != null) {\n            i++;\n        }\n        if (current.indirizzo != null) {\n            i++;\n        }\n        if (current.cap != null) {\n            i++;\n        }\n        if (current.regione != null) {\n            i++;\n        }\n        if (current.provincia != null) {\n            i++;\n        }\n        if (current.citta != null) {\n            i++;\n        }\n        if (current.note != null) {\n            i++;\n        }\n        this.completamento[current.id] = (i / nCampi) * 100;\n    }\n\n    retrieveCompletamento(id: any) {\n        return this.completamento[id].toPrecision(3);\n    }\n\n    cerca() {\n        const formClienteControls = this.formPartners.controls;\n        let searchFilter = {\n            page: this.page - 1,\n            size: this.itemsPerPage,\n            sort: this.sort()\n        };\n        // filtro nome\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'nome');\n        // filtro cognome\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cognome');\n        // filtro codiceFiscale\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codiceFiscale');\n        // filtro provincia\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\n        // filtro telefonoCellulare\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoCellulare');\n        // filtro telefonoFisso\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoFisso');\n        // filtro email\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'email');\n        // filtro tipoIndirizzo\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tipoIndirizzo');\n        // filtro dati cap\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\n        // filtro dati indirizzo\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\n        // filtro dati regione\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'regione');\n        // filtro dati provincia\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\n        // filtro dati citta\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\n        // filtro dati note\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'note');\n        // filtro dati note\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'professioneId');\n\n        this.partnerService\n            .query(searchFilter)\n            .subscribe(\n                (res: HttpResponse<Cliente[]>) => this.paginatePartners(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    resetFiltri() {\n        this.initRicerca();\n    }\n}\n"]}]}
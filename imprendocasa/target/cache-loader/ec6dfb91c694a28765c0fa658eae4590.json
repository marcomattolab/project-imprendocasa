{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.service.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.service.ts","mtime":1548761752499},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar ImmobileService = /** @class */ (function () {\r\n    function ImmobileService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/immobiles';\r\n    }\r\n    ImmobileService.prototype.create = function (immobile) {\r\n        return this.http.post(this.resourceUrl, immobile, { observe: 'response' });\r\n    };\r\n    ImmobileService.prototype.update = function (immobile) {\r\n        return this.http.put(this.resourceUrl, immobile, { observe: 'response' });\r\n    };\r\n    ImmobileService.prototype.find = function (id) {\r\n        return this.http.get(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    ImmobileService.prototype.query = function (req) {\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' });\r\n    };\r\n    ImmobileService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    ImmobileService.prototype.findByUser = function (req) {\r\n        var options = shared_1.createRequestOption(req);\r\n        var url = this.resourceUrl + '/currentUser';\r\n        return this.http.get(url, { params: options, observe: 'response' });\r\n    };\r\n    var _a;\r\n    ImmobileService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], ImmobileService);\r\n    return ImmobileService;\r\n}());\r\nexports.ImmobileService = ImmobileService;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.service.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.service.ts"],"names":[],"mappings":";;;AAAA,sCAAyC;AACzC,6CAA8D;AAG9D,mDAAiD;AACjD,qCAA+C;AAO/C;IAGI,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,gBAAW,GAAG,8BAAc,GAAG,eAAe,CAAC;IAGtD,CAAC;IAED,gCAAM,GAAN,UAAO,QAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACvF,CAAC;IAED,gCAAM,GAAN,UAAO,QAAkB;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACtF,CAAC;IAED,8BAAI,GAAJ,UAAK,EAAU;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACvF,CAAC;IAED,+BAAK,GAAL,UAAM,GAAS;QACX,IAAM,OAAO,GAAG,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,IAAI,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/F,CAAC;IAED,gCAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAC,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACrF,CAAC;IAED,oCAAU,GAAV,UAAW,GAAS;QAChB,IAAM,OAAO,GAAG,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,EAAE,EAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IAClF,CAAC;;IA/BQ,eAAe;QAD3B,iBAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH3B,eAAe,CAgC3B;IAAD,sBAAC;CAAA,AAhCD,IAgCC;AAhCY,0CAAe","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {SERVER_API_URL} from 'app/app.constants';\r\nimport {createRequestOption} from 'app/shared';\r\nimport {Immobile} from 'app/shared/model/immobile.model';\r\n\r\ntype EntityResponseType = HttpResponse<Immobile>;\r\ntype EntityArrayResponseType = HttpResponse<Immobile[]>;\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ImmobileService {\r\n    public resourceUrl = SERVER_API_URL + 'api/immobiles';\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    create(immobile: Immobile): Observable<EntityResponseType> {\r\n        return this.http.post<Immobile>(this.resourceUrl, immobile, {observe: 'response'});\r\n    }\r\n\r\n    update(immobile: Immobile): Observable<EntityResponseType> {\r\n        return this.http.put<Immobile>(this.resourceUrl, immobile, {observe: 'response'});\r\n    }\r\n\r\n    find(id: string): Observable<EntityResponseType> {\r\n        return this.http.get<Immobile>(`${this.resourceUrl}/${id}`, {observe: 'response'});\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http.get<Immobile[]>(this.resourceUrl, {params: options, observe: 'response'});\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\r\n    }\r\n\r\n    findByUser(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        const url = this.resourceUrl + '/currentUser';\r\n        return this.http.get<Immobile[]>(url, {params: options, observe: 'response'});\r\n    }\r\n}\r\n"]}]}
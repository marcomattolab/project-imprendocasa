{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\cliente\\cliente.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\cliente\\cliente.component.ts","mtime":1548761751688},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar cliente_service_1 = require(\"./cliente.service\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar mail_etichette_component_1 = require(\"app/entities/cliente/mail-etichette/mail-etichette.component\");\r\nvar tag_1 = require(\"app/entities/tag\");\r\nvar ClienteComponent = /** @class */ (function () {\r\n    function ClienteComponent(clienteService, parseLinks, jhiAlertService, principal, activatedRoute, dataUtils, router, tagService, userService, eventManager, modalService) {\r\n        var _this = this;\r\n        this.clienteService = clienteService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.principal = principal;\r\n        this.activatedRoute = activatedRoute;\r\n        this.dataUtils = dataUtils;\r\n        this.router = router;\r\n        this.tagService = tagService;\r\n        this.userService = userService;\r\n        this.eventManager = eventManager;\r\n        this.modalService = modalService;\r\n        this.selezionaTuttiClienti = false;\r\n        this.showIndeterminate = false;\r\n        this.selectedCustomersMap = new Map();\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeDataSubscription = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n    ClienteComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.principal.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.registerChangeInClientes();\r\n        this.tagService.query().subscribe(function (res) {\r\n            _this.tags = res;\r\n        }, function (res) { return _this.onError(res.message); });\r\n        this.initFormRicerca();\r\n        this.retrieveUsers();\r\n    };\r\n    ClienteComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    ClienteComponent.prototype.initFormRicerca = function () {\r\n        var _this = this;\r\n        this.formCliente = new forms_1.FormGroup({\r\n            codiceFiscale: new forms_1.FormControl(''),\r\n            nome: new forms_1.FormControl(''),\r\n            cap: new forms_1.FormControl(''),\r\n            cognome: new forms_1.FormControl(''),\r\n            telefonoCellulare: new forms_1.FormControl(''),\r\n            telefonoFisso: new forms_1.FormControl(''),\r\n            email: new forms_1.FormControl(''),\r\n            citta: new forms_1.FormControl(''),\r\n            indirizzo: new forms_1.FormControl(''),\r\n            tagId: new forms_1.FormControl(''),\r\n            punteggioD: new forms_1.FormControl(''),\r\n            punteggioA: new forms_1.FormControl(''),\r\n            dataD: new forms_1.FormControl(''),\r\n            dataA: new forms_1.FormControl(''),\r\n            importoProvvigioniD: new forms_1.FormControl(''),\r\n            importoProvvigioniA: new forms_1.FormControl(''),\r\n            numeroPraticheD: new forms_1.FormControl(''),\r\n            numeroPraticheA: new forms_1.FormControl(''),\r\n            numeroSegnalazioniD: new forms_1.FormControl(''),\r\n            numeroSegnalazioniA: new forms_1.FormControl(''),\r\n        });\r\n        this.formCliente.updateValueAndValidity();\r\n        this.tagService.query().subscribe(function (res) {\r\n            _this.tags = res;\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ClienteComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        var queryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        this.clienteService\r\n            .query(queryParams)\r\n            .subscribe(function (res) { return _this.paginateClientes(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ClienteComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    ClienteComponent.prototype.transition = function () {\r\n        this.router.navigate(['/cliente'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    ClienteComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/cliente',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    ClienteComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ClienteComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    ClienteComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    ClienteComponent.prototype.registerChangeInClientes = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('clienteListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    ClienteComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    ClienteComponent.prototype.paginateClientes = function (data, headers) {\r\n        var _this = this;\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.clientes = data;\r\n        this.completamento = [];\r\n        this.showIndeterminate = false;\r\n        this.clientes.forEach(function (cliente) {\r\n            _this.retrievePercentualeCompletamento(cliente);\r\n            if (_this.selectedCustomersMap[cliente.id]) {\r\n                _this.selectClienteAndSetIndeterminate(cliente);\r\n            }\r\n        });\r\n    };\r\n    ClienteComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    ClienteComponent.prototype.retrievePercentualeCompletamento = function (current) {\r\n        var nCampi = 12;\r\n        var i = 0;\r\n        if (current.nome != null) {\r\n            i++;\r\n        }\r\n        if (current.cognome != null) {\r\n            i++;\r\n        }\r\n        if (current.dataNascita != null) {\r\n            i++;\r\n        }\r\n        if (current.meseNascita != null) {\r\n            i++;\r\n        }\r\n        if (current.telefonoCellulare != null) {\r\n            i++;\r\n        }\r\n        if (current.email != null) {\r\n            i++;\r\n        }\r\n        if (current.indirizzo != null) {\r\n            i++;\r\n        }\r\n        if (current.cap != null) {\r\n            i++;\r\n        }\r\n        if (current.regione != null) {\r\n            i++;\r\n        }\r\n        if (current.provincia != null) {\r\n            i++;\r\n        }\r\n        if (current.citta != null) {\r\n            i++;\r\n        }\r\n        if (current.note != null) {\r\n            i++;\r\n        }\r\n        var percentuale = (i / nCampi) * 100;\r\n        this.completamento[current.id] = percentuale;\r\n    };\r\n    ClienteComponent.prototype.retrieveCompletamento = function (id) {\r\n        return this.completamento[id].toPrecision(3);\r\n    };\r\n    ClienteComponent.prototype.retrieveUsers = function () {\r\n        var _this = this;\r\n        this.userService.query().subscribe(function (res) { return _this.users = res.body; }, function (res) { return _this.onError(res.body); });\r\n    };\r\n    ClienteComponent.prototype.cerca = function () {\r\n        var _this = this;\r\n        var formClienteControls = this.formCliente.controls;\r\n        var searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        // filtro codiceFiscale\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codiceFiscale');\r\n        // filtro nome\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'nome');\r\n        // filtro cap\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\r\n        // filtro cognome\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cognome');\r\n        // filtro telefonoCellulare\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoCellulare');\r\n        // filtro telefonoFisso\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoFisso');\r\n        // filtro email\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'email');\r\n        // filtro Indirizzo\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\r\n        // filtro Citta\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\r\n        // filtro punteggio Da A\r\n        // searchFilter =  checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'punteggioD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'punteggioA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'punteggioD', 'punteggioA', 'punteggio');\r\n        // filtro provvigione Da A\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'importoProvvigioniD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'importoProvvigioniA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'importoProvvigioniD', 'importoProvvigioniA', 'importoProvvigioni');\r\n        // filtro praticheDa\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'numeroPraticheD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'numeroPraticheA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'numeroPraticheD', 'numeroPraticheA', 'numeroPratiche');\r\n        // filtro Data Nascita Da/A\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'dataD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'dataA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataD', 'dataA', 'dataNascita');\r\n        // filtro numero segnalazioni Da/A\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'numeroSegnalazioniD', 'numeroSegnalazioniA', 'numeroSegnalazioni');\r\n        // filtro tag\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tagId');\r\n        this.clienteService\r\n            .query(searchFilter)\r\n            .subscribe(function (res) { return _this.paginateClientes(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ClienteComponent.prototype.getOrderByIcon = function (param) {\r\n        if (param === this.predicate) {\r\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\r\n        }\r\n        else {\r\n            return 'fa-sort';\r\n        }\r\n    };\r\n    ClienteComponent.prototype.resetFiltri = function () {\r\n        this.initFormRicerca();\r\n    };\r\n    ClienteComponent.prototype.selectClienteAndSetIndeterminate = function (clienteToSelect) {\r\n        this.showIndeterminate = false;\r\n        this.selezionaTuttiClienti = false;\r\n        clienteToSelect.selected = Boolean(!clienteToSelect.selected);\r\n        this.addOrRemoveSelectedCustomer(clienteToSelect);\r\n        for (var _i = 0, _a = this.clientes; _i < _a.length; _i++) {\r\n            var cliente = _a[_i];\r\n            if (Boolean(cliente.selected) !== Boolean(clienteToSelect.selected)) {\r\n                this.showIndeterminate = true;\r\n                return;\r\n            }\r\n        }\r\n        this.selezionaTuttiClienti = Boolean(clienteToSelect.selected);\r\n    };\r\n    ClienteComponent.prototype.addOrRemoveSelectedCustomer = function (clienteToSelect) {\r\n        if (clienteToSelect.selected) {\r\n            this.selectedCustomersMap[clienteToSelect.id] = clienteToSelect;\r\n        }\r\n        else {\r\n            delete this.selectedCustomersMap[clienteToSelect.id];\r\n        }\r\n    };\r\n    ClienteComponent.prototype.selectAll = function (previousChoice) {\r\n        var _this = this;\r\n        this.showIndeterminate = false;\r\n        this.selezionaTuttiClienti = !previousChoice;\r\n        this.clientes.forEach(function (cliente) {\r\n            cliente.selected = Boolean(_this.selezionaTuttiClienti);\r\n            _this.addOrRemoveSelectedCustomer(cliente);\r\n        });\r\n    };\r\n    ClienteComponent.prototype.getSelectedCustomersAsArray = function () {\r\n        var _this = this;\r\n        var result = [];\r\n        Object.keys(this.selectedCustomersMap).forEach(function (key) {\r\n            return result.push(_this.selectedCustomersMap[key]);\r\n        });\r\n        return result;\r\n    };\r\n    ClienteComponent.prototype.noCustomerSelected = function () {\r\n        return this.getSelectedCustomersAsArray().length === 0;\r\n    };\r\n    ClienteComponent.prototype.openInvioMailEtichette = function () {\r\n        var modalRef = this.modalService.open(mail_etichette_component_1.MailEtichetteComponent, { size: 'lg' });\r\n        modalRef.componentInstance.selectedCustomers = this.getSelectedCustomersAsArray();\r\n    };\r\n    ClienteComponent.prototype.checkEditAvaiable = function (cliente) {\r\n        /* console.log('edit' + cliente.editAvaiable);\r\n         if (cliente.editAvaiable) {\r\n             console.log(cliente.editAvaiable);\r\n             return false;\r\n         } else { return true; }*/\r\n        return false;\r\n    };\r\n    ClienteComponent.prototype.checkDeleteAvaiable = function (cliente) {\r\n        /*  if (cliente.deleteAvaiable) {\r\n              return false;\r\n          } else { return true; }*/\r\n        return false;\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\r\n    ClienteComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-cliente',\r\n            templateUrl: './cliente.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof cliente_service_1.ClienteService !== \"undefined\" && cliente_service_1.ClienteService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _f : Object, typeof (_g = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _g : Object, typeof (_h = typeof tag_1.TagService !== \"undefined\" && tag_1.TagService) === \"function\" ? _h : Object, typeof (_j = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _j : Object, typeof (_k = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _k : Object, typeof (_l = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _l : Object])\r\n    ], ClienteComponent);\r\n    return ClienteComponent;\r\n}());\r\nexports.ClienteComponent = ClienteComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\cliente\\cliente.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\cliente\\cliente.component.ts"],"names":[],"mappings":";;;AAAA,sCAA2D;AAE3D,0CAAuD;AAEvD,2CAA0F;AAG1F,iCAAsD;AAEtD,qCAKoB;AACpB,qDAAiD;AACjD,wCAAsD;AACtD,2DAAoD;AACpD,yGAAoG;AAEpG,wCAA4C;AAM5C;IA2BI,0BACY,cAA8B,EAC9B,UAAyB,EACzB,eAAgC,EAChC,SAAoB,EACpB,cAA8B,EAC9B,SAAuB,EACvB,MAAc,EACd,UAAsB,EACtB,WAAwB,EACxB,YAA6B,EAC7B,YAAsB;QAXlC,iBAoBC;QAnBW,mBAAc,GAAd,cAAc,CAAgB;QAC9B,eAAU,GAAV,UAAU,CAAe;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAChC,cAAS,GAAT,SAAS,CAAW;QACpB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAc;QACvB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QACtB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAiB;QAC7B,iBAAY,GAAZ,YAAY,CAAU;QAhBlC,0BAAqB,GAAG,KAAK,CAAC;QAC9B,sBAAiB,GAAG,KAAK,CAAC;QAElB,yBAAoB,GAAsB,IAAI,GAAG,EAAgB,CAAC;QAetE,IAAI,CAAC,YAAY,GAAG,uBAAc,CAAC;QACnC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAA,IAAI;YAChE,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YAC3C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;QACjD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAgBC;QAfG,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;YAClC,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAC7B,UAAC,GAAU;YACP,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAED,sCAAW,GAAX;QACI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpD,CAAC;IAED,0CAAe,GAAf;QAAA,iBA+BC;QA9BG,IAAI,CAAC,WAAW,GAAG,IAAI,iBAAS,CAAC;YAC7B,aAAa,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACzB,GAAG,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACxB,OAAO,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC5B,iBAAiB,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACtC,aAAa,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAClC,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,SAAS,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC9B,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,UAAU,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC/B,UAAU,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC/B,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,KAAK,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YAC1B,mBAAmB,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACxC,mBAAmB,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACxC,eAAe,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACpC,eAAe,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACpC,mBAAmB,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;YACxC,mBAAmB,EAAE,IAAI,mBAAW,CAAC,EAAE,CAAC;SAC3C,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,CAAC,sBAAsB,EAAE,CAAC;QAE1C,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,SAAS,CAC7B,UAAC,GAAU;YACP,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QACpB,CAAC,EACD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACN,CAAC;IAED,kCAAO,GAAP;QAAA,iBAaC;QAZG,IAAM,WAAW,GAAG;YAChB,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;YACnB,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SACpB,CAAC;QAEF,IAAI,CAAC,cAAc;aACd,KAAK,CAAC,WAAW,CAAC;aAClB,SAAS,CACN,UAAC,GAA4B,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,EAA5C,CAA4C,EAC9E,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACV,CAAC;IAED,mCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,IAAI,KAAK,IAAI,CAAC,YAAY,EAAE;YAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;IACL,CAAC;IAED,qCAAU,GAAV;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;YAC/B,WAAW,EAAE;gBACT,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,YAAY;gBACvB,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;aAC/D;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,gCAAK,GAAL;QACI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjB,UAAU;YACV;gBACI,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;aAC/D;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,kCAAO,GAAP,UAAQ,KAAa,EAAE,IAAa;QAChC,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,mCAAQ,GAAR,UAAS,KAAK;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAQ,GAAR,UAAS,WAAW,EAAE,KAAK;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;IAED,mDAAwB,GAAxB;QAAA,iBAEC;QADG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,yBAAyB,EAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC;IAC9G,CAAC;IAED,+BAAI,GAAJ;QACI,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEO,2CAAgB,GAAxB,UAAyB,IAAe,EAAE,OAAoB;QAA9D,iBAgBC;QAfG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;YACzB,KAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;YAE/C,IAAI,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBACvC,KAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;aAClD;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,kCAAO,GAAf,UAAgB,YAAoB;QAChC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;IAEO,2DAAgC,GAAxC,UAAyC,OAAgB;QACrD,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;YACtB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE;YACzB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,EAAE;YAC7B,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,WAAW,IAAI,IAAI,EAAE;YAC7B,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,iBAAiB,IAAI,IAAI,EAAE;YACnC,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YACvB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE;YAC3B,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,GAAG,IAAI,IAAI,EAAE;YACrB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,OAAO,IAAI,IAAI,EAAE;YACzB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,EAAE;YAC3B,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,KAAK,IAAI,IAAI,EAAE;YACvB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;YACtB,CAAC,EAAE,CAAC;SACP;QACD,IAAM,WAAW,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;IACjD,CAAC;IAED,gDAAqB,GAArB,UAAsB,EAAO;QACzB,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC;IAEO,wCAAa,GAArB;QAAA,iBAKC;QAJG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,CAC9B,UAAC,GAAyB,IAAK,OAAA,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,IAAI,EAArB,CAAqB,EACpD,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAtB,CAAsB,CACrD,CAAC;IACN,CAAC;IAED,gCAAK,GAAL;QAAA,iBA2DC;QA1DG,IAAM,mBAAmB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAEtD,IAAI,YAAY,GAAG;YACf,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG,CAAC;YACnB,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;SACpB,CAAC;QAEF,uBAAuB;QACvB,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACvG,cAAc;QACd,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QAC9F,aAAa;QACb,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC7F,iBAAiB;QACjB,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;QACjG,2BAA2B;QAC3B,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,mBAAmB,CAAC,CAAC;QAC3G,uBAAuB;QACvB,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACvG,eAAe;QACf,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QAC/F,mBAAmB;QACnB,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QACnG,eAAe;QACf,YAAY,GAAG,4CAAmC,CAAC,mBAAmB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QAE/F,wBAAwB;QACxB,kGAAkG;QAClG,iGAAiG;QACjG,YAAY,GAAG,qCAA4B,CAAC,mBAAmB,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;QAExH,0BAA0B;QAC1B,0GAA0G;QAC1G,0GAA0G;QAC1G,YAAY,GAAG,qCAA4B,CAAC,mBAAmB,EAAE,YAAY,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAEnJ,oBAAoB;QACpB,sGAAsG;QACtG,sGAAsG;QACtG,YAAY,GAAG,qCAA4B,CAAC,mBAAmB,EAAE,YAAY,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;QAEvI,2BAA2B;QAC3B,4FAA4F;QAC5F,4FAA4F;QAC5F,YAAY,GAAG,qCAA4B,CAAC,mBAAmB,EAAE,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,aAAa,CAAC,CAAC;QAEhH,kCAAkC;QAClC,YAAY,GAAG,qCAA4B,CAAC,mBAAmB,EAAE,YAAY,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,CAAC;QAEnJ,aAAa;QACb,YAAY,GAAG,0CAAiC,CAAC,mBAAmB,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;QAC7F,IAAI,CAAC,cAAc;aACd,KAAK,CAAC,YAAY,CAAC;aACnB,SAAS,CACN,UAAC,GAA4B,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,OAAO,CAAC,EAA5C,CAA4C,EAC9E,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAzB,CAAyB,CACxD,CAAC;IACV,CAAC;IAED,yCAAc,GAAd,UAAe,KAAa;QACxB,IAAI,KAAK,KAAK,IAAI,CAAC,SAAS,EAAE;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC;SACvD;aAAM;YACH,OAAO,SAAS,CAAC;SACpB;IACL,CAAC;IAED,sCAAW,GAAX;QACI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,2DAAgC,GAAhC,UAAiC,eAAwB;QACrD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QAEnC,eAAe,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAE9D,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,CAAC;QAElD,KAAsB,UAAa,EAAb,KAAA,IAAI,CAAC,QAAQ,EAAb,cAAa,EAAb,IAAa,EAAE;YAAhC,IAAM,OAAO,SAAA;YACd,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE;gBACjE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,OAAO;aACV;SACJ;QAED,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IACnE,CAAC;IAEO,sDAA2B,GAAnC,UAAoC,eAAwB;QACxD,IAAI,eAAe,CAAC,QAAQ,EAAE;YAC1B,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC;SACnE;aAAM;YACH,OAAO,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;SACxD;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,cAAc;QAAxB,iBAQC;QAPG,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAE/B,IAAI,CAAC,qBAAqB,GAAG,CAAC,cAAc,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO;YACzB,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAI,CAAC,qBAAqB,CAAC,CAAC;YACvD,KAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAA2B,GAA3B;QAAA,iBAOC;QANG,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;YAC9C,OAAA,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAA3C,CAA2C,CAC9C,CAAC;QAEF,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,6CAAkB,GAAlB;QACI,OAAO,IAAI,CAAC,2BAA2B,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;IAC3D,CAAC;IAED,iDAAsB,GAAtB;QACI,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iDAAsB,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QAC9E,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACtF,CAAC;IAED,4CAAiB,GAAjB,UAAkB,OAAgB;QAC/B;;;;kCAI0B;QAC1B,OAAO,KAAK,CAAC;IAChB,CAAC;IAED,8CAAmB,GAAnB,UAAoB,OAAgB;QAClC;;mCAE2B;QAC3B,OAAO,KAAK,CAAC;IACf,CAAC;;IAvYQ,gBAAgB;QAJ5B,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,0BAA0B;SAC1C,CAAC;qEA6B8B,gCAAc,oBAAd,gCAAc,oDAClB,2BAAa,oBAAb,2BAAa,oDACR,6BAAe,oBAAf,6BAAe,oDACrB,gBAAS,oBAAT,gBAAS,oDACJ,uBAAc,oBAAd,uBAAc,oDACnB,0BAAY,oBAAZ,0BAAY,oDACf,eAAM,oBAAN,eAAM,oDACF,gBAAU,oBAAV,gBAAU,oDACT,kBAAW,oBAAX,kBAAW,oDACV,6BAAe,oBAAf,6BAAe,oDACf,uBAAQ,oBAAR,uBAAQ;OAtCzB,gBAAgB,CAyY5B;IAAD,uBAAC;CAAA,AAzYD,IAyYC;AAzYY,4CAAgB","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {HttpErrorResponse, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {JhiAlertService, JhiDataUtils, JhiEventManager, JhiParseLinks} from 'ng-jhipster';\r\n\r\nimport {Cliente} from 'app/shared/model/cliente.model';\r\nimport {Principal, User, UserService} from 'app/core';\r\n\r\nimport {\r\n    checkAndCompileSearchBetween,\r\n    checkAndCompileSearchFilterContains,\r\n    checkAndCompileSearchFilterEquals,\r\n    ITEMS_PER_PAGE\r\n} from 'app/shared';\r\nimport {ClienteService} from './cliente.service';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MailEtichetteComponent} from 'app/entities/cliente/mail-etichette/mail-etichette.component';\r\nimport {Tag} from 'app/shared/model/tag.model';\r\nimport {TagService} from 'app/entities/tag';\r\n\r\n@Component({\r\n    selector: 'jhi-cliente',\r\n    templateUrl: './cliente.component.html'\r\n})\r\nexport class ClienteComponent implements OnInit, OnDestroy {\r\n    currentAccount: any;\r\n    clientes: Cliente[];\r\n\r\n    tags: Tag[];\r\n    error: any;\r\n    success: any;\r\n    eventSubscriber: Subscription;\r\n    routeDataSubscription: any;\r\n    links: any;\r\n    totalItems: any;\r\n    queryCount: any;\r\n    itemsPerPage: any;\r\n    page: any;\r\n    predicate: any;\r\n    previousPage: any;\r\n    reverse: any;\r\n    completamento: number[];\r\n    users: User[];\r\n\r\n    formCliente: FormGroup;\r\n\r\n    selezionaTuttiClienti = false;\r\n    showIndeterminate = false;\r\n\r\n    private selectedCustomersMap: Map<any, Cliente> = new Map<any, Cliente>();\r\n\r\n    constructor(\r\n        private clienteService: ClienteService,\r\n        private parseLinks: JhiParseLinks,\r\n        private jhiAlertService: JhiAlertService,\r\n        private principal: Principal,\r\n        private activatedRoute: ActivatedRoute,\r\n        private dataUtils: JhiDataUtils,\r\n        private router: Router,\r\n        private tagService: TagService,\r\n        private userService: UserService,\r\n        private eventManager: JhiEventManager,\r\n        private modalService: NgbModal\r\n    ) {\r\n        this.itemsPerPage = ITEMS_PER_PAGE;\r\n        this.routeDataSubscription = this.activatedRoute.data.subscribe(data => {\r\n            this.page = data.pagingParams.page;\r\n            this.previousPage = data.pagingParams.page;\r\n            this.reverse = data.pagingParams.ascending;\r\n            this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAll();\r\n        this.principal.identity().then(account => {\r\n            this.currentAccount = account;\r\n        });\r\n        this.registerChangeInClientes();\r\n\r\n        this.tagService.query().subscribe(\r\n            (res: Tag[]) => {\r\n                this.tags = res;\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n\r\n        this.initFormRicerca();\r\n        this.retrieveUsers();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    initFormRicerca() {\r\n        this.formCliente = new FormGroup({\r\n            codiceFiscale: new FormControl(''),\r\n            nome: new FormControl(''),\r\n            cap: new FormControl(''),\r\n            cognome: new FormControl(''),\r\n            telefonoCellulare: new FormControl(''),\r\n            telefonoFisso: new FormControl(''),\r\n            email: new FormControl(''),\r\n            citta: new FormControl(''),\r\n            indirizzo: new FormControl(''),\r\n            tagId: new FormControl(''),\r\n            punteggioD: new FormControl(''),\r\n            punteggioA: new FormControl(''),\r\n            dataD: new FormControl(''),\r\n            dataA: new FormControl(''),\r\n            importoProvvigioniD: new FormControl(''),\r\n            importoProvvigioniA: new FormControl(''),\r\n            numeroPraticheD: new FormControl(''),\r\n            numeroPraticheA: new FormControl(''),\r\n            numeroSegnalazioniD: new FormControl(''),\r\n            numeroSegnalazioniA: new FormControl(''),\r\n        });\r\n        this.formCliente.updateValueAndValidity();\r\n\r\n        this.tagService.query().subscribe(\r\n            (res: Tag[]) => {\r\n                this.tags = res;\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n    }\r\n\r\n    loadAll() {\r\n        const queryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n\r\n        this.clienteService\r\n            .query(queryParams)\r\n            .subscribe(\r\n                (res: HttpResponse<Cliente[]>) => this.paginateClientes(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    }\r\n\r\n    transition() {\r\n        this.router.navigate(['/cliente'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    }\r\n\r\n    clear() {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/cliente',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    }\r\n\r\n    trackId(index: number, item: Cliente) {\r\n        return item.id;\r\n    }\r\n\r\n    byteSize(field) {\r\n        return this.dataUtils.byteSize(field);\r\n    }\r\n\r\n    openFile(contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    }\r\n\r\n    registerChangeInClientes() {\r\n        this.eventSubscriber = this.eventManager.subscribe('clienteListModification', response => this.loadAll());\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private paginateClientes(data: Cliente[], headers: HttpHeaders) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.clientes = data;\r\n        this.completamento = [];\r\n\r\n        this.showIndeterminate = false;\r\n\r\n        this.clientes.forEach(cliente => {\r\n            this.retrievePercentualeCompletamento(cliente);\r\n\r\n            if (this.selectedCustomersMap[cliente.id]) {\r\n                this.selectClienteAndSetIndeterminate(cliente);\r\n            }\r\n        });\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    private retrievePercentualeCompletamento(current: Cliente) {\r\n        const nCampi = 12;\r\n        let i = 0;\r\n\r\n        if (current.nome != null) {\r\n            i++;\r\n        }\r\n        if (current.cognome != null) {\r\n            i++;\r\n        }\r\n        if (current.dataNascita != null) {\r\n            i++;\r\n        }\r\n        if (current.meseNascita != null) {\r\n            i++;\r\n        }\r\n        if (current.telefonoCellulare != null) {\r\n            i++;\r\n        }\r\n        if (current.email != null) {\r\n            i++;\r\n        }\r\n        if (current.indirizzo != null) {\r\n            i++;\r\n        }\r\n        if (current.cap != null) {\r\n            i++;\r\n        }\r\n        if (current.regione != null) {\r\n            i++;\r\n        }\r\n        if (current.provincia != null) {\r\n            i++;\r\n        }\r\n        if (current.citta != null) {\r\n            i++;\r\n        }\r\n        if (current.note != null) {\r\n            i++;\r\n        }\r\n        const percentuale = (i / nCampi) * 100;\r\n        this.completamento[current.id] = percentuale;\r\n    }\r\n\r\n    retrieveCompletamento(id: any) {\r\n        return this.completamento[id].toPrecision(3);\r\n    }\r\n\r\n    private retrieveUsers() {\r\n        this.userService.query().subscribe(\r\n            (res: HttpResponse<User[]>) => this.users = res.body,\r\n            (res: HttpResponse<any>) => this.onError(res.body)\r\n        );\r\n    }\r\n\r\n    cerca() {\r\n        const formClienteControls = this.formCliente.controls;\r\n\r\n        let searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n\r\n        // filtro codiceFiscale\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codiceFiscale');\r\n        // filtro nome\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'nome');\r\n        // filtro cap\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\r\n        // filtro cognome\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cognome');\r\n        // filtro telefonoCellulare\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoCellulare');\r\n        // filtro telefonoFisso\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'telefonoFisso');\r\n        // filtro email\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'email');\r\n        // filtro Indirizzo\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\r\n        // filtro Citta\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\r\n\r\n        // filtro punteggio Da A\r\n        // searchFilter =  checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'punteggioD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'punteggioA');\r\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'punteggioD', 'punteggioA', 'punteggio');\r\n\r\n        // filtro provvigione Da A\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'importoProvvigioniD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'importoProvvigioniA');\r\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'importoProvvigioniD', 'importoProvvigioniA', 'importoProvvigioni');\r\n\r\n        // filtro praticheDa\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'numeroPraticheD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'numeroPraticheA');\r\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'numeroPraticheD', 'numeroPraticheA', 'numeroPratiche');\r\n\r\n        // filtro Data Nascita Da/A\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'dataD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'dataA');\r\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataD', 'dataA', 'dataNascita');\r\n\r\n        // filtro numero segnalazioni Da/A\r\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'numeroSegnalazioniD', 'numeroSegnalazioniA', 'numeroSegnalazioni');\r\n\r\n        // filtro tag\r\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tagId');\r\n        this.clienteService\r\n            .query(searchFilter)\r\n            .subscribe(\r\n                (res: HttpResponse<Cliente[]>) => this.paginateClientes(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    getOrderByIcon(param: string) {\r\n        if (param === this.predicate) {\r\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\r\n        } else {\r\n            return 'fa-sort';\r\n        }\r\n    }\r\n\r\n    resetFiltri() {\r\n        this.initFormRicerca();\r\n    }\r\n\r\n    selectClienteAndSetIndeterminate(clienteToSelect: Cliente) {\r\n        this.showIndeterminate = false;\r\n        this.selezionaTuttiClienti = false;\r\n\r\n        clienteToSelect.selected = Boolean(!clienteToSelect.selected);\r\n\r\n        this.addOrRemoveSelectedCustomer(clienteToSelect);\r\n\r\n        for (const cliente of this.clientes) {\r\n            if (Boolean(cliente.selected) !== Boolean(clienteToSelect.selected)) {\r\n                this.showIndeterminate = true;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.selezionaTuttiClienti = Boolean(clienteToSelect.selected);\r\n    }\r\n\r\n    private addOrRemoveSelectedCustomer(clienteToSelect: Cliente) {\r\n        if (clienteToSelect.selected) {\r\n            this.selectedCustomersMap[clienteToSelect.id] = clienteToSelect;\r\n        } else {\r\n            delete this.selectedCustomersMap[clienteToSelect.id];\r\n        }\r\n    }\r\n\r\n    selectAll(previousChoice) {\r\n        this.showIndeterminate = false;\r\n\r\n        this.selezionaTuttiClienti = !previousChoice;\r\n        this.clientes.forEach(cliente => {\r\n            cliente.selected = Boolean(this.selezionaTuttiClienti);\r\n            this.addOrRemoveSelectedCustomer(cliente);\r\n        });\r\n    }\r\n\r\n    getSelectedCustomersAsArray(): Array<Cliente> {\r\n        const result = [];\r\n        Object.keys(this.selectedCustomersMap).forEach(key =>\r\n            result.push(this.selectedCustomersMap[key])\r\n        );\r\n\r\n        return result;\r\n    }\r\n\r\n    noCustomerSelected(): boolean {\r\n        return this.getSelectedCustomersAsArray().length === 0;\r\n    }\r\n\r\n    openInvioMailEtichette() {\r\n        const modalRef = this.modalService.open(MailEtichetteComponent, {size: 'lg'});\r\n        modalRef.componentInstance.selectedCustomers = this.getSelectedCustomersAsArray();\r\n    }\r\n\r\n    checkEditAvaiable(cliente: Cliente) {\r\n       /* console.log('edit' + cliente.editAvaiable);\r\n        if (cliente.editAvaiable) {\r\n            console.log(cliente.editAvaiable);\r\n            return false;\r\n        } else { return true; }*/\r\n       return false;\r\n    }\r\n\r\n    checkDeleteAvaiable(cliente: Cliente) {\r\n      /*  if (cliente.deleteAvaiable) {\r\n            return false;\r\n        } else { return true; }*/\r\n      return false;\r\n    }\r\n\r\n}\r\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\lista-contatti\\lista-contatti.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\lista-contatti\\lista-contatti.component.ts","mtime":1548761753171},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar lista_contatti_model_1 = require(\"app/shared/model/lista-contatti.model\");\r\nvar core_2 = require(\"app/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar cliente_service_1 = require(\"../cliente/cliente.service\");\r\nvar lista_contatti_service_1 = require(\"./lista-contatti.service\");\r\nvar moment = require(\"moment\");\r\nvar date_util_1 = require(\"app/shared/util/date-util\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar incarico_service_1 = require(\"../incarico/incarico.service\");\r\nvar handler_util_1 = require(\"app/shared/util/handler-util\");\r\nvar ListaContattiComponent = /** @class */ (function () {\r\n    function ListaContattiComponent(clienteService, listaContattiService, parseLinks, jhiAlertService, principal, activatedRoute, dataUtils, incaricoService, router, eventManager) {\r\n        var _this = this;\r\n        this.clienteService = clienteService;\r\n        this.listaContattiService = listaContattiService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.principal = principal;\r\n        this.activatedRoute = activatedRoute;\r\n        this.dataUtils = dataUtils;\r\n        this.incaricoService = incaricoService;\r\n        this.router = router;\r\n        this.eventManager = eventManager;\r\n        this.statiChiamata = [\r\n            lista_contatti_model_1.EsitoChiamata.ESEGUITA.valueOf(),\r\n            lista_contatti_model_1.EsitoChiamata.NON_RAGGIUNGIBILE.valueOf(),\r\n            lista_contatti_model_1.EsitoChiamata.OCCUPATO.valueOf(),\r\n            lista_contatti_model_1.EsitoChiamata.NON_INTERESSATO.valueOf()\r\n        ];\r\n        this.searchClientes = function (text$) {\r\n            return text$.pipe(operators_1.debounceTime(200), operators_1.map(function (term) { return term === '' ? []\r\n                : _this.clientes.filter(function (v) { return v.cognome.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n                    || v.nome.toLowerCase().indexOf(term.toLowerCase()) > -1; }).slice(0, 10); }));\r\n        };\r\n        this.searchIncarico = function (text$) {\r\n            return text$.pipe(operators_1.debounceTime(200), operators_1.map(function (term) { return term === '' ? []\r\n                : _this.incaricos.filter(function (v) { return v.riferimento.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n                    || v.tipo.toLowerCase().indexOf(term.toLowerCase()) > -1 || v.id > -1; }).slice(0, 10); }));\r\n        };\r\n        // clienteFormatter = (x: Cliente) => x ? (x.cognome + ' ' + x.nome + ' (' + x.codiceFiscale + ')') : '';\r\n        this.clienteFormatter = function (x) { return x ? (x.cognome + ' ' + x.nome) : ''; };\r\n        this.incaricoFormatter = function (x) { return x ? (x.riferimento + ' ' + x.tipo + ' (' + x.id + ') ') : ''; };\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n    ListaContattiComponent.prototype.initFormRicerca = function () {\r\n        this.listaContattiForm = new forms_1.FormGroup({\r\n            dataDa: new forms_1.FormControl(''),\r\n            dataA: new forms_1.FormControl(''),\r\n            esito: new forms_1.FormControl(''),\r\n            cliente: new forms_1.FormControl(''),\r\n            motivazione: new forms_1.FormControl(''),\r\n            incarico: new forms_1.FormControl('')\r\n        });\r\n        this.listaContattiForm.updateValueAndValidity();\r\n    };\r\n    ListaContattiComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        this.listaContattiService\r\n            .query({\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) { return _this.paginateListaContattis(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ListaContattiComponent.prototype.retrieveIncarichi = function () {\r\n        var _this = this;\r\n        this.incaricoService\r\n            .query({\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) { return _this.incaricos = res.body; }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ListaContattiComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    ListaContattiComponent.prototype.transition = function () {\r\n        this.router.navigate(['/lista-contatti'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    ListaContattiComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/lista-contatti',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    ListaContattiComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.principal.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.registerChangeInListaContattis();\r\n        handler_util_1.closeSubscription(this.clientiSubscription);\r\n        this.clientiSubscription = this.clienteService.query().subscribe(function (res) { return _this.clientes = res.body; }, function (res) { return _this.onError(res.message); });\r\n        this.initFormRicerca();\r\n        this.retrieveIncarichi();\r\n    };\r\n    ListaContattiComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    ListaContattiComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ListaContattiComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    ListaContattiComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    ListaContattiComponent.prototype.registerChangeInListaContattis = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('listaContattiListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    ListaContattiComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    ListaContattiComponent.prototype.paginateListaContattis = function (data, headers) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.listaContattis = data;\r\n    };\r\n    ListaContattiComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    ListaContattiComponent.prototype.resetFiltri = function () {\r\n        this.initFormRicerca();\r\n    };\r\n    ListaContattiComponent.prototype.cerca = function () {\r\n        var _this = this;\r\n        var listaContattiFormControls = this.listaContattiForm.controls;\r\n        // filtro data inizio\r\n        var dataInizio;\r\n        var dataDa = listaContattiFormControls['dataDa'].value;\r\n        if (dataDa) {\r\n            dataInizio = date_util_1.toTimestampInizio(moment(dataDa));\r\n        }\r\n        // filtro data fine\r\n        var dataFine;\r\n        var dataA = listaContattiFormControls['dataA'].value;\r\n        if (dataA) {\r\n            dataFine = date_util_1.toTimestampFine(moment(dataA));\r\n        }\r\n        // filtro cliente\r\n        var idCliente = '';\r\n        var cliente = listaContattiFormControls['cliente'].value;\r\n        if (cliente) {\r\n            idCliente = cliente.id.toString();\r\n        }\r\n        // filtro cliente\r\n        var idIncarico = '';\r\n        var incarico = listaContattiFormControls['incarico'].value;\r\n        if (incarico) {\r\n            idIncarico = incarico.id.toString();\r\n        }\r\n        // filtro esito\r\n        var esito = listaContattiFormControls['esito'].value;\r\n        // filtro motivazione\r\n        var motivazione = listaContattiFormControls['motivazione'].value;\r\n        var listaContattiQueryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort(),\r\n            'dateTime.greaterOrEqualThan': dataInizio && dataInizio.isValid() ? dataInizio.toJSON() : '',\r\n            'dateTime.lessOrEqualThan': dataFine && dataFine.isValid() ? dataFine.toJSON() : '',\r\n            'esito.equals': esito,\r\n            'clienteId.equals': idCliente,\r\n            'motivazione.contains': motivazione,\r\n            'incaricoId.equals': idIncarico\r\n        };\r\n        this.listaContattiService.query(listaContattiQueryParams).subscribe(function (res) { return _this.paginateListaContattis(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ListaContattiComponent.prototype.getOrderByIcon = function (param) {\r\n        if (param === this.predicate) {\r\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\r\n        }\r\n        else {\r\n            return 'fa-sort';\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    ListaContattiComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-lista-contatti',\r\n            templateUrl: './lista-contatti.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof cliente_service_1.ClienteService !== \"undefined\" && cliente_service_1.ClienteService) === \"function\" ? _a : Object, typeof (_b = typeof lista_contatti_service_1.ListaContattiService !== \"undefined\" && lista_contatti_service_1.ListaContattiService) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _d : Object, typeof (_e = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _e : Object, typeof (_f = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _f : Object, typeof (_g = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _g : Object, typeof (_h = typeof incarico_service_1.IncaricoService !== \"undefined\" && incarico_service_1.IncaricoService) === \"function\" ? _h : Object, typeof (_j = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _j : Object, typeof (_k = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _k : Object])\r\n    ], ListaContattiComponent);\r\n    return ListaContattiComponent;\r\n}());\r\nexports.ListaContattiComponent = ListaContattiComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\lista-contatti\\lista-contatti.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\lista-contatti\\lista-contatti.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {HttpErrorResponse, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {JhiAlertService, JhiDataUtils, JhiEventManager, JhiParseLinks} from 'ng-jhipster';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {EsitoChiamata, ListaContatti} from 'app/shared/model/lista-contatti.model';\r\nimport {Cliente} from 'app/shared/model/cliente.model';\r\nimport {Principal} from 'app/core';\r\nimport {ITEMS_PER_PAGE} from 'app/shared';\r\nimport {ClienteService} from '../cliente/cliente.service';\r\nimport {ListaContattiService} from './lista-contatti.service';\r\nimport * as moment from 'moment';\r\nimport {toTimestampFine, toTimestampInizio} from 'app/shared/util/date-util';\r\nimport {debounceTime, map} from 'rxjs/operators';\r\nimport {IncaricoService} from '../incarico/incarico.service';\r\nimport {Incarico} from 'app/shared/model/incarico.model';\r\nimport {closeSubscription} from 'app/shared/util/handler-util';\r\n\r\n@Component({\r\n    selector: 'jhi-lista-contatti',\r\n    templateUrl: './lista-contatti.component.html'\r\n})\r\nexport class ListaContattiComponent implements OnInit, OnDestroy {\r\n    currentAccount: any;\r\n    listaContattis: ListaContatti[];\r\n    error: any;\r\n    success: any;\r\n    eventSubscriber: Subscription;\r\n    routeData: any;\r\n    links: any;\r\n    totalItems: any;\r\n    queryCount: any;\r\n    itemsPerPage: any;\r\n    page: any;\r\n    predicate: any;\r\n    previousPage: any;\r\n    reverse: any;\r\n    listaContattiForm: FormGroup;\r\n    clientes: Cliente[];\r\n    incaricos: Incarico[];\r\n    private clientiSubscription: Subscription;\r\n\r\n    statiChiamata = [\r\n        EsitoChiamata.ESEGUITA.valueOf(),\r\n        EsitoChiamata.NON_RAGGIUNGIBILE.valueOf(),\r\n        EsitoChiamata.OCCUPATO.valueOf(),\r\n        EsitoChiamata.NON_INTERESSATO.valueOf()\r\n    ];\r\n\r\n    constructor(\r\n        private clienteService: ClienteService,\r\n        private listaContattiService: ListaContattiService,\r\n        private parseLinks: JhiParseLinks,\r\n        private jhiAlertService: JhiAlertService,\r\n        private principal: Principal,\r\n        private activatedRoute: ActivatedRoute,\r\n        private dataUtils: JhiDataUtils,\r\n        private incaricoService: IncaricoService,\r\n        private router: Router,\r\n        private eventManager: JhiEventManager\r\n    ) {\r\n        this.itemsPerPage = ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(data => {\r\n            this.page = data.pagingParams.page;\r\n            this.previousPage = data.pagingParams.page;\r\n            this.reverse = data.pagingParams.ascending;\r\n            this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n\r\n    initFormRicerca() {\r\n        this.listaContattiForm = new FormGroup({\r\n            dataDa: new FormControl(''),\r\n            dataA: new FormControl(''),\r\n            esito: new FormControl(''),\r\n            cliente: new FormControl(''),\r\n            motivazione: new FormControl(''),\r\n            incarico: new FormControl('')\r\n        });\r\n        this.listaContattiForm.updateValueAndValidity();\r\n    }\r\n\r\n    loadAll() {\r\n        this.listaContattiService\r\n            .query({\r\n                page: this.page - 1,\r\n                size: this.itemsPerPage,\r\n                sort: this.sort()\r\n            })\r\n            .subscribe(\r\n                (res: HttpResponse<ListaContatti[]>) => this.paginateListaContattis(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    retrieveIncarichi() {\r\n        this.incaricoService\r\n            .query({\r\n                page: this.page - 1,\r\n                size: this.itemsPerPage,\r\n                sort: this.sort()\r\n            })\r\n            .subscribe(\r\n                (res: HttpResponse<Incarico[]>) => this.incaricos = res.body,\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    searchClientes = (text$: Observable<string>) =>\r\n        text$.pipe(\r\n            debounceTime(200),\r\n            map(term => term === '' ? []\r\n                : this.clientes.filter(v => v.cognome.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n                    || v.nome.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10))\r\n        );\r\n\r\n    searchIncarico = (text$: Observable<string>) =>\r\n        text$.pipe(\r\n            debounceTime(200),\r\n            map(term => term === '' ? []\r\n                : this.incaricos.filter(v => v.riferimento.toLowerCase().indexOf(term.toLowerCase()) > -1\r\n                    || v.tipo.toLowerCase().indexOf(term.toLowerCase()) > -1 || v.id > -1).slice(0, 10))\r\n        );\r\n\r\n    // clienteFormatter = (x: Cliente) => x ? (x.cognome + ' ' + x.nome + ' (' + x.codiceFiscale + ')') : '';\r\n    clienteFormatter = (x: Cliente) => x ? (x.cognome + ' ' + x.nome) : '';\r\n    incaricoFormatter = (x: Incarico) => x ? (x.riferimento + ' ' + x.tipo + ' (' + x.id + ') ') : '';\r\n\r\n    loadPage(page: number) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    }\r\n\r\n    transition() {\r\n        this.router.navigate(['/lista-contatti'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    }\r\n\r\n    clear() {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/lista-contatti',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAll();\r\n        this.principal.identity().then(account => {\r\n            this.currentAccount = account;\r\n        });\r\n        this.registerChangeInListaContattis();\r\n\r\n        closeSubscription(this.clientiSubscription);\r\n        this.clientiSubscription = this.clienteService.query().subscribe(\r\n            (res: HttpResponse<Cliente[]>) => this.clientes = res.body,\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n        this.initFormRicerca();\r\n        this.retrieveIncarichi();\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    trackId(index: number, item: ListaContatti) {\r\n        return item.id;\r\n    }\r\n\r\n    byteSize(field) {\r\n        return this.dataUtils.byteSize(field);\r\n    }\r\n\r\n    openFile(contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    }\r\n\r\n    registerChangeInListaContattis() {\r\n        this.eventSubscriber = this.eventManager.subscribe('listaContattiListModification', response => this.loadAll());\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private paginateListaContattis(data: ListaContatti[], headers: HttpHeaders) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.listaContattis = data;\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    resetFiltri() {\r\n        this.initFormRicerca();\r\n    }\r\n\r\n    cerca() {\r\n        const listaContattiFormControls = this.listaContattiForm.controls;\r\n        // filtro data inizio\r\n        let dataInizio: moment.Moment;\r\n        const dataDa = listaContattiFormControls['dataDa'].value;\r\n        if (dataDa) {\r\n            dataInizio = toTimestampInizio(moment(dataDa));\r\n        }\r\n\r\n        // filtro data fine\r\n        let dataFine: moment.Moment;\r\n        const dataA = listaContattiFormControls['dataA'].value;\r\n        if (dataA) {\r\n            dataFine = toTimestampFine(moment(dataA));\r\n        }\r\n\r\n        // filtro cliente\r\n        let idCliente = '';\r\n        const cliente = listaContattiFormControls['cliente'].value;\r\n        if (cliente) {\r\n            idCliente = cliente.id.toString();\r\n        }\r\n\r\n        // filtro cliente\r\n        let idIncarico = '';\r\n        const incarico = listaContattiFormControls['incarico'].value;\r\n        if (incarico) {\r\n            idIncarico = incarico.id.toString();\r\n        }\r\n\r\n        // filtro esito\r\n        const esito: String = listaContattiFormControls['esito'].value;\r\n\r\n        // filtro motivazione\r\n        const motivazione: String = listaContattiFormControls['motivazione'].value;\r\n\r\n        const listaContattiQueryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort(),\r\n            'dateTime.greaterOrEqualThan': dataInizio && dataInizio.isValid() ? dataInizio.toJSON() : '',\r\n            'dateTime.lessOrEqualThan': dataFine && dataFine.isValid() ? dataFine.toJSON() : '',\r\n            'esito.equals': esito,\r\n            'clienteId.equals': idCliente,\r\n            'motivazione.contains': motivazione,\r\n            'incaricoId.equals': idIncarico\r\n        };\r\n\r\n        this.listaContattiService.query(listaContattiQueryParams).subscribe(\r\n            (res: HttpResponse<ListaContatti[]>) => this.paginateListaContattis(res.body, res.headers),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n    }\r\n\r\n    getOrderByIcon(param: string) {\r\n        if (param === this.predicate) {\r\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\r\n        } else {\r\n            return 'fa-sort';\r\n        }\r\n    }\r\n}\r\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico-update.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico-update.component.ts","mtime":1548761752876},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar incarico_model_1 = require(\"app/shared/model/incarico.model\");\r\nvar incarico_service_1 = require(\"./incarico.service\");\r\nvar partner_1 = require(\"app/entities/partner\");\r\nvar cliente_1 = require(\"app/entities/cliente\");\r\nvar immobile_1 = require(\"app/entities/immobile\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar core_2 = require(\"app/core\");\r\nvar tag_model_1 = require(\"app/shared/model/tag.model\");\r\nvar handler_util_1 = require(\"app/shared/util/handler-util\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar cliente_util_1 = require(\"app/entities/cliente/cliente-util\");\r\nvar immobile_util_1 = require(\"app/entities/immobile/immobile-util\");\r\nvar util_1 = require(\"util\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar lista_contatti_1 = require(\"app/entities/lista-contatti\");\r\nvar cambio_stato_modal_component_1 = require(\"app/entities/incarico/cambio-stato-modal/cambio-stato-modal.component\");\r\nvar IncaricoUpdateComponent = /** @class */ (function () {\r\n    function IncaricoUpdateComponent(dataUtils, jhiAlertService, incaricoService, listaContattiService, partnerService, clienteService, immobileService, userService, activatedRoute, router, modalService) {\r\n        var _this = this;\r\n        this.dataUtils = dataUtils;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.incaricoService = incaricoService;\r\n        this.listaContattiService = listaContattiService;\r\n        this.partnerService = partnerService;\r\n        this.clienteService = clienteService;\r\n        this.immobileService = immobileService;\r\n        this.userService = userService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.modalService = modalService;\r\n        this.clientes = [];\r\n        this.committenti = [];\r\n        this.proponenti = [];\r\n        this.acquirenti = [];\r\n        this.segnalatori = [];\r\n        this.validator = shared_1.IMPORT_VALIDATOR;\r\n        this.tagEnum = tag_model_1.TagEnum;\r\n        this.partnerFocus$ = new rxjs_1.Subject();\r\n        this.partnerClick$ = new rxjs_1.Subject();\r\n        this.immobileFocus$ = new rxjs_1.Subject();\r\n        this.immobileClick$ = new rxjs_1.Subject();\r\n        this.incaricoStatutes = { changeStatusEnabled: false };\r\n        this.searchPartner = function (text$) {\r\n            var debouncedText$ = text$.pipe(operators_1.debounceTime(200), operators_1.distinctUntilChanged());\r\n            var clicksWithClosedPopup$ = _this.partnerClick$.pipe(operators_1.filter(function () { return !_this.partnerTypeahead.isPopupOpen(); }));\r\n            var inputFocus$ = _this.partnerFocus$;\r\n            return rxjs_1.merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(operators_1.map(function (term) { return (term === '' ?\r\n                _this.getAvailablePartners() : _this.getAvailablePartners()\r\n                .filter(function (v) { return v.toLowerCase().indexOf(term.toLowerCase()) > -1; })).slice(0, 10); }));\r\n        };\r\n        this.searchImmobile = function (text$) {\r\n            var debouncedText$ = text$.pipe(operators_1.debounceTime(200), operators_1.distinctUntilChanged());\r\n            var clicksWithClosedPopup$ = _this.immobileClick$.pipe(operators_1.filter(function () { return !_this.immobileTypeahead.isPopupOpen(); }));\r\n            return rxjs_1.merge(debouncedText$, _this.immobileFocus$, clicksWithClosedPopup$).pipe(operators_1.map(function (term) { return (term === '' ?\r\n                _this.getAvailableImmobili() : _this.getAvailableImmobili()\r\n                .filter(function (v) { return v.toLowerCase().indexOf(term.toLowerCase()) > -1; })).slice(0, 10); }));\r\n        };\r\n    }\r\n    IncaricoUpdateComponent.prototype.ngOnInit = function () {\r\n        this.isSaving = false;\r\n        this.init();\r\n        this.retrieveStatuses();\r\n        this.retrieveClienti();\r\n        this.retrievePartner();\r\n        this.retrieveImmobili();\r\n        this.retrieveUsersAgents();\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrieveRelalationListsComingFromOtherComponents = function () {\r\n        var _this = this;\r\n        // Se si arriva a questa pagina venendo da /cliente/:id/edit\r\n        var routeSnapshotQueryParamMap = this.activatedRoute.snapshot.queryParamMap;\r\n        var clienteRef = routeSnapshotQueryParamMap.get('clienteRef') || null;\r\n        if (clienteRef) {\r\n            handler_util_1.closeSubscription(this.clienteSubscription);\r\n            this.clienteSubscription = this.clienteService.find(clienteRef).subscribe(function (res) {\r\n                _this.incarico.committentes.push(res.body);\r\n                _this.checkClientiAndUpdateListaContattiAndSelect();\r\n            }, function (res) { return _this.onError(res.message); });\r\n        }\r\n        // Se si arriva a questa pagina venendo da /immobile/:id/edit\r\n        var immobileRef = routeSnapshotQueryParamMap.get('immobileRef') || null;\r\n        if (immobileRef) {\r\n            handler_util_1.closeSubscription(this.immobileSubscription);\r\n            this.immobileSubscription = this.immobileService.find(immobileRef).subscribe(function (res) {\r\n                var incarico = res.body;\r\n                _this.selectImmobile(incarico);\r\n                _this.retrieveImmobili();\r\n            }, function (res) { return _this.onError(res.message); });\r\n        }\r\n        // Se si arriva a questa pagina venendo da /partner/:id/edit\r\n        var partnerRef = routeSnapshotQueryParamMap.get('partnerRef') || null;\r\n        if (partnerRef) {\r\n            handler_util_1.closeSubscription(this.partnerSubscription);\r\n            this.partnerSubscription = this.partnerService.find(partnerRef).subscribe(function (res) {\r\n                _this.incarico.partners.push(res.body);\r\n            }, function (res) { return _this.onError(res.message); });\r\n        }\r\n    };\r\n    IncaricoUpdateComponent.prototype.selectImmobile = function (incarico) {\r\n        this.incarico.immobileId = incarico.id;\r\n        this.incarico.immobileCodice = incarico.codice;\r\n        this.selectedImmobile = incarico;\r\n    };\r\n    IncaricoUpdateComponent.prototype.ngOnDestroy = function () {\r\n        handler_util_1.closeSubscription(this.clientiSubscription);\r\n        handler_util_1.closeSubscription(this.incaricoSubscription);\r\n        handler_util_1.closeSubscription(this.immobileSubscription);\r\n        handler_util_1.closeSubscription(this.permissionSubscription);\r\n        handler_util_1.closeSubscription(this.clienteSubscription);\r\n        handler_util_1.closeSubscription(this.partnerSubscription);\r\n        handler_util_1.closeSubscription(this.immobiliSubscription);\r\n        handler_util_1.closeSubscription(this.partnersSubscription);\r\n        handler_util_1.closeSubscription(this.usersSubscription);\r\n    };\r\n    IncaricoUpdateComponent.prototype.init = function () {\r\n        var _this = this;\r\n        this.activatedRoute.data.subscribe(function (data) {\r\n            _this.isNew = Boolean(data['isNew']);\r\n            _this.initStatiIncarico();\r\n            _this.initTipiNegoziazione();\r\n            _this.incarico = data['incarico'];\r\n            _this.incarico.committentes = _this.incarico.committentes || [];\r\n            _this.incarico.proponentes = _this.incarico.proponentes || [];\r\n            _this.incarico.acquirenteLocatarios = _this.incarico.acquirenteLocatarios || [];\r\n            _this.incarico.segnalatores = _this.incarico.segnalatores || [];\r\n            if (_this.isNew) {\r\n                _this.incarico.stato = incarico_model_1.StatoIncarico.BOZZA;\r\n                _this.incarico.alertFiscali = incarico_model_1.BooleanStatus.SI;\r\n                _this.incarico.alertCortesia = incarico_model_1.BooleanStatus.SI;\r\n            }\r\n            else {\r\n                if (_this.incarico.id) {\r\n                    _this.permissionSubscription = _this.incaricoService.retrievePermission(_this.incarico.id)\r\n                        .subscribe(function (permission) {\r\n                        _this.readOnly = permission;\r\n                    });\r\n                }\r\n                if (_this.incarico.immobileId != null) {\r\n                    var immobileIdStr = String(_this.incarico.immobileId);\r\n                    _this.immobileSubscription = _this.immobileService.find(immobileIdStr).subscribe(function (res) {\r\n                        if (res.body != null) {\r\n                            _this.selectImmobile(res.body);\r\n                        }\r\n                    });\r\n                }\r\n                _this.checkClientiAndUpdateListaContattiAndSelect();\r\n                _this.retrieveRelalationListsComingFromOtherComponents();\r\n            }\r\n        });\r\n    };\r\n    IncaricoUpdateComponent.prototype.checkClientiAndUpdateListaContattiAndSelect = function () {\r\n        var _this = this;\r\n        if (this.incarico.committentes && this.incarico.committentes.length > 0) {\r\n            var listaCommittenteId = this.incarico.committentes.map(function (incarico) { return incarico.id; });\r\n            var listaContattiQueryParams = {\r\n                'clienteId.in': listaCommittenteId.join()\r\n            };\r\n            this.listaContattiService.query(listaContattiQueryParams).subscribe(function (res) { return _this.listaContatti = res.body; }, function (res) { return _this.onError(res.message); });\r\n        }\r\n        else {\r\n            this.listaContatti = [];\r\n        }\r\n    };\r\n    IncaricoUpdateComponent.prototype.initStatiIncarico = function () {\r\n        var _a;\r\n        this.statiIncarico = [incarico_model_1.StatoIncarico.BOZZA];\r\n        if (!this.isNew) {\r\n            (_a = this.statiIncarico).push.apply(_a, [\r\n                incarico_model_1.StatoIncarico.ATTIVO,\r\n                incarico_model_1.StatoIncarico.CONCLUSO,\r\n                incarico_model_1.StatoIncarico.INTERROTTO,\r\n                incarico_model_1.StatoIncarico.SCADUTO\r\n            ]);\r\n        }\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrieveClienti = function () {\r\n        var _this = this;\r\n        this.clientiSubscription = this.clienteService.query().subscribe(function (res) {\r\n            if (res.body != null) {\r\n                _this.clientes = res.body;\r\n                _this.filterClientiByTag();\r\n            }\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoUpdateComponent.prototype.filterClientiByTag = function () {\r\n        var _this = this;\r\n        this.clientes.forEach(function (cliente) {\r\n            for (var _i = 0, _a = cliente.tags; _i < _a.length; _i++) {\r\n                var tag = _a[_i];\r\n                if (tag.codice === tag_model_1.TagEnum.COMMITTENTE) {\r\n                    _this.committenti.push(cliente);\r\n                }\r\n                if (tag.codice === tag_model_1.TagEnum.PROPONENTE) {\r\n                    _this.proponenti.push(cliente);\r\n                }\r\n                if (tag.codice === tag_model_1.TagEnum.ACQUIRENTE_CONDUTTORE) {\r\n                    _this.acquirenti.push(cliente);\r\n                }\r\n                if (tag.codice === tag_model_1.TagEnum.SEGNALATORE) {\r\n                    _this.segnalatori.push(cliente);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    IncaricoUpdateComponent.prototype.statoIncaricoIsDisabled = function () {\r\n        return this.readAuth() || this.isNew;\r\n    };\r\n    IncaricoUpdateComponent.prototype.readAuth = function () {\r\n        return this.readOnly;\r\n    };\r\n    IncaricoUpdateComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    IncaricoUpdateComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    IncaricoUpdateComponent.prototype.previousState = function () {\r\n        // window.history.back();\r\n        this.router.navigate(['incarico'], {});\r\n    };\r\n    IncaricoUpdateComponent.prototype.save = function () {\r\n        var _this = this;\r\n        this.isSaving = true;\r\n        this.setIncaricoPropertiesOnTipoLocazione();\r\n        handler_util_1.closeSubscription(this.incaricoSubscription);\r\n        if (this.incarico.id !== undefined) {\r\n            this.incaricoSubscription = this.incaricoService.update(this.incarico).subscribe(function () { return _this.onSaveSuccess(); }, function () { return _this.onSaveError(); });\r\n        }\r\n        else {\r\n            this.incaricoSubscription = this.incaricoService.create(this.incarico).subscribe(function () { return _this.onSaveSuccess(); }, function () { return _this.onSaveError(); });\r\n        }\r\n    };\r\n    IncaricoUpdateComponent.prototype.setIncaricoPropertiesOnTipoLocazione = function () {\r\n        if (this.tipoIncaricoIsLocazione()) {\r\n            this.incarico.flagLocato = null;\r\n            this.incarico.nomeConduttore = null;\r\n            this.incarico.nomeConduttore = null;\r\n            this.incarico.dataInizioLocazione = null;\r\n            this.incarico.dataFineLocazione = null;\r\n            this.incarico.noteLocazione = null;\r\n        }\r\n    };\r\n    IncaricoUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    IncaricoUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    IncaricoUpdateComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrievePartner = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.partnersSubscription);\r\n        this.partnersSubscription = this.partnerService.query().subscribe(function (res) {\r\n            if (res.body != null) {\r\n                _this.partners = res.body;\r\n                if (_this.incarico.partners != null) {\r\n                    _this.incarico.partners.forEach(function (partner) {\r\n                        _this.partners = _this.partners.filter(function (order) { return order.id !== partner.id; });\r\n                    });\r\n                }\r\n                _this.retrievePartnerItems();\r\n            }\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrieveImmobili = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.immobiliSubscription);\r\n        this.immobiliSubscription = this.immobileService.query().subscribe(function (res) {\r\n            if (res.body != null) {\r\n                _this.immobili = res.body;\r\n            }\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrievePartnerItems = function () {\r\n        var _this = this;\r\n        var id = 0;\r\n        this.partnerItems = [];\r\n        this.partners.forEach(function (el) {\r\n            var partnerItem = {\r\n                label: el.cognome + ' ' + el.nome,\r\n                value: { id: id, name: el.cognome, code: el.id }\r\n            };\r\n            _this.partnerItems.push(partnerItem);\r\n            id += 1;\r\n        });\r\n    };\r\n    IncaricoUpdateComponent.prototype.initTipiNegoziazione = function () {\r\n        this.tipiNegoziazione = [\r\n            incarico_model_1.TipoNegoziazione.COMPRAVENDITA,\r\n            incarico_model_1.TipoNegoziazione.LOCAZIONE,\r\n            incarico_model_1.TipoNegoziazione.PRATICA_TECNICA,\r\n            incarico_model_1.TipoNegoziazione.PRATICA_LEGALE,\r\n            incarico_model_1.TipoNegoziazione.MUTUO,\r\n            incarico_model_1.TipoNegoziazione.SERVIZI_ACCESSORI,\r\n            incarico_model_1.TipoNegoziazione.ALTRO\r\n        ];\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrieveUsersAgents = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.usersSubscription);\r\n        this.usersSubscription = this.userService.queryAgents().subscribe(function (res) {\r\n            _this.users = res.body;\r\n            if (_this.users && _this.users.length === 1) {\r\n                _this.incarico.agente = _this.users[0].login;\r\n            }\r\n        }, function (res) { return _this.onError(res.body); });\r\n    };\r\n    IncaricoUpdateComponent.prototype.tipoIncaricoIsLocazione = function () {\r\n        return this.incarico.tipo === incarico_model_1.TipoNegoziazione.LOCAZIONE;\r\n    };\r\n    IncaricoUpdateComponent.prototype.getIncaricoId = function () {\r\n        return this.isNew ? '0' : this.incarico.id;\r\n    };\r\n    IncaricoUpdateComponent.prototype.onSelectPartner = function (ngbTypeaheadSelectItem) {\r\n        ngbTypeaheadSelectItem.preventDefault();\r\n        var partnerFound = this.partners.find(function (partner) {\r\n            return cliente_util_1.getFormattedNomeCognomeAsString(partner) === ngbTypeaheadSelectItem.item;\r\n        });\r\n        if (partnerFound) {\r\n            this.incarico.partners.push(partnerFound);\r\n        }\r\n        this.partnerTypeahead.writeValue('');\r\n    };\r\n    IncaricoUpdateComponent.prototype.getAvailablePartners = function () {\r\n        var _this = this;\r\n        var result = [];\r\n        this.partners.forEach(function (cliente) {\r\n            var toAdd = true;\r\n            for (var _i = 0, _a = _this.incarico.partners; _i < _a.length; _i++) {\r\n                var incaricoCliente = _a[_i];\r\n                if (incaricoCliente.id === cliente.id) {\r\n                    toAdd = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (toAdd) {\r\n                result.push(cliente_util_1.getFormattedNomeCognomeAsString(cliente));\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    IncaricoUpdateComponent.prototype.rimuoviPartner = function (partner) {\r\n        var indexOf = this.incarico.partners.indexOf(partner);\r\n        this.incarico.partners.splice(indexOf, 1);\r\n    };\r\n    IncaricoUpdateComponent.prototype.nuovoPartner = function () {\r\n        var navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/partner/new'], navigationExtras);\r\n    };\r\n    IncaricoUpdateComponent.prototype.isPartnerSelezionati = function () {\r\n        return this.incarico && this.incarico.partners && this.incarico.partners.length > 0;\r\n    };\r\n    IncaricoUpdateComponent.prototype.getAvailableImmobili = function () {\r\n        var _this = this;\r\n        var result = [];\r\n        this.immobili.forEach(function (immobile) {\r\n            if (util_1.isNullOrUndefined(_this.selectedImmobile) || immobile.id !== _this.selectedImmobile.id) {\r\n                result.push(immobile_util_1.getFormattedCodiceIndirizzoAsString(immobile));\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    IncaricoUpdateComponent.prototype.nuovoImmobile = function () {\r\n        var navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/immobile/new'], navigationExtras);\r\n    };\r\n    IncaricoUpdateComponent.prototype.onSelectImmobile = function (ngbTypeaheadSelectItem) {\r\n        ngbTypeaheadSelectItem.preventDefault();\r\n        var selectedItem = ngbTypeaheadSelectItem.item;\r\n        var immobileFound = this.immobili.find(function (immobile) {\r\n            return immobile_util_1.getFormattedCodiceIndirizzoAsString(immobile) === selectedItem;\r\n        });\r\n        if (immobileFound) {\r\n            this.selectImmobile(immobileFound);\r\n        }\r\n        this.immobileTypeahead.writeValue('');\r\n    };\r\n    IncaricoUpdateComponent.prototype.isImmobileSelected = function () {\r\n        return !util_1.isNullOrUndefined(this.selectedImmobile) &&\r\n            !util_1.isNullOrUndefined(this.selectedImmobile.id);\r\n    };\r\n    IncaricoUpdateComponent.prototype.rimuoviImmobile = function () {\r\n        this.incarico.immobileCodice = null;\r\n        this.incarico.immobileId = null;\r\n        this.selectedImmobile = null;\r\n    };\r\n    IncaricoUpdateComponent.prototype.visualizzaDettaglioImmobile = function () {\r\n        var navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/immobile', this.selectedImmobile.id, 'view'], navigationExtras);\r\n    };\r\n    IncaricoUpdateComponent.prototype.newContatto = function () {\r\n        var navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/lista-contatti/new'], navigationExtras);\r\n    };\r\n    IncaricoUpdateComponent.prototype.onCommittentiChanges = function (cliente) {\r\n        this.checkClientiAndUpdateListaContattiAndSelect();\r\n    };\r\n    IncaricoUpdateComponent.prototype.isImmobileRequired = function () {\r\n        return this.incarico.tipo === incarico_model_1.TipoNegoziazione.LOCAZIONE ||\r\n            this.incarico.tipo === incarico_model_1.TipoNegoziazione.COMPRAVENDITA;\r\n    };\r\n    IncaricoUpdateComponent.prototype.hideImmobileRequired = function () {\r\n        return !this.isImmobileRequired() ||\r\n            this.isImmobileRequired() && this.isImmobileSelected();\r\n    };\r\n    IncaricoUpdateComponent.prototype.isSaveButtonDisabled = function () {\r\n        return this.isSaving ||\r\n            !this.hideImmobileRequired() ||\r\n            (this.formIncarico &&\r\n                this.formIncarico['form'] &&\r\n                this.formIncarico['form'].invalid);\r\n    };\r\n    IncaricoUpdateComponent.prototype.retrieveStatuses = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.getStatusSubscription);\r\n        this.getStatusSubscription = this.incaricoService.getStatus(this.incarico.id).subscribe(function (incaricoStatutes) {\r\n            _this.incaricoStatutes = incaricoStatutes;\r\n        }, function (error) { return _this.onError(error.message); });\r\n    };\r\n    IncaricoUpdateComponent.prototype.openChangeStatusModal = function () {\r\n        var _this = this;\r\n        var modalInstance = this.modalService.open(cambio_stato_modal_component_1.CambioStatoModalComponent);\r\n        modalInstance.componentInstance.statiIncarico = this.incaricoStatutes.statuses;\r\n        modalInstance.componentInstance.statoIniziale = this.incaricoStatutes.status;\r\n        modalInstance.componentInstance.incarico = this.incarico;\r\n        modalInstance.result.then(function (incarico) {\r\n            if (incarico) {\r\n                _this.incarico = incarico;\r\n            }\r\n        }, function () {\r\n        });\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('formIncarico'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof forms_1.FormGroup !== \"undefined\" && forms_1.FormGroup) === \"function\" ? _a : Object)\r\n    ], IncaricoUpdateComponent.prototype, \"formIncarico\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('partnerTypeahead'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_b = typeof ng_bootstrap_1.NgbTypeahead !== \"undefined\" && ng_bootstrap_1.NgbTypeahead) === \"function\" ? _b : Object)\r\n    ], IncaricoUpdateComponent.prototype, \"partnerTypeahead\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('immobileTypeahead'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_c = typeof ng_bootstrap_1.NgbTypeahead !== \"undefined\" && ng_bootstrap_1.NgbTypeahead) === \"function\" ? _c : Object)\r\n    ], IncaricoUpdateComponent.prototype, \"immobileTypeahead\", void 0);\r\n    IncaricoUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-incarico-update',\r\n            templateUrl: './incarico-update.component.html',\r\n            styleUrls: ['./incarico-update.component.scss']\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_d = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _d : Object, typeof (_e = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _e : Object, typeof (_f = typeof incarico_service_1.IncaricoService !== \"undefined\" && incarico_service_1.IncaricoService) === \"function\" ? _f : Object, typeof (_g = typeof lista_contatti_1.ListaContattiService !== \"undefined\" && lista_contatti_1.ListaContattiService) === \"function\" ? _g : Object, typeof (_h = typeof partner_1.PartnerService !== \"undefined\" && partner_1.PartnerService) === \"function\" ? _h : Object, typeof (_j = typeof cliente_1.ClienteService !== \"undefined\" && cliente_1.ClienteService) === \"function\" ? _j : Object, typeof (_k = typeof immobile_1.ImmobileService !== \"undefined\" && immobile_1.ImmobileService) === \"function\" ? _k : Object, typeof (_l = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _l : Object, typeof (_m = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _m : Object, typeof (_o = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _o : Object, typeof (_p = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _p : Object])\r\n    ], IncaricoUpdateComponent);\r\n    return IncaricoUpdateComponent;\r\n}());\r\nexports.IncaricoUpdateComponent = IncaricoUpdateComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico-update.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {JhiAlertService, JhiDataUtils} from 'ng-jhipster';\r\n\r\nimport {\r\n    BooleanStatus,\r\n    CategoriaIncarico,\r\n    Incarico,\r\n    IncaricoStatutes,\r\n    StatoIncarico,\r\n    TipoNegoziazione\r\n} from 'app/shared/model/incarico.model';\r\nimport {IncaricoService} from './incarico.service';\r\nimport {Partner} from 'app/shared/model/partner.model';\r\nimport {PartnerService} from 'app/entities/partner';\r\nimport {Cliente} from 'app/shared/model/cliente.model';\r\nimport {ClienteService} from 'app/entities/cliente';\r\nimport {Immobile} from 'app/shared/model/immobile.model';\r\nimport {ImmobileService} from 'app/entities/immobile';\r\nimport {NgbModal, NgbModalRef, NgbTypeahead, NgbTypeaheadSelectItemEvent} from '@ng-bootstrap/ng-bootstrap';\r\nimport {SelectItem} from 'primeng/components/common/api';\r\nimport {User, UserService} from 'app/core';\r\nimport {TagEnum} from 'app/shared/model/tag.model';\r\nimport {closeSubscription} from 'app/shared/util/handler-util';\r\nimport {debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\r\nimport {getFormattedNomeCognomeAsString} from 'app/entities/cliente/cliente-util';\r\nimport {getFormattedCodiceIndirizzoAsString} from 'app/entities/immobile/immobile-util';\r\nimport {isNullOrUndefined} from 'util';\r\nimport {IMPORT_VALIDATOR} from 'app/shared';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {ListaContatti} from 'app/shared/model/lista-contatti.model';\r\nimport {ListaContattiService} from 'app/entities/lista-contatti';\r\nimport {CambioStatoModalComponent} from 'app/entities/incarico/cambio-stato-modal/cambio-stato-modal.component';\r\n\r\n@Component({\r\n    selector: 'jhi-incarico-update',\r\n    templateUrl: './incarico-update.component.html',\r\n    styleUrls: ['./incarico-update.component.scss']\r\n})\r\nexport class IncaricoUpdateComponent implements OnInit, OnDestroy {\r\n    incarico: Incarico;\r\n    isSaving: boolean;\r\n    partners: Partner[];\r\n\r\n    @ViewChild('formIncarico')\r\n    formIncarico: FormGroup;\r\n\r\n    clientes: Cliente[] = [];\r\n    committenti: Cliente[] = [];\r\n    proponenti: Cliente[] = [];\r\n    acquirenti: Cliente[] = [];\r\n    segnalatori: Cliente[] = [];\r\n    listaContatti: ListaContatti[];\r\n\r\n    validator = IMPORT_VALIDATOR;\r\n    cliente: Cliente;\r\n    immobili: Immobile[];\r\n    readOnly: boolean;\r\n    partnerItems: SelectItem[];\r\n\r\n    modalRef: NgbModalRef;\r\n    dataContatto: string;\r\n    isNew: boolean;\r\n    statiIncarico: Array<StatoIncarico>;\r\n\r\n    tipiNegoziazione: TipoNegoziazione[];\r\n    categorie: CategoriaIncarico[];\r\n    users: User[];\r\n\r\n    tagEnum = TagEnum;\r\n    @ViewChild('partnerTypeahead')\r\n    partnerTypeahead: NgbTypeahead;\r\n    partnerFocus$ = new Subject<string>();\r\n\r\n    partnerClick$ = new Subject<string>();\r\n    @ViewChild('immobileTypeahead')\r\n    immobileTypeahead: NgbTypeahead;\r\n    immobileFocus$ = new Subject<string>();\r\n\r\n    immobileClick$ = new Subject<string>();\r\n\r\n    selectedImmobile: Immobile;\r\n\r\n    private incaricoSubscription: Subscription;\r\n    private clientiSubscription: Subscription;\r\n    private immobileSubscription: Subscription;\r\n    private permissionSubscription: Subscription;\r\n    private clienteSubscription: Subscription;\r\n    private partnerSubscription: Subscription;\r\n    private immobiliSubscription: Subscription;\r\n    private partnersSubscription: Subscription;\r\n\r\n    private usersSubscription: Subscription;\r\n    private getStatusSubscription: Subscription;\r\n    incaricoStatutes: IncaricoStatutes = {changeStatusEnabled: false};\r\n\r\n    constructor(\r\n        private dataUtils: JhiDataUtils,\r\n        private jhiAlertService: JhiAlertService,\r\n        private incaricoService: IncaricoService,\r\n        private listaContattiService: ListaContattiService,\r\n        private partnerService: PartnerService,\r\n        private clienteService: ClienteService,\r\n        private immobileService: ImmobileService,\r\n        private userService: UserService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private modalService: NgbModal\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n\r\n        this.init();\r\n\r\n        this.retrieveStatuses();\r\n        this.retrieveClienti();\r\n        this.retrievePartner();\r\n        this.retrieveImmobili();\r\n        this.retrieveUsersAgents();\r\n    }\r\n\r\n    private retrieveRelalationListsComingFromOtherComponents() {\r\n\r\n        // Se si arriva a questa pagina venendo da /cliente/:id/edit\r\n        const routeSnapshotQueryParamMap = this.activatedRoute.snapshot.queryParamMap;\r\n        const clienteRef = routeSnapshotQueryParamMap.get('clienteRef') || null;\r\n        if (clienteRef) {\r\n            closeSubscription(this.clienteSubscription);\r\n            this.clienteSubscription = this.clienteService.find(clienteRef).subscribe(\r\n                (res: HttpResponse<Cliente>) => {\r\n                    this.incarico.committentes.push(res.body);\r\n                    this.checkClientiAndUpdateListaContattiAndSelect();\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n        }\r\n\r\n        // Se si arriva a questa pagina venendo da /immobile/:id/edit\r\n        const immobileRef = routeSnapshotQueryParamMap.get('immobileRef') || null;\r\n        if (immobileRef) {\r\n            closeSubscription(this.immobileSubscription);\r\n            this.immobileSubscription = this.immobileService.find(immobileRef).subscribe(\r\n                (res: HttpResponse<Immobile>) => {\r\n                    const incarico = res.body;\r\n\r\n                    this.selectImmobile(incarico);\r\n                    this.retrieveImmobili();\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n        }\r\n\r\n        // Se si arriva a questa pagina venendo da /partner/:id/edit\r\n        const partnerRef = routeSnapshotQueryParamMap.get('partnerRef') || null;\r\n        if (partnerRef) {\r\n            closeSubscription(this.partnerSubscription);\r\n            this.partnerSubscription = this.partnerService.find(partnerRef).subscribe(\r\n                (res: HttpResponse<Partner>) => {\r\n                    this.incarico.partners.push(res.body);\r\n                },\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n        }\r\n    }\r\n\r\n    private selectImmobile(incarico) {\r\n        this.incarico.immobileId = incarico.id;\r\n        this.incarico.immobileCodice = incarico.codice;\r\n        this.selectedImmobile = incarico;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        closeSubscription(this.clientiSubscription);\r\n        closeSubscription(this.incaricoSubscription);\r\n        closeSubscription(this.immobileSubscription);\r\n        closeSubscription(this.permissionSubscription);\r\n        closeSubscription(this.clienteSubscription);\r\n        closeSubscription(this.partnerSubscription);\r\n        closeSubscription(this.immobiliSubscription);\r\n        closeSubscription(this.partnersSubscription);\r\n        closeSubscription(this.usersSubscription);\r\n    }\r\n\r\n    private init() {\r\n        this.activatedRoute.data.subscribe(data => {\r\n            this.isNew = Boolean(data['isNew']);\r\n\r\n            this.initStatiIncarico();\r\n            this.initTipiNegoziazione();\r\n\r\n            this.incarico = data['incarico'];\r\n\r\n            this.incarico.committentes = this.incarico.committentes || [];\r\n            this.incarico.proponentes = this.incarico.proponentes || [];\r\n            this.incarico.acquirenteLocatarios = this.incarico.acquirenteLocatarios || [];\r\n            this.incarico.segnalatores = this.incarico.segnalatores || [];\r\n\r\n            if (this.isNew) {\r\n                this.incarico.stato = StatoIncarico.BOZZA;\r\n                this.incarico.alertFiscali = BooleanStatus.SI;\r\n                this.incarico.alertCortesia = BooleanStatus.SI;\r\n            } else {\r\n                if (this.incarico.id) {\r\n                    this.permissionSubscription = this.incaricoService.retrievePermission(this.incarico.id)\r\n                        .subscribe(permission => {\r\n                            this.readOnly = permission;\r\n                        });\r\n                }\r\n\r\n                if (this.incarico.immobileId != null) {\r\n                    const immobileIdStr = String(this.incarico.immobileId);\r\n                    this.immobileSubscription = this.immobileService.find(immobileIdStr).subscribe(\r\n                        (res: HttpResponse<Immobile>) => {\r\n                            if (res.body != null) {\r\n                                this.selectImmobile(res.body);\r\n                            }\r\n                        });\r\n                }\r\n\r\n                this.checkClientiAndUpdateListaContattiAndSelect();\r\n\r\n                this.retrieveRelalationListsComingFromOtherComponents();\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkClientiAndUpdateListaContattiAndSelect() {\r\n        if (this.incarico.committentes && this.incarico.committentes.length > 0) {\r\n            const listaCommittenteId: Array<number> =\r\n                this.incarico.committentes.map(incarico => incarico.id);\r\n            const listaContattiQueryParams = {\r\n                'clienteId.in': listaCommittenteId.join()\r\n            };\r\n            this.listaContattiService.query(listaContattiQueryParams).subscribe(\r\n                (res: HttpResponse<ListaContatti[]>) => this.listaContatti = res.body,\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n        } else {\r\n            this.listaContatti = [];\r\n        }\r\n    }\r\n\r\n    private initStatiIncarico() {\r\n        this.statiIncarico = [StatoIncarico.BOZZA];\r\n        if (!this.isNew) {\r\n            this.statiIncarico.push(\r\n                ...[\r\n                    StatoIncarico.ATTIVO,\r\n                    StatoIncarico.CONCLUSO,\r\n                    StatoIncarico.INTERROTTO,\r\n                    StatoIncarico.SCADUTO\r\n                ]\r\n            );\r\n        }\r\n    }\r\n\r\n    private retrieveClienti() {\r\n        this.clientiSubscription = this.clienteService.query().subscribe(\r\n            (res: HttpResponse<Cliente[]>) => {\r\n                if (res.body != null) {\r\n                    this.clientes = res.body;\r\n                    this.filterClientiByTag();\r\n                }\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n    }\r\n\r\n    private filterClientiByTag() {\r\n        this.clientes.forEach(cliente => {\r\n            for (const tag of cliente.tags) {\r\n                if (tag.codice === TagEnum.COMMITTENTE) {\r\n                    this.committenti.push(cliente);\r\n                }\r\n\r\n                if (tag.codice === TagEnum.PROPONENTE) {\r\n                    this.proponenti.push(cliente);\r\n                }\r\n\r\n                if (tag.codice === TagEnum.ACQUIRENTE_CONDUTTORE) {\r\n                    this.acquirenti.push(cliente);\r\n                }\r\n\r\n                if (tag.codice === TagEnum.SEGNALATORE) {\r\n                    this.segnalatori.push(cliente);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    statoIncaricoIsDisabled(): boolean {\r\n        return this.readAuth() || this.isNew;\r\n    }\r\n\r\n    readAuth() {\r\n        return this.readOnly;\r\n    }\r\n\r\n    byteSize(field) {\r\n        return this.dataUtils.byteSize(field);\r\n    }\r\n\r\n    openFile(contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    }\r\n\r\n    previousState() {\r\n        // window.history.back();\r\n        this.router.navigate(['incarico'], {});\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n\r\n        this.setIncaricoPropertiesOnTipoLocazione();\r\n\r\n        closeSubscription(this.incaricoSubscription);\r\n\r\n        if (this.incarico.id !== undefined) {\r\n            this.incaricoSubscription = this.incaricoService.update(this.incarico).subscribe(\r\n                () => this.onSaveSuccess(),\r\n                () => this.onSaveError()\r\n            );\r\n        } else {\r\n            this.incaricoSubscription = this.incaricoService.create(this.incarico).subscribe(\r\n                () => this.onSaveSuccess(),\r\n                () => this.onSaveError()\r\n            );\r\n        }\r\n    }\r\n\r\n    setIncaricoPropertiesOnTipoLocazione() {\r\n        if (this.tipoIncaricoIsLocazione()) {\r\n            this.incarico.flagLocato = null;\r\n            this.incarico.nomeConduttore = null;\r\n            this.incarico.nomeConduttore = null;\r\n            this.incarico.dataInizioLocazione = null;\r\n            this.incarico.dataFineLocazione = null;\r\n            this.incarico.noteLocazione = null;\r\n        }\r\n    }\r\n\r\n    private onSaveSuccess() {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    retrievePartner() {\r\n        closeSubscription(this.partnersSubscription);\r\n        this.partnersSubscription = this.partnerService.query().subscribe(\r\n            (res: HttpResponse<Partner[]>) => {\r\n                if (res.body != null) {\r\n                    this.partners = res.body;\r\n                    if (this.incarico.partners != null) {\r\n                        this.incarico.partners.forEach(partner => {\r\n                            this.partners = this.partners.filter(order => order.id !== partner.id);\r\n                        });\r\n                    }\r\n                    this.retrievePartnerItems();\r\n                }\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n\r\n    }\r\n\r\n    retrieveImmobili() {\r\n        closeSubscription(this.immobiliSubscription);\r\n        this.immobiliSubscription = this.immobileService.query().subscribe(\r\n            (res: HttpResponse<Immobile[]>) => {\r\n                if (res.body != null) {\r\n                    this.immobili = res.body;\r\n                }\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n    }\r\n\r\n    retrievePartnerItems() {\r\n        let id = 0;\r\n        this.partnerItems = [];\r\n        this.partners.forEach(el => {\r\n\r\n            const partnerItem: SelectItem = {\r\n                label: el.cognome + ' ' + el.nome,\r\n                value: {id, name: el.cognome, code: el.id}\r\n            };\r\n            this.partnerItems.push(partnerItem);\r\n            id += 1;\r\n        });\r\n    }\r\n\r\n    private initTipiNegoziazione() {\r\n        this.tipiNegoziazione = [\r\n            TipoNegoziazione.COMPRAVENDITA,\r\n            TipoNegoziazione.LOCAZIONE,\r\n            TipoNegoziazione.PRATICA_TECNICA,\r\n            TipoNegoziazione.PRATICA_LEGALE,\r\n            TipoNegoziazione.MUTUO,\r\n            TipoNegoziazione.SERVIZI_ACCESSORI,\r\n            TipoNegoziazione.ALTRO\r\n        ];\r\n    }\r\n\r\n    private retrieveUsersAgents() {\r\n        closeSubscription(this.usersSubscription);\r\n        this.usersSubscription = this.userService.queryAgents().subscribe(\r\n            (res: HttpResponse<User[]>) => {\r\n                this.users = res.body;\r\n                if (this.users && this.users.length === 1) {\r\n                    this.incarico.agente = this.users[0].login;\r\n                }\r\n            },\r\n            (res: HttpResponse<any>) => this.onError(res.body)\r\n        );\r\n    }\r\n\r\n    tipoIncaricoIsLocazione(): boolean {\r\n        return this.incarico.tipo === TipoNegoziazione.LOCAZIONE;\r\n    }\r\n\r\n    getIncaricoId() {\r\n        return this.isNew ? '0' : this.incarico.id;\r\n    }\r\n\r\n    onSelectPartner(ngbTypeaheadSelectItem: NgbTypeaheadSelectItemEvent) {\r\n        ngbTypeaheadSelectItem.preventDefault();\r\n\r\n        const partnerFound = this.partners.find(partner =>\r\n            getFormattedNomeCognomeAsString(partner) === ngbTypeaheadSelectItem.item);\r\n\r\n        if (partnerFound) {\r\n            this.incarico.partners.push(partnerFound);\r\n        }\r\n\r\n        this.partnerTypeahead.writeValue('');\r\n    }\r\n\r\n    private getAvailablePartners() {\r\n        const result = [];\r\n\r\n        this.partners.forEach(cliente => {\r\n            let toAdd = true;\r\n            for (const incaricoCliente of this.incarico.partners) {\r\n                if (incaricoCliente.id === cliente.id) {\r\n                    toAdd = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (toAdd) {\r\n                result.push(getFormattedNomeCognomeAsString(cliente));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    searchPartner = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\r\n\r\n        const clicksWithClosedPopup$ = this.partnerClick$.pipe(\r\n            filter(() => !this.partnerTypeahead.isPopupOpen()));\r\n\r\n        const inputFocus$ = this.partnerFocus$;\r\n\r\n        return merge(debouncedText$, inputFocus$, clicksWithClosedPopup$).pipe(\r\n            map(term => (term === '' ?\r\n                this.getAvailablePartners() : this.getAvailablePartners()\r\n                    .filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\r\n        );\r\n    };\r\n\r\n    rimuoviPartner(partner: Partner) {\r\n        const indexOf = this.incarico.partners.indexOf(partner);\r\n        this.incarico.partners.splice(indexOf, 1);\r\n    }\r\n\r\n    nuovoPartner() {\r\n        const navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/partner/new'], navigationExtras);\r\n    }\r\n\r\n    isPartnerSelezionati(): boolean {\r\n        return this.incarico && this.incarico.partners && this.incarico.partners.length > 0;\r\n    }\r\n\r\n    private getAvailableImmobili(): Array<string> {\r\n        const result = [];\r\n\r\n        this.immobili.forEach((immobile: Immobile) => {\r\n            if (isNullOrUndefined(this.selectedImmobile) || immobile.id !== this.selectedImmobile.id) {\r\n                result.push(getFormattedCodiceIndirizzoAsString(immobile));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    searchImmobile = (text$: Observable<string>) => {\r\n        const debouncedText$ = text$.pipe(debounceTime(200), distinctUntilChanged());\r\n\r\n        const clicksWithClosedPopup$ = this.immobileClick$.pipe(\r\n            filter(() => !this.immobileTypeahead.isPopupOpen()));\r\n\r\n        return merge(debouncedText$, this.immobileFocus$, clicksWithClosedPopup$).pipe(\r\n            map(term => (term === '' ?\r\n                this.getAvailableImmobili() : this.getAvailableImmobili()\r\n                    .filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1)).slice(0, 10))\r\n        );\r\n    };\r\n\r\n    nuovoImmobile() {\r\n        const navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/immobile/new'], navigationExtras);\r\n    }\r\n\r\n    onSelectImmobile(ngbTypeaheadSelectItem: NgbTypeaheadSelectItemEvent) {\r\n        ngbTypeaheadSelectItem.preventDefault();\r\n\r\n        const selectedItem = ngbTypeaheadSelectItem.item;\r\n        const immobileFound = this.immobili.find(immobile =>\r\n            getFormattedCodiceIndirizzoAsString(immobile) === selectedItem);\r\n\r\n        if (immobileFound) {\r\n            this.selectImmobile(immobileFound);\r\n        }\r\n\r\n        this.immobileTypeahead.writeValue('');\r\n    }\r\n\r\n    isImmobileSelected(): boolean {\r\n        return !isNullOrUndefined(this.selectedImmobile) &&\r\n            !isNullOrUndefined(this.selectedImmobile.id);\r\n    }\r\n\r\n    rimuoviImmobile() {\r\n        this.incarico.immobileCodice = null;\r\n        this.incarico.immobileId = null;\r\n        this.selectedImmobile = null;\r\n    }\r\n\r\n    visualizzaDettaglioImmobile() {\r\n        const navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/immobile', this.selectedImmobile.id, 'view'], navigationExtras);\r\n    }\r\n\r\n    newContatto() {\r\n        const navigationExtras = {\r\n            queryParams: {\r\n                incaricoRef: this.incarico.id\r\n            }\r\n        };\r\n        this.router.navigate(['/lista-contatti/new'], navigationExtras);\r\n    }\r\n\r\n    onCommittentiChanges(cliente: Cliente) {\r\n        this.checkClientiAndUpdateListaContattiAndSelect();\r\n    }\r\n\r\n    isImmobileRequired(): boolean {\r\n        return this.incarico.tipo === TipoNegoziazione.LOCAZIONE ||\r\n            this.incarico.tipo === TipoNegoziazione.COMPRAVENDITA;\r\n    }\r\n\r\n    hideImmobileRequired(): boolean {\r\n        return !this.isImmobileRequired() ||\r\n            this.isImmobileRequired() && this.isImmobileSelected();\r\n    }\r\n\r\n    isSaveButtonDisabled(): boolean {\r\n        return this.isSaving ||\r\n            !this.hideImmobileRequired() ||\r\n            (this.formIncarico &&\r\n                this.formIncarico['form'] &&\r\n                this.formIncarico['form'].invalid);\r\n    }\r\n\r\n    private retrieveStatuses() {\r\n        closeSubscription(this.getStatusSubscription);\r\n        this.getStatusSubscription = this.incaricoService.getStatus(this.incarico.id).subscribe(\r\n            incaricoStatutes => {\r\n                this.incaricoStatutes = incaricoStatutes;\r\n            },\r\n            error => this.onError(error.message));\r\n    }\r\n\r\n    openChangeStatusModal() {\r\n        const modalInstance = this.modalService.open(CambioStatoModalComponent);\r\n\r\n        modalInstance.componentInstance.statiIncarico = this.incaricoStatutes.statuses;\r\n        modalInstance.componentInstance.statoIniziale = this.incaricoStatutes.status;\r\n        modalInstance.componentInstance.incarico = this.incarico;\r\n\r\n        modalInstance.result.then((incarico: Incarico) => {\r\n            if (incarico) {\r\n                this.incarico = incarico;\r\n            }\r\n        }, () => {\r\n        });\r\n    }\r\n}\r\n"]}]}
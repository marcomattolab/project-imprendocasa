{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","mtime":1548761749266},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar password_reset_init_service_1 = require(\"./password-reset-init.service\");\r\nvar PasswordResetInitComponent = /** @class */ (function () {\r\n    function PasswordResetInitComponent(passwordResetInitService, elementRef, renderer) {\r\n        this.passwordResetInitService = passwordResetInitService;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n    }\r\n    PasswordResetInitComponent.prototype.ngOnInit = function () {\r\n        this.resetAccount = {};\r\n    };\r\n    PasswordResetInitComponent.prototype.ngAfterViewInit = function () {\r\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\r\n    };\r\n    PasswordResetInitComponent.prototype.requestReset = function () {\r\n        var _this = this;\r\n        this.error = null;\r\n        this.errorEmailNotExists = null;\r\n        this.passwordResetInitService.save(this.resetAccount.email).subscribe(function () {\r\n            _this.success = 'OK';\r\n        }, function (response) {\r\n            _this.success = null;\r\n            if (response.status === 400 && response.error.type === shared_1.EMAIL_NOT_FOUND_TYPE) {\r\n                _this.errorEmailNotExists = 'ERROR';\r\n            }\r\n            else {\r\n                _this.error = 'ERROR';\r\n            }\r\n        });\r\n    };\r\n    var _a, _b, _c;\r\n    PasswordResetInitComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-password-reset-init',\r\n            templateUrl: './password-reset-init.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_reset_init_service_1.PasswordResetInitService !== \"undefined\" && password_reset_init_service_1.PasswordResetInitService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _c : Object])\r\n    ], PasswordResetInitComponent);\r\n    return PasswordResetInitComponent;\r\n}());\r\nexports.PasswordResetInitComponent = PasswordResetInitComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts"],"names":[],"mappings":";;;AAAA,sCAAuF;AACvF,qCAAkD;AAClD,6EAAyE;AAMzE;IAMI,oCAAoB,wBAAkD,EAAU,UAAsB,EAAU,QAAkB;QAA9G,6BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAEtI,6CAAQ,GAAR;QACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,oDAAe,GAAf;QACI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IAC1G,CAAC;IAED,iDAAY,GAAZ;QAAA,iBAiBC;QAhBG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CACjE;YACI,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC,EACD,UAAA,QAAQ;YACJ,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,6BAAoB,EAAE;gBACzE,KAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;aACtC;iBAAM;gBACH,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;aACxB;QACL,CAAC,CACJ,CAAC;IACN,CAAC;;IAjCQ,0BAA0B;QAJtC,gBAAS,CAAC;YACP,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,sCAAsC;SACtD,CAAC;qEAOgD,sDAAwB,oBAAxB,sDAAwB,oDAAsB,iBAAU,oBAAV,iBAAU,oDAAoB,eAAQ,oBAAR,eAAQ;OANzH,0BAA0B,CAkCtC;IAAD,iCAAC;CAAA,AAlCD,IAkCC;AAlCY,gEAA0B","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\nimport { EMAIL_NOT_FOUND_TYPE } from 'app/shared';\nimport { PasswordResetInitService } from './password-reset-init.service';\n\n@Component({\n    selector: 'jhi-password-reset-init',\n    templateUrl: './password-reset-init.component.html'\n})\nexport class PasswordResetInitComponent implements OnInit, AfterViewInit {\n    error: string;\n    errorEmailNotExists: string;\n    resetAccount: any;\n    success: string;\n\n    constructor(private passwordResetInitService: PasswordResetInitService, private elementRef: ElementRef, private renderer: Renderer) {}\n\n    ngOnInit() {\n        this.resetAccount = {};\n    }\n\n    ngAfterViewInit() {\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\n    }\n\n    requestReset() {\n        this.error = null;\n        this.errorEmailNotExists = null;\n\n        this.passwordResetInitService.save(this.resetAccount.email).subscribe(\n            () => {\n                this.success = 'OK';\n            },\n            response => {\n                this.success = null;\n                if (response.status === 400 && response.error.type === EMAIL_NOT_FOUND_TYPE) {\n                    this.errorEmailNotExists = 'ERROR';\n                } else {\n                    this.error = 'ERROR';\n                }\n            }\n        );\n    }\n}\n"]}]}
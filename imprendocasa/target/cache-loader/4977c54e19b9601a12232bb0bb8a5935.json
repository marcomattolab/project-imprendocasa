{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-route-access-service.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-route-access-service.ts","mtime":1548761752443},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar ImmobileDeleteRouteAccessService = /** @class */ (function () {\r\n    function ImmobileDeleteRouteAccessService(http, jhiAlertService) {\r\n        this.http = http;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/immobiles';\r\n    }\r\n    ImmobileDeleteRouteAccessService.prototype.canActivate = function (route, state) {\r\n        var _this = this;\r\n        var idImmobile = route.params['id'] ? route.params['id'] : null;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.checkDeleteAvaiable(idImmobile).subscribe(function (res) {\r\n                resolve(true);\r\n            }, function (res) {\r\n                if (res.error.errorKey) {\r\n                    _this.jhiAlertService.error(res.error.errorKey, null, null);\r\n                }\r\n                else {\r\n                    _this.jhiAlertService.error(res.message, null, null);\r\n                }\r\n                resolve(false);\r\n            });\r\n        });\r\n    };\r\n    ImmobileDeleteRouteAccessService.prototype.checkDeleteAvaiable = function (id) {\r\n        return this.http.get(this.resourceUrl + \"/deleteAvaiable/\" + id, { observe: 'response' });\r\n    };\r\n    var _a, _b;\r\n    ImmobileDeleteRouteAccessService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _b : Object])\r\n    ], ImmobileDeleteRouteAccessService);\r\n    return ImmobileDeleteRouteAccessService;\r\n}());\r\nexports.ImmobileDeleteRouteAccessService = ImmobileDeleteRouteAccessService;\r\nvar ImmobileEditRouteAccessService = /** @class */ (function () {\r\n    function ImmobileEditRouteAccessService(http, jhiAlertService) {\r\n        this.http = http;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/immobiles';\r\n    }\r\n    ImmobileEditRouteAccessService.prototype.canActivate = function (route, state) {\r\n        var _this = this;\r\n        var idImmobile = route.params['id'] ? route.params['id'] : null;\r\n        return new Promise(function (resolve, reject) {\r\n            _this.checkEditAvaiable(idImmobile).subscribe(function (res) {\r\n                resolve(true);\r\n            }, function (res) {\r\n                if (res.error.errorKey) {\r\n                    _this.jhiAlertService.error(res.error.errorKey, null, null);\r\n                }\r\n                else {\r\n                    _this.jhiAlertService.error(res.message, null, null);\r\n                }\r\n                resolve(false);\r\n            });\r\n        });\r\n    };\r\n    ImmobileEditRouteAccessService.prototype.checkEditAvaiable = function (id) {\r\n        return this.http.get(this.resourceUrl + \"/editAvaiable/\" + id, { observe: 'response' });\r\n    };\r\n    var _c, _d;\r\n    ImmobileEditRouteAccessService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _d : Object])\r\n    ], ImmobileEditRouteAccessService);\r\n    return ImmobileEditRouteAccessService;\r\n}());\r\nexports.ImmobileEditRouteAccessService = ImmobileEditRouteAccessService;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-route-access-service.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-route-access-service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { Observable } from 'rxjs';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { JhiAlertService } from 'ng-jhipster';\n\n@Injectable({ providedIn: 'root' })\nexport class ImmobileDeleteRouteAccessService implements CanActivate {\n\n    public resourceUrl = SERVER_API_URL + 'api/immobiles';\n\n    constructor(\n        private http: HttpClient,\n        private jhiAlertService: JhiAlertService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Promise<boolean> {\n        const idImmobile = route.params['id'] ? route.params['id'] : null;\n        return new Promise((resolve, reject) => {\n            this.checkDeleteAvaiable(idImmobile).subscribe(\n                (res: HttpResponse<any>) => {\n                    resolve(true);\n                },\n                (res: HttpErrorResponse) => {\n                    if (res.error.errorKey) {\n                        this.jhiAlertService.error(res.error.errorKey, null, null);\n                    } else {\n                        this.jhiAlertService.error(res.message, null, null);\n                    }\n                    resolve(false);\n                }\n            );\n        });\n    }\n\n    checkDeleteAvaiable(id: number): Observable<HttpResponse<any>> {\n        return this.http.get<any>(`${this.resourceUrl}/deleteAvaiable/${id}`, { observe: 'response' });\n    }\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ImmobileEditRouteAccessService implements CanActivate {\n\n    public resourceUrl = SERVER_API_URL + 'api/immobiles';\n\n    constructor(\n        private http: HttpClient,\n        private jhiAlertService: JhiAlertService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Promise<boolean> {\n        const idImmobile = route.params['id'] ? route.params['id'] : null;\n        return new Promise((resolve, reject) => {\n            this.checkEditAvaiable(idImmobile).subscribe(\n                (res: HttpResponse<any>) => {\n                    resolve(true);\n                },\n                (res: HttpErrorResponse) => {\n                    if (res.error.errorKey) {\n                        this.jhiAlertService.error(res.error.errorKey, null, null);\n                    } else {\n                        this.jhiAlertService.error(res.message, null, null);\n                    }\n                    resolve(false);\n                }\n            );\n        });\n    }\n\n    checkEditAvaiable(id: number): Observable<HttpResponse<any>> {\n        return this.http.get<any>(`${this.resourceUrl}/editAvaiable/${id}`, { observe: 'response' });\n    }\n\n}\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.service.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.service.ts","mtime":1548761752904},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar IncaricoService = /** @class */ (function () {\r\n    function IncaricoService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/incaricos';\r\n        this.dashboardUrl = app_constants_1.SERVER_API_URL + 'api/dashboard/incarico';\r\n    }\r\n    IncaricoService.prototype.create = function (incarico) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(incarico);\r\n        return this.http.post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.mapIncaricoDates(res); }));\r\n    };\r\n    IncaricoService.prototype.update = function (incarico) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(incarico);\r\n        return this.http.put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.mapIncaricoDates(res); }));\r\n    };\r\n    IncaricoService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http.get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.mapIncaricoDates(res); }));\r\n    };\r\n    IncaricoService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.mapDateArray(res); }));\r\n    };\r\n    IncaricoService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    IncaricoService.prototype.convertDateFromClient = function (incarico) {\r\n        function convertMomentToJson(date) {\r\n            return date != null && date.isValid() ? date.toJSON() : null;\r\n        }\r\n        return Object.assign({}, incarico, {\r\n            dataContatto: convertMomentToJson(incarico.dataContatto),\r\n            dataScadenza: convertMomentToJson(incarico.dataScadenza),\r\n            dataAlertFiscali: convertMomentToJson(incarico.dataAlertFiscali),\r\n            dataAlertCortesia: convertMomentToJson(incarico.dataAlertCortesia),\r\n            dataAlertRicorrenza: convertMomentToJson(incarico.dataAlertRicorrenza),\r\n            dataInizioLocazione: convertMomentToJson(incarico.dataInizioLocazione),\r\n            dataFineLocazione: convertMomentToJson(incarico.dataFineLocazione),\r\n        });\r\n    };\r\n    IncaricoService.prototype.convertIncaricoDates = function (incarico) {\r\n        if (incarico) {\r\n            incarico.dataScadenza = incarico.dataScadenza != null ? moment(incarico.dataScadenza) : null;\r\n            incarico.dataContatto = incarico.dataContatto != null ? moment(incarico.dataContatto) : null;\r\n            incarico.dataAlertFiscali = incarico.dataAlertFiscali != null ? moment(incarico.dataAlertFiscali) : null;\r\n            incarico.dataAlertCortesia = incarico.dataAlertCortesia != null ? moment(incarico.dataAlertCortesia) : null;\r\n            incarico.dataAlertRicorrenza = incarico.dataAlertRicorrenza != null ? moment(incarico.dataAlertRicorrenza) : null;\r\n            incarico.dataInizioLocazione = incarico.dataInizioLocazione != null ? moment(incarico.dataInizioLocazione) : null;\r\n            incarico.dataFineLocazione = incarico.dataFineLocazione != null ? moment(incarico.dataFineLocazione) : null;\r\n        }\r\n    };\r\n    IncaricoService.prototype.mapIncaricoDates = function (res) {\r\n        this.convertIncaricoDates(res.body);\r\n        return res;\r\n    };\r\n    IncaricoService.prototype.mapDateArray = function (res) {\r\n        var _this = this;\r\n        var incarichi = res.body;\r\n        if (incarichi) {\r\n            incarichi.forEach(function (incarico) {\r\n                _this.convertIncaricoDates(incarico);\r\n            });\r\n        }\r\n        return res;\r\n    };\r\n    IncaricoService.prototype.findByUser = function (req) {\r\n        var options = shared_1.createRequestOption(req);\r\n        var url = this.resourceUrl + '/currentUser';\r\n        return this.http.get(url, { params: options, observe: 'response' });\r\n    };\r\n    IncaricoService.prototype.retrievePermission = function (parametro) {\r\n        console.log('Sto avviando il servizio con: ' + parametro);\r\n        var params = new http_1.HttpParams().set('idIncarico', ' ' + parametro);\r\n        return this.http.get(this.resourceUrl + \"/getPermission\", { params: params });\r\n    };\r\n    IncaricoService.prototype.dashboardQuery = function (req) {\r\n        return this.http.get(this.dashboardUrl, { observe: 'response' });\r\n    };\r\n    IncaricoService.prototype.getStatus = function (idIncarico) {\r\n        return this.http\r\n            .get(this.resourceUrl + '/getStatus/' + idIncarico);\r\n    };\r\n    IncaricoService.prototype.changeStatus = function (incarico) {\r\n        var copy = this.convertDateFromClient(incarico);\r\n        return this.http.post(this.resourceUrl + '/changestatus', copy, { observe: 'response' })\r\n            .map(function (res) { return res.body; });\r\n    };\r\n    var _a;\r\n    IncaricoService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n    ], IncaricoService);\r\n    return IncaricoService;\r\n}());\r\nexports.IncaricoService = IncaricoService;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.service.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport * as moment from 'moment';\nimport {map} from 'rxjs/operators';\nimport {SERVER_API_URL} from 'app/app.constants';\nimport {createRequestOption} from 'app/shared';\nimport {Incarico, IncaricoStatutes} from 'app/shared/model/incarico.model';\nimport {IDashboard} from 'app/shared/model/dashboard.model';\nimport {Moment} from 'moment';\n\ntype EntityResponseType = HttpResponse<Incarico>;\ntype EntityArrayResponseType = HttpResponse<Incarico[]>;\n\ntype EntityDashResponseType = HttpResponse<IDashboard>;\ntype EntityDashArrayResponseType = HttpResponse<IDashboard[]>;\n\n@Injectable({providedIn: 'root'})\nexport class IncaricoService {\n    public resourceUrl = SERVER_API_URL + 'api/incaricos';\n    public dashboardUrl = SERVER_API_URL + 'api/dashboard/incarico';\n\n    constructor(private http: HttpClient) {\n    }\n\n    create(incarico: Incarico): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(incarico);\n        return this.http.post<Incarico>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.mapIncaricoDates(res)));\n    }\n\n    update(incarico: Incarico): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(incarico);\n        return this.http.put<Incarico>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.mapIncaricoDates(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http.get<Incarico>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.mapIncaricoDates(res)));\n    }\n\n    query(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        return this.http.get<Incarico[]>(this.resourceUrl, {params: options, observe: 'response'})\n            .pipe(map((res: EntityArrayResponseType) => this.mapDateArray(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    protected convertDateFromClient(incarico: Incarico): Incarico {\n        function convertMomentToJson(date: Moment) {\n            return date != null && date.isValid() ? date.toJSON() : null;\n        }\n\n        return Object.assign({}, incarico, {\n            dataContatto: convertMomentToJson(incarico.dataContatto),\n            dataScadenza: convertMomentToJson(incarico.dataScadenza),\n            dataAlertFiscali: convertMomentToJson(incarico.dataAlertFiscali),\n            dataAlertCortesia: convertMomentToJson(incarico.dataAlertCortesia),\n            dataAlertRicorrenza: convertMomentToJson(incarico.dataAlertRicorrenza),\n            dataInizioLocazione: convertMomentToJson(incarico.dataInizioLocazione),\n            dataFineLocazione: convertMomentToJson(incarico.dataFineLocazione),\n        });\n    }\n\n    private convertIncaricoDates(incarico: Incarico) {\n        if (incarico) {\n            incarico.dataScadenza = incarico.dataScadenza != null ? moment(incarico.dataScadenza) : null;\n            incarico.dataContatto = incarico.dataContatto != null ? moment(incarico.dataContatto) : null;\n            incarico.dataAlertFiscali = incarico.dataAlertFiscali != null ? moment(incarico.dataAlertFiscali) : null;\n            incarico.dataAlertCortesia = incarico.dataAlertCortesia != null ? moment(incarico.dataAlertCortesia) : null;\n            incarico.dataAlertRicorrenza = incarico.dataAlertRicorrenza != null ? moment(incarico.dataAlertRicorrenza) : null;\n            incarico.dataInizioLocazione = incarico.dataInizioLocazione != null ? moment(incarico.dataInizioLocazione) : null;\n            incarico.dataFineLocazione = incarico.dataFineLocazione != null ? moment(incarico.dataFineLocazione) : null;\n        }\n    }\n\n    protected mapIncaricoDates(res: EntityResponseType): EntityResponseType {\n        this.convertIncaricoDates(res.body);\n        return res;\n    }\n\n    protected mapDateArray(res: EntityArrayResponseType): EntityArrayResponseType {\n        const incarichi: Array<Incarico> = res.body;\n        if (incarichi) {\n            incarichi.forEach((incarico: Incarico) => {\n                this.convertIncaricoDates(incarico);\n            });\n        }\n        return res;\n    }\n\n    findByUser(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        const url = this.resourceUrl + '/currentUser';\n        return this.http.get<Incarico[]>(url, {params: options, observe: 'response'});\n    }\n\n    retrievePermission(parametro: number): Observable<any> {\n        console.log('Sto avviando il servizio con: ' + parametro);\n        const params = new HttpParams().set('idIncarico', ' ' + parametro);\n        return this.http.get(`${this.resourceUrl}/getPermission`, {params});\n    }\n\n    dashboardQuery(req?: any): Observable<EntityDashArrayResponseType> {\n        return this.http.get<IDashboard[]>(this.dashboardUrl, {observe: 'response'});\n    }\n\n    getStatus(idIncarico: string | number): Observable<IncaricoStatutes> {\n        return this.http\n            .get<IncaricoStatutes>(this.resourceUrl + '/getStatus/' + idIncarico)\n            ;\n    }\n\n    changeStatus(incarico: Incarico): Observable<HttpResponse<Incarico>> {\n        const copy = this.convertDateFromClient(incarico);\n        return this.http.post<HttpResponse<Incarico>>(\n            this.resourceUrl + '/changestatus', copy, {observe: 'response'})\n            .map(res => res.body);\n    }\n}\n"]}]}
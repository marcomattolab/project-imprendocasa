{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\google-utils.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\google-utils.ts","mtime":1548761755213},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nvar _this = this;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PROPERTY_LONG_NAME = 'long_name';\r\nvar PROPERTY_SHORT_NAME = 'short_name';\r\nvar CASE7 = 7;\r\nvar CASE8 = 8;\r\nvar ZOOM = 12;\r\nvar MapsData = /** @class */ (function () {\r\n    function MapsData() {\r\n    }\r\n    return MapsData;\r\n}());\r\nexports.MapsData = MapsData;\r\nexports.autoComplete = function (currentObject, searchElementRef, ngZone, zoom, mapsData) {\r\n    var autocomplete = new window['google'].maps.places.Autocomplete(searchElementRef.nativeElement, {\r\n        types: ['address']\r\n    });\r\n    autocomplete.addListener('place_changed', function () {\r\n        ngZone.run(function () {\r\n            // get the place result\r\n            var place = autocomplete.getPlace();\r\n            var n = 0;\r\n            var placeLenght = place.address_components.length;\r\n            try {\r\n                switch (placeLenght) {\r\n                    case CASE7: {\r\n                        currentObject.indirizzo = place.address_components[n][PROPERTY_LONG_NAME];\r\n                        currentObject.cap = place.address_components[n + 6][PROPERTY_LONG_NAME];\r\n                        break;\r\n                    }\r\n                    case CASE8: {\r\n                        n += 1;\r\n                        currentObject.indirizzo = place.address_components[n][PROPERTY_LONG_NAME] + ',' +\r\n                            place.address_components[n - 1][PROPERTY_LONG_NAME];\r\n                        currentObject.cap = place.address_components[n + 6][PROPERTY_LONG_NAME];\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        console.log('errore, inserire numero civico');\r\n                        break;\r\n                    }\r\n                }\r\n                currentObject.citta = place.address_components[n + 1][PROPERTY_LONG_NAME];\r\n                currentObject.provincia = place.address_components[n + 3][PROPERTY_SHORT_NAME];\r\n                currentObject.regione = place.address_components[n + 4][PROPERTY_LONG_NAME];\r\n                // verify result\r\n                if (place.geometry === undefined || place.geometry === null) {\r\n                    return;\r\n                }\r\n                console.log(place.geometry.location.lat());\r\n                mapsData.latitude = place.geometry.location.lat();\r\n                mapsData.longitude = place.geometry.location.lng();\r\n                zoom = ZOOM;\r\n            }\r\n            catch (e) {\r\n                _this.jhiAlertService.error(e, null, null);\r\n            }\r\n        });\r\n    });\r\n};\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\google-utils.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\google-utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {catchError} from 'rxjs/operators';\r\n\r\nconst PROPERTY_LONG_NAME = 'long_name';\r\nconst PROPERTY_SHORT_NAME = 'short_name';\r\nconst CASE7 = 7;\r\nconst CASE8 = 8;\r\nconst ZOOM = 12;\r\n\r\nexport class MapsData {\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\nexport const autoComplete = (currentObject, searchElementRef, ngZone, zoom, mapsData) => {\r\n\r\n    const autocomplete = new window['google'].maps.places.Autocomplete(searchElementRef.nativeElement, {\r\n        types: ['address']\r\n    });\r\n\r\n    autocomplete.addListener('place_changed', () => {\r\n        ngZone.run(() => {\r\n            // get the place result\r\n            const place: google.maps.places.PlaceResult = autocomplete.getPlace();\r\n            let n = 0;\r\n            const placeLenght = place.address_components.length;\r\n\r\n            try {\r\n                switch (placeLenght) {\r\n                    case CASE7: {\r\n                        currentObject.indirizzo = place.address_components[n][PROPERTY_LONG_NAME];\r\n                        currentObject.cap = place.address_components[n + 6][PROPERTY_LONG_NAME];\r\n                        break;\r\n                    }\r\n                    case CASE8: {\r\n                        n += 1;\r\n                        currentObject.indirizzo = place.address_components[n][PROPERTY_LONG_NAME] + ',' +\r\n                            place.address_components[n - 1][PROPERTY_LONG_NAME];\r\n                        currentObject.cap = place.address_components[n + 6][PROPERTY_LONG_NAME];\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        console.log('errore, inserire numero civico');\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                currentObject.citta = place.address_components[n + 1][PROPERTY_LONG_NAME];\r\n                currentObject.provincia = place.address_components[n + 3][PROPERTY_SHORT_NAME];\r\n                currentObject.regione = place.address_components[n + 4][PROPERTY_LONG_NAME];\r\n\r\n                // verify result\r\n                if (place.geometry === undefined || place.geometry === null) {\r\n                    return;\r\n                }\r\n                console.log(place.geometry.location.lat());\r\n                mapsData.latitude = place.geometry.location.lat();\r\n                mapsData.longitude = place.geometry.location.lng();\r\n                zoom = ZOOM;\r\n\r\n            } catch (e) {\r\n                this.jhiAlertService.error(e, null, null);\r\n            }\r\n\r\n        });\r\n    });\r\n};\r\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\home\\home.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\home\\home.component.ts","mtime":1548761754471},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar geolocalizzazione_1 = require(\"app/entities/geolocalizzazione\");\r\nvar immobile_1 = require(\"app/entities/immobile\");\r\nvar incarico_1 = require(\"app/entities/incarico\");\r\nvar core_3 = require(\"@agm/core\");\r\nvar handler_util_1 = require(\"app/shared/util/handler-util\");\r\nvar HomeComponent = /** @class */ (function () {\r\n    function HomeComponent(principal, loginModalService, eventManager, http, jhiAlertService, geolocalizzazioneService, immobileService, incaricoService) {\r\n        var _this = this;\r\n        this.principal = principal;\r\n        this.loginModalService = loginModalService;\r\n        this.eventManager = eventManager;\r\n        this.http = http;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.geolocalizzazioneService = geolocalizzazioneService;\r\n        this.immobileService = immobileService;\r\n        this.incaricoService = incaricoService;\r\n        this.lat1 = 38.151212;\r\n        this.lng1 = 13.336005;\r\n        this.locations = [];\r\n        // immobileInfo: IImmobile;\r\n        this.customicon = {\r\n            url: 'content/images/gm-icon/bluemarker.png',\r\n            scaledSize: {\r\n                width: 40,\r\n                height: 40\r\n            }\r\n        };\r\n        this.incaricoService.dashboardQuery().subscribe(function (res) { return _this.setResponseDashboard(res.body); }, function (res) { return _this.onError(res.message); });\r\n    }\r\n    HomeComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.principalSubscription = this.principal.getAuthenticationState().subscribe(function (userIdentity) {\r\n            _this.account = userIdentity;\r\n            _this.updateMapLocations();\r\n        });\r\n    };\r\n    HomeComponent.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        this.principal.identity().then(function (account) {\r\n            _this.account = account;\r\n            _this.updateMapLocations();\r\n        }, function (error) { return _this.resetLocations(); });\r\n        this.registerAuthenticationSuccess();\r\n    };\r\n    HomeComponent.prototype.ngOnDestroy = function () {\r\n        this.resetLocations();\r\n        handler_util_1.closeSubscription(this.geoLocalizazzioneSubscription);\r\n        handler_util_1.closeSubscription(this.eventManagerSubscription);\r\n        handler_util_1.closeSubscription(this.principalSubscription);\r\n    };\r\n    HomeComponent.prototype.resetLocations = function () {\r\n        this.locations = [];\r\n    };\r\n    HomeComponent.prototype.updateMapLocations = function () {\r\n        var _this = this;\r\n        if (this.account) {\r\n            var requestParams = { filter: 'posizione(codice)-is-null' };\r\n            handler_util_1.closeSubscription(this.geoLocalizazzioneSubscription);\r\n            this.geoLocalizazzioneSubscription =\r\n                this.geolocalizzazioneService.findExtended(requestParams).subscribe(function (res) {\r\n                    _this.locations = res;\r\n                    console.log(_this.locations);\r\n                    _this.forceMapFitBounds();\r\n                }, function (error) { return _this.onError(error); });\r\n        }\r\n        else {\r\n            this.resetLocations();\r\n        }\r\n    };\r\n    HomeComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    HomeComponent.prototype.registerAuthenticationSuccess = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.eventManagerSubscription);\r\n        this.eventManagerSubscription = this.eventManager.subscribe('authenticationSuccess', function (message) {\r\n            _this.principal.identity().then(function (account) {\r\n                _this.account = account;\r\n                _this.updateMapLocations();\r\n            });\r\n        });\r\n    };\r\n    HomeComponent.prototype.isAuthenticated = function () {\r\n        return this.principal.isAuthenticated();\r\n    };\r\n    HomeComponent.prototype.login = function () {\r\n        this.modalRef = this.loginModalService.open();\r\n    };\r\n    /* infoOnMouseOver(currentLocation: IGeolocalizzazione) {\r\n        this.immobileService.find(+currentLocation.immobile).subscribe(res => {\r\n            this.immobileInfo = res.body;\r\n        });\r\n    }*/\r\n    HomeComponent.prototype.forceMapFitBounds = function () {\r\n        var google = window['google'];\r\n        // zoom sulla mappa in base alle posizioni ottenute\r\n        if (google && this.locations && this.locations.length > 0) {\r\n            // se le coordinate sono presenti\r\n            // e se la variabile 'google' Ã¨ stata inizializzata dagli import di Angular\r\n            var bounds = new google.maps.LatLngBounds();\r\n            for (var _i = 0, _a = this.locations; _i < _a.length; _i++) {\r\n                var mm = _a[_i];\r\n                bounds.extend(new google.maps.LatLng(Number(mm.latitudine), Number(mm.longitudine)));\r\n            }\r\n            // @ts-ignore\r\n            this.agmMap._mapsWrapper.fitBounds(bounds);\r\n        }\r\n    };\r\n    HomeComponent.prototype.setResponseDashboard = function (body) {\r\n        this.fullresponse = body;\r\n        var currvalues = [];\r\n        var currlabels = [];\r\n        var colors = [];\r\n        var allcolors = ['#FF6384', '#36A2EB', '#16A7AB', '#AA63EE'];\r\n        for (var key in this.fullresponse) {\r\n            if (this.fullresponse.hasOwnProperty(key)) {\r\n                currlabels.push(this.fullresponse[key].label);\r\n                currvalues.push(this.fullresponse[key].value);\r\n                colors.push(allcolors[key]);\r\n            }\r\n        }\r\n        this.data = {\r\n            labels: currlabels,\r\n            datasets: [\r\n                {\r\n                    data: currvalues,\r\n                    backgroundColor: colors,\r\n                    hoverBackgroundColor: colors\r\n                }\r\n            ]\r\n        };\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('agmMap'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_3.AgmMap !== \"undefined\" && core_3.AgmMap) === \"function\" ? _a : Object)\r\n    ], HomeComponent.prototype, \"agmMap\", void 0);\r\n    HomeComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-home',\r\n            templateUrl: './home.component.html',\r\n            styleUrls: ['home.scss']\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _b : Object, typeof (_c = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _c : Object, typeof (_d = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _d : Object, typeof (_e = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _e : Object, typeof (_f = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _f : Object, typeof (_g = typeof geolocalizzazione_1.GeolocalizzazioneService !== \"undefined\" && geolocalizzazione_1.GeolocalizzazioneService) === \"function\" ? _g : Object, typeof (_h = typeof immobile_1.ImmobileService !== \"undefined\" && immobile_1.ImmobileService) === \"function\" ? _h : Object, typeof (_j = typeof incarico_1.IncaricoService !== \"undefined\" && incarico_1.IncaricoService) === \"function\" ? _j : Object])\r\n    ], HomeComponent);\r\n    return HomeComponent;\r\n}());\r\nexports.HomeComponent = HomeComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\home\\home.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\home\\home.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\r\nimport {JhiAlertService, JhiEventManager} from 'ng-jhipster';\r\nimport {Account, LoginModalService, Principal} from 'app/core';\r\nimport {HttpClient, HttpErrorResponse, HttpResponse} from '@angular/common/http';\r\nimport {GeolocalizzazioneService} from 'app/entities/geolocalizzazione';\r\nimport {IGeolocalizzazione} from 'app/shared/model/geolocalizzazione.model';\r\nimport {ImmobileService} from 'app/entities/immobile';\r\nimport {IncaricoService} from 'app/entities/incarico';\r\n// import {IImmobile} from 'app/shared/model/immobile.model';\r\nimport {IDashboard} from 'app/shared/model/dashboard.model';\r\nimport {AgmMap} from '@agm/core';\r\nimport {IGeolocalizzazioneExtended} from 'app/shared/model/geolocalizzazioneExtended.model';\r\nimport {Subscription} from 'rxjs';\r\nimport {closeSubscription} from 'app/shared/util/handler-util';\r\n\r\n@Component({\r\n    selector: 'jhi-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['home.scss']\r\n})\r\nexport class HomeComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    data: any;\r\n    fullresponse: any;\r\n\r\n    account: Account;\r\n    modalRef: NgbModalRef;\r\n    lat1 = 38.151212;\r\n    lng1 = 13.336005;\r\n    locations: IGeolocalizzazioneExtended[] = [];\r\n    // immobileInfo: IImmobile;\r\n    readonly customicon = {\r\n        url: 'content/images/gm-icon/bluemarker.png',\r\n        scaledSize: {\r\n            width: 40,\r\n            height: 40\r\n        }\r\n    };\r\n\r\n    @ViewChild('agmMap')\r\n    agmMap: AgmMap;\r\n    private geoLocalizazzioneSubscription: Subscription;\r\n    private eventManagerSubscription: Subscription;\r\n    private principalSubscription: Subscription;\r\n\r\n    constructor(\r\n        private principal: Principal,\r\n        private loginModalService: LoginModalService,\r\n        private eventManager: JhiEventManager,\r\n        private http: HttpClient,\r\n        private jhiAlertService: JhiAlertService,\r\n        private geolocalizzazioneService: GeolocalizzazioneService,\r\n        private immobileService: ImmobileService,\r\n        private incaricoService: IncaricoService\r\n    ) {\r\n        this.incaricoService.dashboardQuery().subscribe(\r\n            (res: HttpResponse<IDashboard[]>) => this.setResponseDashboard(res.body),\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.principalSubscription = this.principal.getAuthenticationState().subscribe(userIdentity => {\r\n            this.account = userIdentity;\r\n            this.updateMapLocations();\r\n        });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.principal.identity().then(account => {\r\n            this.account = account;\r\n            this.updateMapLocations();\r\n        }, error => this.resetLocations());\r\n\r\n        this.registerAuthenticationSuccess();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.resetLocations();\r\n        closeSubscription(this.geoLocalizazzioneSubscription);\r\n        closeSubscription(this.eventManagerSubscription);\r\n        closeSubscription(this.principalSubscription);\r\n    }\r\n\r\n    private resetLocations() {\r\n        this.locations = [];\r\n    }\r\n\r\n    private updateMapLocations() {\r\n        if (this.account) {\r\n            const requestParams = {filter: 'posizione(codice)-is-null'};\r\n\r\n            closeSubscription(this.geoLocalizazzioneSubscription);\r\n            this.geoLocalizazzioneSubscription =\r\n                this.geolocalizzazioneService.findExtended(requestParams).subscribe(\r\n                    (res: IGeolocalizzazioneExtended[]) => {\r\n                        this.locations = res;\r\n                        console.log(this.locations);\r\n                        this.forceMapFitBounds();\r\n                    },\r\n                    error => this.onError(error));\r\n        } else {\r\n            this.resetLocations();\r\n        }\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    private registerAuthenticationSuccess() {\r\n        closeSubscription(this.eventManagerSubscription);\r\n        this.eventManagerSubscription = this.eventManager.subscribe('authenticationSuccess', message => {\r\n            this.principal.identity().then(account => {\r\n                this.account = account;\r\n                this.updateMapLocations();\r\n            });\r\n        });\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.principal.isAuthenticated();\r\n    }\r\n\r\n    login() {\r\n        this.modalRef = this.loginModalService.open();\r\n    }\r\n\r\n    /* infoOnMouseOver(currentLocation: IGeolocalizzazione) {\r\n        this.immobileService.find(+currentLocation.immobile).subscribe(res => {\r\n            this.immobileInfo = res.body;\r\n        });\r\n    }*/\r\n\r\n    forceMapFitBounds() {\r\n        const google = window['google'];\r\n\r\n        // zoom sulla mappa in base alle posizioni ottenute\r\n        if (google && this.locations && this.locations.length > 0) {\r\n            // se le coordinate sono presenti\r\n            // e se la variabile 'google' Ã¨ stata inizializzata dagli import di Angular\r\n            const bounds = new google.maps.LatLngBounds();\r\n            for (const mm of this.locations) {\r\n                bounds.extend(new google.maps.LatLng(Number(mm.latitudine), Number(mm.longitudine)));\r\n            }\r\n            // @ts-ignore\r\n            this.agmMap._mapsWrapper.fitBounds(bounds);\r\n        }\r\n    }\r\n\r\n    private setResponseDashboard(body: any) {\r\n        this.fullresponse = body;\r\n        const currvalues: number[] = [];\r\n        const currlabels: string[] = [];\r\n        const colors: string[] = [];\r\n        const allcolors: string[] = ['#FF6384', '#36A2EB', '#16A7AB', '#AA63EE'];\r\n\r\n        for (const key in this.fullresponse) {\r\n            if (this.fullresponse.hasOwnProperty(key)) {\r\n                currlabels.push(this.fullresponse[key].label);\r\n                currvalues.push(this.fullresponse[key].value);\r\n                colors.push(allcolors[key]);\r\n            }\r\n        }\r\n\r\n        this.data = {\r\n            labels: currlabels,\r\n            datasets: [\r\n                {\r\n                    data: currvalues,\r\n                    backgroundColor: colors,\r\n                    hoverBackgroundColor: colors\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-update.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-update.component.ts","mtime":1548761752465},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar immobile_service_1 = require(\"./immobile.service\");\r\nvar geolocalizzazione_1 = require(\"app/entities/geolocalizzazione\");\r\nvar incarico_1 = require(\"app/entities/incarico\");\r\nvar upload_file_service_1 = require(\"app/entities/immobile/upload-file.service\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar core_2 = require(\"@agm/core\");\r\nvar google_utils_1 = require(\"app/shared/util/google-utils\");\r\nvar google_utils_2 = require(\"app/shared/util/google-utils\");\r\nvar core_3 = require(\"app/core\");\r\nvar DIM_1 = 1;\r\nvar ImmobileUpdateComponent = /** @class */ (function () {\r\n    function ImmobileUpdateComponent(dataUtils, jhiAlertService, immobileService, geolocalizzazioneService, incaricoService, activatedRoute, uploadService, userService, router, \r\n    // private mapsService: MapsService,\r\n    mapsAPILoader, ngZone) {\r\n        this.dataUtils = dataUtils;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.immobileService = immobileService;\r\n        this.geolocalizzazioneService = geolocalizzazioneService;\r\n        this.incaricoService = incaricoService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.uploadService = uploadService;\r\n        this.userService = userService;\r\n        this.router = router;\r\n        this.mapsAPILoader = mapsAPILoader;\r\n        this.ngZone = ngZone;\r\n        this.showUpload = false;\r\n        this.filesToUpload = [];\r\n        this.progress = { percentage: 0 };\r\n    }\r\n    ImmobileUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var immobile = _a.immobile;\r\n            _this.immobile = immobile;\r\n        });\r\n        this.mapsData = new google_utils_2.MapsData();\r\n        /* this.geolocalizzazioneService.query({ filter: 'posizione(codice)-is-null' }).subscribe(\r\n             (res: HttpResponse<IGeolocalizzazione[]>) => {\r\n                 if (!this.immobile.geolocalizzazioneId) {\r\n                     this.locaziones = res.body;\r\n                 } else {\r\n                     this.geolocalizzazioneService.find(this.immobile.geolocalizzazioneId).subscribe(\r\n                         (subRes: HttpResponse<IGeolocalizzazione>) => {\r\n                             this.locaziones = [subRes.body].concat(res.body);\r\n                         },\r\n                         (subRes: HttpErrorResponse) => this.onError(subRes.message)\r\n                     );\r\n                 }\r\n             },\r\n             (res: HttpErrorResponse) => this.onError(res.message)\r\n         ); */\r\n        console.log(this.immobile.geolocalizzazioneId);\r\n        this.incaricoService.query().subscribe(function (res) {\r\n            _this.incaricos = res.body;\r\n        }, function (res) { return _this.onError(res.message); });\r\n        this.incaricoRef = this.activatedRoute.snapshot.queryParamMap.get('incaricoRef') ? +this.activatedRoute.snapshot.queryParamMap.get('incaricoRef') : null;\r\n        this.showUpload = true;\r\n        if (this.immobile.id != null) {\r\n            this.immobileId = '' + this.immobile.id;\r\n            this.retrieveList();\r\n        }\r\n        this.searchControl = new forms_1.FormControl();\r\n        this.retrieveCordinate();\r\n        this.retrieveUsersAgents();\r\n    };\r\n    ImmobileUpdateComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    ImmobileUpdateComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    ImmobileUpdateComponent.prototype.setFileData = function (event, entity, field, isImage) {\r\n        this.dataUtils.setFileData(event, entity, field, isImage);\r\n    };\r\n    ImmobileUpdateComponent.prototype.previousState = function (newImmobile) {\r\n        if (newImmobile && newImmobile.id) {\r\n            console.log('newImmobile.id:' + newImmobile.id);\r\n            if (this.incaricoRef) {\r\n                if (this.incaricoRef > 0) {\r\n                    this.router.navigate(['incarico/' + this.incaricoRef + '/edit'], { queryParams: { immobileRef: newImmobile.id } });\r\n                }\r\n                else {\r\n                    this.router.navigate(['incarico/new'], { queryParams: { immobileRef: newImmobile.id } });\r\n                }\r\n            }\r\n            else {\r\n                window.history.back();\r\n            }\r\n        }\r\n        else {\r\n            window.history.back();\r\n        }\r\n    };\r\n    /* save() {\r\n        this.isSaving = true;\r\n        if (this.immobile.id !== undefined) {\r\n            if (this.immobile.indirizzo ) {\r\n                this.impostaLocazione();\r\n            } else {\r\n                this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            }\r\n        } else {\r\n            this.subscribeToSaveResponseAndStay(this.immobileService.create(this.immobile));\r\n        }\r\n    } */\r\n    ImmobileUpdateComponent.prototype.retrieveCordinate = function () {\r\n        var _this = this;\r\n        this.mapsAPILoader.load().then(function () {\r\n            google_utils_1.autoComplete(_this.immobile, _this.searchElementRef, _this.ngZone, _this.zoom, _this.mapsData);\r\n            _this.latitude = _this.mapsData.latitude;\r\n            _this.longitude = _this.mapsData.longitude;\r\n            console.log(_this.mapsData);\r\n        });\r\n    };\r\n    ImmobileUpdateComponent.prototype.retrieveUsersAgents = function () {\r\n        var _this = this;\r\n        this.userService.queryAgents().subscribe(function (res) {\r\n            return _this.checkAgente(res.body);\r\n        }, function (res) { return _this.onError(res.body); });\r\n    };\r\n    ImmobileUpdateComponent.prototype.checkAgente = function (users) {\r\n        this.users = users;\r\n        if (this.checkDim()) {\r\n            this.immobile.agente = this.users[0].login;\r\n        }\r\n    };\r\n    ImmobileUpdateComponent.prototype.checkDim = function () {\r\n        if (this.users.length === DIM_1) {\r\n            return true;\r\n        }\r\n    };\r\n    ImmobileUpdateComponent.prototype.save = function () {\r\n        var _this = this;\r\n        this.isSaving = true;\r\n        if (this.immobile.id !== undefined) {\r\n            if (this.immobile.indirizzo) {\r\n                this.impostaLocazione();\r\n            }\r\n            else {\r\n                this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            }\r\n        }\r\n        else {\r\n            if (this.immobile.indirizzo) {\r\n                this.immobileService.create(this.immobile).subscribe(function (res) {\r\n                    _this.immobile.id = res.body.id;\r\n                    _this.impostaLocazione();\r\n                });\r\n            }\r\n            else {\r\n                this.subscribeToSaveResponse(this.immobileService.create(this.immobile));\r\n            }\r\n        }\r\n    };\r\n    ImmobileUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) { return _this.onSaveSuccess(res.body); }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    ImmobileUpdateComponent.prototype.onSaveSuccess = function (newImmobile) {\r\n        this.isSaving = false;\r\n        this.previousState(newImmobile);\r\n    };\r\n    ImmobileUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    ImmobileUpdateComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    ImmobileUpdateComponent.prototype.trackGeolocalizzazioneById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ImmobileUpdateComponent.prototype.trackIncaricoById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ImmobileUpdateComponent.prototype.trackItemById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ImmobileUpdateComponent.prototype.selectFile = function (event) {\r\n        this.filesToUpload = event.target.files;\r\n    };\r\n    ImmobileUpdateComponent.prototype.retrieveList = function () {\r\n        var _this = this;\r\n        this.fileUploads = this.uploadService.getFiles(this.immobileId);\r\n        this.uploadArray = [];\r\n        this.fileUploads.subscribe(function (data) {\r\n            _this.uploadArray.push(data);\r\n        });\r\n    };\r\n    ImmobileUpdateComponent.prototype.myUploader = function (event) {\r\n        for (var _i = 0, _a = event.files; _i < _a.length; _i++) {\r\n            var file = _a[_i];\r\n            this.filesToUpload.push(file);\r\n        }\r\n        console.log(this.filesToUpload);\r\n    };\r\n    /* retrieveCordinate() {\r\n         this.mapsService.retrieveLatLong(this.immobile.indirizzo.trim(), this.immobile.citta).subscribe(\r\n             data => {\r\n                 this.lat = data['results'][0]['geometry']['location']['lat'];\r\n                 this.long = data['results'][0]['geometry']['location']['lng'];\r\n                 this.impostaLocazione();\r\n             },\r\n             err => {\r\n                 console.log(err);\r\n             }\r\n         );\r\n     }*/\r\n    ImmobileUpdateComponent.prototype.impostaLocazione = function () {\r\n        var _this = this;\r\n        var locazione = null;\r\n        if (this.immobile.geolocalizzazioneId) {\r\n            locazione = {\r\n                id: this.immobile.geolocalizzazioneId,\r\n                immobile: '' + this.immobile.id,\r\n                latitudine: '' + this.mapsData.latitude,\r\n                longitudine: '' + this.mapsData.longitude\r\n            };\r\n            this.geolocalizzazioneService.update(locazione).subscribe(function (res) {\r\n            });\r\n            this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            console.log('posizione immobile aggiornata');\r\n        }\r\n        else {\r\n            locazione = {\r\n                immobile: '' + this.immobile.id,\r\n                latitudine: '' + this.mapsData.latitude,\r\n                longitudine: '' + this.mapsData.longitude\r\n            };\r\n            this.geolocalizzazioneService.create(locazione).subscribe(function (res) {\r\n                _this.immobile.geolocalizzazioneId = res.body.id;\r\n                _this.subscribeToSaveResponse(_this.immobileService.update(_this.immobile));\r\n            });\r\n            console.log('posizione immobile creata');\r\n        }\r\n    };\r\n    ImmobileUpdateComponent.prototype.myUploaderEnd = function (event) {\r\n        var _this = this;\r\n        if (this.immobile.id === undefined) {\r\n            this.immobileService.create(this.immobile).subscribe(function (res) {\r\n                _this.immobile.id = res.body.id;\r\n                _this.immobileId = '' + res.body.id;\r\n                _this.eseguiUpload(event);\r\n            });\r\n        }\r\n        else {\r\n            this.eseguiUpload(event);\r\n        }\r\n        // this.filesToUpload = undefined;\r\n    };\r\n    ImmobileUpdateComponent.prototype.eseguiUpload = function (event) {\r\n        var _this = this;\r\n        this.progress.percentage = 0;\r\n        var files = this.filesToUpload;\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.currentFileUpload = files[i];\r\n            this.uploadService.pushFileToStorage(this.currentFileUpload, this.immobileId).subscribe(function (evento) {\r\n                if (evento.type === http_1.HttpEventType.UploadProgress) {\r\n                    _this.progress.percentage = Math.round(100 * event.loaded / event.total);\r\n                }\r\n                else if (evento instanceof http_1.HttpResponse) {\r\n                    console.log('File is completely uploaded!');\r\n                    _this.fileUploads = _this.uploadService.getFiles(_this.immobileId);\r\n                }\r\n            });\r\n        }\r\n        this.retrieveList();\r\n    };\r\n    ImmobileUpdateComponent.prototype.delete = function (id) {\r\n        var _this = this;\r\n        this.uploadService.delete(id).subscribe(function (event) {\r\n            if (event instanceof http_1.HttpResponse) {\r\n                console.log('File is completely removed!');\r\n                _this.retrieveList();\r\n            }\r\n        });\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n    tslib_1.__decorate([\r\n        core_1.ViewChild('search'),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _a : Object)\r\n    ], ImmobileUpdateComponent.prototype, \"searchElementRef\", void 0);\r\n    ImmobileUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-immobile-update',\r\n            templateUrl: './immobile-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_b = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof immobile_service_1.ImmobileService !== \"undefined\" && immobile_service_1.ImmobileService) === \"function\" ? _d : Object, typeof (_e = typeof geolocalizzazione_1.GeolocalizzazioneService !== \"undefined\" && geolocalizzazione_1.GeolocalizzazioneService) === \"function\" ? _e : Object, typeof (_f = typeof incarico_1.IncaricoService !== \"undefined\" && incarico_1.IncaricoService) === \"function\" ? _f : Object, typeof (_g = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _g : Object, typeof (_h = typeof upload_file_service_1.UploadFileService !== \"undefined\" && upload_file_service_1.UploadFileService) === \"function\" ? _h : Object, typeof (_j = typeof core_3.UserService !== \"undefined\" && core_3.UserService) === \"function\" ? _j : Object, typeof (_k = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _k : Object, typeof (_l = typeof core_2.MapsAPILoader !== \"undefined\" && core_2.MapsAPILoader) === \"function\" ? _l : Object, typeof (_m = typeof core_1.NgZone !== \"undefined\" && core_1.NgZone) === \"function\" ? _m : Object])\r\n    ], ImmobileUpdateComponent);\r\n    return ImmobileUpdateComponent;\r\n}());\r\nexports.ImmobileUpdateComponent = ImmobileUpdateComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-update.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpErrorResponse, HttpEventType, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {JhiAlertService, JhiDataUtils} from 'ng-jhipster';\r\nimport {Immobile} from 'app/shared/model/immobile.model';\r\nimport {ImmobileService} from './immobile.service';\r\nimport {IGeolocalizzazione} from 'app/shared/model/geolocalizzazione.model';\r\nimport {GeolocalizzazioneService} from 'app/entities/geolocalizzazione';\r\nimport {Incarico} from 'app/shared/model/incarico.model';\r\nimport {IncaricoService} from 'app/entities/incarico';\r\nimport {UploadFileService} from 'app/entities/immobile/upload-file.service';\r\nimport {FormControl} from '@angular/forms';\r\nimport {IFiles} from 'app/shared/model/files.model';\r\nimport {MapsAPILoader} from '@agm/core';\r\nimport {autoComplete} from 'app/shared/util/google-utils';\r\nimport {MapsData} from 'app/shared/util/google-utils';\r\nimport {User, UserService} from 'app/core';\r\n\r\nconst DIM_1 = 1;\r\n\r\n@Component({\r\n    selector: 'jhi-immobile-update',\r\n    templateUrl: './immobile-update.component.html'\r\n})\r\nexport class ImmobileUpdateComponent implements OnInit {\r\n    immobile: Immobile;\r\n    isSaving: boolean;\r\n    locaziones: IGeolocalizzazione[];\r\n    incaricos: Incarico[];\r\n    showUpload = false;\r\n    fileUploads: Observable<IFiles>;\r\n    aux: any;\r\n    uploadArray: Array<IFiles>;\r\n    fileList: Array<String>;\r\n    filesToUpload: Array<File> = [];\r\n    currentFileUpload: File;\r\n    immobileId: string;\r\n    progress: { percentage: number } = {percentage: 0};\r\n    reload: string;\r\n    incaricoRef: number;\r\n    idLocazione: any;\r\n    mapsData: MapsData;\r\n    users: User[];\r\n\r\n    public searchControl: FormControl;\r\n\r\n    public latitude: number;\r\n    public longitude: number;\r\n\r\n    public zoom: number;\r\n\r\n    @ViewChild('search')\r\n    public searchElementRef: ElementRef;\r\n\r\n    constructor(\r\n        private dataUtils: JhiDataUtils,\r\n        private jhiAlertService: JhiAlertService,\r\n        private immobileService: ImmobileService,\r\n        private geolocalizzazioneService: GeolocalizzazioneService,\r\n        private incaricoService: IncaricoService,\r\n        private activatedRoute: ActivatedRoute,\r\n        private uploadService: UploadFileService,\r\n        private userService: UserService,\r\n        private router: Router,\r\n        // private mapsService: MapsService,\r\n\r\n        private mapsAPILoader: MapsAPILoader,\r\n        private ngZone: NgZone\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({immobile}) => {\r\n            this.immobile = immobile;\r\n        });\r\n        this.mapsData = new MapsData();\r\n        /* this.geolocalizzazioneService.query({ filter: 'posizione(codice)-is-null' }).subscribe(\r\n             (res: HttpResponse<IGeolocalizzazione[]>) => {\r\n                 if (!this.immobile.geolocalizzazioneId) {\r\n                     this.locaziones = res.body;\r\n                 } else {\r\n                     this.geolocalizzazioneService.find(this.immobile.geolocalizzazioneId).subscribe(\r\n                         (subRes: HttpResponse<IGeolocalizzazione>) => {\r\n                             this.locaziones = [subRes.body].concat(res.body);\r\n                         },\r\n                         (subRes: HttpErrorResponse) => this.onError(subRes.message)\r\n                     );\r\n                 }\r\n             },\r\n             (res: HttpErrorResponse) => this.onError(res.message)\r\n         ); */\r\n        console.log(this.immobile.geolocalizzazioneId);\r\n        this.incaricoService.query().subscribe(\r\n            (res: HttpResponse<Incarico[]>) => {\r\n                this.incaricos = res.body;\r\n            },\r\n            (res: HttpErrorResponse) => this.onError(res.message)\r\n        );\r\n        this.incaricoRef = this.activatedRoute.snapshot.queryParamMap.get('incaricoRef') ? +this.activatedRoute.snapshot.queryParamMap.get('incaricoRef') : null;\r\n\r\n        this.showUpload = true;\r\n        if (this.immobile.id != null) {\r\n            this.immobileId = '' + this.immobile.id;\r\n            this.retrieveList();\r\n        }\r\n\r\n        this.searchControl = new FormControl();\r\n        this.retrieveCordinate();\r\n        this.retrieveUsersAgents();\r\n\r\n    }\r\n\r\n    byteSize(field) {\r\n        return this.dataUtils.byteSize(field);\r\n    }\r\n\r\n    openFile(contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    }\r\n\r\n    setFileData(event, entity, field, isImage) {\r\n        this.dataUtils.setFileData(event, entity, field, isImage);\r\n    }\r\n\r\n    previousState(newImmobile?: Immobile) {\r\n        if (newImmobile && newImmobile.id) {\r\n            console.log('newImmobile.id:' + newImmobile.id);\r\n            if (this.incaricoRef) {\r\n                if (this.incaricoRef > 0) {\r\n                    this.router.navigate(['incarico/' + this.incaricoRef + '/edit'], {queryParams: {immobileRef: newImmobile.id}});\r\n                } else {\r\n                    this.router.navigate(['incarico/new'], {queryParams: {immobileRef: newImmobile.id}});\r\n                }\r\n            } else {\r\n                window.history.back();\r\n            }\r\n        } else {\r\n            window.history.back();\r\n        }\r\n    }\r\n\r\n    /* save() {\r\n        this.isSaving = true;\r\n        if (this.immobile.id !== undefined) {\r\n            if (this.immobile.indirizzo ) {\r\n                this.impostaLocazione();\r\n            } else {\r\n                this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            }\r\n        } else {\r\n            this.subscribeToSaveResponseAndStay(this.immobileService.create(this.immobile));\r\n        }\r\n    } */\r\n\r\n    retrieveCordinate() {\r\n\r\n        this.mapsAPILoader.load().then(() => {\r\n            autoComplete(this.immobile, this.searchElementRef, this.ngZone, this.zoom, this.mapsData);\r\n            this.latitude = this.mapsData.latitude;\r\n            this.longitude = this.mapsData.longitude;\r\n            console.log(this.mapsData);\r\n        });\r\n\r\n    }\r\n\r\n    private retrieveUsersAgents() {\r\n        this.userService.queryAgents().subscribe(\r\n            (res: HttpResponse<User[]>) =>\r\n                this.checkAgente(res.body),\r\n            (res: HttpResponse<any>) => this.onError(res.body)\r\n        );\r\n    }\r\n\r\n    checkAgente(users) {\r\n        this.users = users;\r\n        if (this.checkDim()) {\r\n            this.immobile.agente = this.users[0].login;\r\n        }\r\n    }\r\n\r\n    checkDim() {\r\n        if (this.users.length === DIM_1) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        if (this.immobile.id !== undefined) {\r\n            if (this.immobile.indirizzo) {\r\n                this.impostaLocazione();\r\n            } else {\r\n                this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            }\r\n        } else {\r\n            if (this.immobile.indirizzo) {\r\n                this.immobileService.create(this.immobile).subscribe(res => {\r\n                    this.immobile.id = res.body.id;\r\n                    this.impostaLocazione();\r\n                });\r\n            } else {\r\n                this.subscribeToSaveResponse(this.immobileService.create(this.immobile));\r\n            }\r\n        }\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<Immobile>>) {\r\n        result.subscribe((res: HttpResponse<Immobile>) => this.onSaveSuccess(res.body), (res: HttpErrorResponse) => this.onSaveError());\r\n    }\r\n\r\n    private onSaveSuccess(newImmobile: Immobile) {\r\n        this.isSaving = false;\r\n        this.previousState(newImmobile);\r\n\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    trackGeolocalizzazioneById(index: number, item: IGeolocalizzazione) {\r\n        return item.id;\r\n    }\r\n\r\n    trackIncaricoById(index: number, item: Incarico) {\r\n        return item.id;\r\n    }\r\n\r\n    trackItemById(index: number, item: any) {\r\n        return item.id;\r\n    }\r\n\r\n    selectFile(event) {\r\n        this.filesToUpload = <Array<File>>event.target.files;\r\n    }\r\n\r\n    retrieveList() {\r\n        this.fileUploads = this.uploadService.getFiles(this.immobileId);\r\n        this.uploadArray = [];\r\n        this.fileUploads.subscribe(data => {\r\n            this.uploadArray.push(data);\r\n        });\r\n    }\r\n\r\n    myUploader(event) {\r\n        for (const file of event.files) {\r\n            this.filesToUpload.push(file);\r\n        }\r\n        console.log(this.filesToUpload);\r\n    }\r\n\r\n    /* retrieveCordinate() {\r\n         this.mapsService.retrieveLatLong(this.immobile.indirizzo.trim(), this.immobile.citta).subscribe(\r\n             data => {\r\n                 this.lat = data['results'][0]['geometry']['location']['lat'];\r\n                 this.long = data['results'][0]['geometry']['location']['lng'];\r\n                 this.impostaLocazione();\r\n             },\r\n             err => {\r\n                 console.log(err);\r\n             }\r\n         );\r\n     }*/\r\n\r\n    impostaLocazione() {\r\n\r\n        let locazione: IGeolocalizzazione = null;\r\n        if (this.immobile.geolocalizzazioneId) {\r\n            locazione = {\r\n                id: this.immobile.geolocalizzazioneId,\r\n                immobile: '' + this.immobile.id,\r\n                latitudine: '' + this.mapsData.latitude,\r\n                longitudine: '' + this.mapsData.longitude\r\n            };\r\n            this.geolocalizzazioneService.update(locazione).subscribe(res => {\r\n            });\r\n            this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            console.log('posizione immobile aggiornata');\r\n        } else {\r\n            locazione = {\r\n                immobile: '' + this.immobile.id,\r\n                latitudine: '' + this.mapsData.latitude,\r\n                longitudine: '' + this.mapsData.longitude\r\n            };\r\n            this.geolocalizzazioneService.create(locazione).subscribe(res => {\r\n                this.immobile.geolocalizzazioneId = res.body.id;\r\n                this.subscribeToSaveResponse(this.immobileService.update(this.immobile));\r\n            });\r\n            console.log('posizione immobile creata');\r\n        }\r\n    }\r\n\r\n    myUploaderEnd(event) {\r\n        if (this.immobile.id === undefined) {\r\n            this.immobileService.create(this.immobile).subscribe(res => {\r\n                this.immobile.id = res.body.id;\r\n                this.immobileId = '' + res.body.id;\r\n                this.eseguiUpload(event);\r\n            });\r\n\r\n        } else {\r\n            this.eseguiUpload(event);\r\n        }\r\n        // this.filesToUpload = undefined;\r\n    }\r\n\r\n    eseguiUpload(event) {\r\n        this.progress.percentage = 0;\r\n        const files: Array<File> = this.filesToUpload;\r\n        for (let i = 0; i < files.length; i++) {\r\n            this.currentFileUpload = files[i];\r\n            this.uploadService.pushFileToStorage(this.currentFileUpload, this.immobileId).subscribe(evento => {\r\n                if (evento.type === HttpEventType.UploadProgress) {\r\n                    this.progress.percentage = Math.round(100 * event.loaded / event.total);\r\n                } else if (evento instanceof HttpResponse) {\r\n                    console.log('File is completely uploaded!');\r\n                    this.fileUploads = this.uploadService.getFiles(this.immobileId);\r\n                }\r\n            });\r\n        }\r\n        this.retrieveList();\r\n    }\r\n\r\n    delete(id) {\r\n        this.uploadService.delete(id).subscribe(event => {\r\n            if (event instanceof HttpResponse) {\r\n                console.log('File is completely removed!');\r\n                this.retrieveList();\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}]}
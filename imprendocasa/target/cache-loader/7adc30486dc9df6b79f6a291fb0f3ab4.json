{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","mtime":1548761749915},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nvar metrics_modal_component_1 = require(\"./metrics-modal.component\");\r\nvar metrics_service_1 = require(\"./metrics.service\");\r\nvar JhiMetricsMonitoringComponent = /** @class */ (function () {\r\n    function JhiMetricsMonitoringComponent(modalService, metricsService) {\r\n        this.modalService = modalService;\r\n        this.metricsService = metricsService;\r\n        this.metrics = {};\r\n        this.cachesStats = {};\r\n        this.servicesStats = {};\r\n        this.updatingMetrics = true;\r\n        this.JCACHE_KEY = 'jcache.statistics';\r\n    }\r\n    JhiMetricsMonitoringComponent.prototype.ngOnInit = function () {\r\n        this.refresh();\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.refresh = function () {\r\n        var _this = this;\r\n        this.updatingMetrics = true;\r\n        this.metricsService.getMetrics().subscribe(function (metrics) {\r\n            _this.metrics = metrics;\r\n            _this.updatingMetrics = false;\r\n            _this.servicesStats = {};\r\n            _this.cachesStats = {};\r\n            Object.keys(metrics.timers).forEach(function (key) {\r\n                var value = metrics.timers[key];\r\n                if (key.includes('web.rest') || key.includes('service')) {\r\n                    _this.servicesStats[key] = value;\r\n                }\r\n            });\r\n            Object.keys(metrics.gauges).forEach(function (key) {\r\n                if (key.includes('jcache.statistics')) {\r\n                    var value = metrics.gauges[key].value;\r\n                    // remove gets or puts\r\n                    var index = key.lastIndexOf('.');\r\n                    var newKey = key.substr(0, index);\r\n                    // Keep the name of the domain\r\n                    _this.cachesStats[newKey] = {\r\n                        name: _this.JCACHE_KEY.length,\r\n                        value: value\r\n                    };\r\n                }\r\n            });\r\n        });\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.refreshThreadDumpData = function () {\r\n        var _this = this;\r\n        this.metricsService.threadDump().subscribe(function (data) {\r\n            var modalRef = _this.modalService.open(metrics_modal_component_1.JhiMetricsMonitoringModalComponent, { size: 'lg' });\r\n            modalRef.componentInstance.threadDump = data.threads;\r\n            modalRef.result.then(function (result) {\r\n                // Left blank intentionally, nothing to do here\r\n            }, function (reason) {\r\n                // Left blank intentionally, nothing to do here\r\n            });\r\n        });\r\n    };\r\n    JhiMetricsMonitoringComponent.prototype.filterNaN = function (input) {\r\n        if (isNaN(input)) {\r\n            return 0;\r\n        }\r\n        return input;\r\n    };\r\n    var _a, _b;\r\n    JhiMetricsMonitoringComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-metrics',\r\n            templateUrl: './metrics.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _a : Object, typeof (_b = typeof metrics_service_1.JhiMetricsService !== \"undefined\" && metrics_service_1.JhiMetricsService) === \"function\" ? _b : Object])\r\n    ], JhiMetricsMonitoringComponent);\r\n    return JhiMetricsMonitoringComponent;\r\n}());\r\nexports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { JhiMetricsMonitoringModalComponent } from './metrics-modal.component';\nimport { JhiMetricsService } from './metrics.service';\n\n@Component({\n    selector: 'jhi-metrics',\n    templateUrl: './metrics.component.html'\n})\nexport class JhiMetricsMonitoringComponent implements OnInit {\n    metrics: any = {};\n    cachesStats: any = {};\n    servicesStats: any = {};\n    updatingMetrics = true;\n    JCACHE_KEY: string;\n\n    constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\n        this.JCACHE_KEY = 'jcache.statistics';\n    }\n\n    ngOnInit() {\n        this.refresh();\n    }\n\n    refresh() {\n        this.updatingMetrics = true;\n        this.metricsService.getMetrics().subscribe(metrics => {\n            this.metrics = metrics;\n            this.updatingMetrics = false;\n            this.servicesStats = {};\n            this.cachesStats = {};\n            Object.keys(metrics.timers).forEach(key => {\n                const value = metrics.timers[key];\n                if (key.includes('web.rest') || key.includes('service')) {\n                    this.servicesStats[key] = value;\n                }\n            });\n            Object.keys(metrics.gauges).forEach(key => {\n                if (key.includes('jcache.statistics')) {\n                    const value = metrics.gauges[key].value;\n                    // remove gets or puts\n                    const index = key.lastIndexOf('.');\n                    const newKey = key.substr(0, index);\n\n                    // Keep the name of the domain\n                    this.cachesStats[newKey] = {\n                        name: this.JCACHE_KEY.length,\n                        value\n                    };\n                }\n            });\n        });\n    }\n\n    refreshThreadDumpData() {\n        this.metricsService.threadDump().subscribe(data => {\n            const modalRef = this.modalService.open(JhiMetricsMonitoringModalComponent, { size: 'lg' });\n            modalRef.componentInstance.threadDump = data.threads;\n            modalRef.result.then(\n                result => {\n                    // Left blank intentionally, nothing to do here\n                },\n                reason => {\n                    // Left blank intentionally, nothing to do here\n                }\n            );\n        });\n    }\n\n    filterNaN(input) {\n        if (isNaN(input)) {\n            return 0;\n        }\n        return input;\n    }\n}\n"]}]}
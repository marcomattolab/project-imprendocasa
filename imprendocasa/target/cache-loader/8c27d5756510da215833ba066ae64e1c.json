{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.component.ts","mtime":1548761752489},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar core_2 = require(\"app/core\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar immobile_service_1 = require(\"./immobile.service\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar ImmobileComponent = /** @class */ (function () {\r\n    function ImmobileComponent(immobileService, parseLinks, jhiAlertService, principal, activatedRoute, dataUtils, router, eventManager) {\r\n        var _this = this;\r\n        this.immobileService = immobileService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.principal = principal;\r\n        this.activatedRoute = activatedRoute;\r\n        this.dataUtils = dataUtils;\r\n        this.router = router;\r\n        this.eventManager = eventManager;\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n    ImmobileComponent.prototype.initRicerca = function () {\r\n        this.formImmobile = new forms_1.FormGroup({\r\n            codice: new forms_1.FormControl(''),\r\n            descrizione: new forms_1.FormControl(''),\r\n            indirizzo: new forms_1.FormControl(''),\r\n            regione: new forms_1.FormControl(''),\r\n            provincia: new forms_1.FormControl(''),\r\n            citta: new forms_1.FormControl(''),\r\n            cap: new forms_1.FormControl(''),\r\n            note: new forms_1.FormControl(''),\r\n            datiCatastali: new forms_1.FormControl(''),\r\n            foglio: new forms_1.FormControl(''),\r\n            sub: new forms_1.FormControl(''),\r\n            particella: new forms_1.FormControl('')\r\n        });\r\n    };\r\n    ImmobileComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        var queryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        this.immobileService\r\n            .query(queryParams)\r\n            .subscribe(function (res) { return _this.paginateImmobiles(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ImmobileComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    ImmobileComponent.prototype.transition = function () {\r\n        this.router.navigate(['/immobile'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    ImmobileComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/immobile',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    ImmobileComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.principal.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.registerChangeInImmobiles();\r\n        this.initRicerca();\r\n    };\r\n    ImmobileComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    };\r\n    ImmobileComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    ImmobileComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    ImmobileComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    ImmobileComponent.prototype.registerChangeInImmobiles = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('immobileListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    ImmobileComponent.prototype.retrievePercentualeCompletamento = function (current) {\r\n        var nCampi = 8;\r\n        var i = 0;\r\n        if (current.codice != null) {\r\n            i++;\r\n        }\r\n        if (current.descrizione != null) {\r\n            i++;\r\n        }\r\n        if (current.indirizzo != null) {\r\n            i++;\r\n        }\r\n        if (current.cap != null) {\r\n            i++;\r\n        }\r\n        if (current.regione != null) {\r\n            i++;\r\n        }\r\n        if (current.provincia != null) {\r\n            i++;\r\n        }\r\n        if (current.citta != null) {\r\n            i++;\r\n        }\r\n        if (current.note != null) {\r\n            i++;\r\n        }\r\n        console.log('per immobile:' + current.id + 'i:' + i);\r\n        var percentuale = (i / nCampi) * 100;\r\n        this.completamento[current.id] = percentuale;\r\n        console.log(this.completamento);\r\n    };\r\n    ImmobileComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    ImmobileComponent.prototype.paginateImmobiles = function (data, headers) {\r\n        var _this = this;\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.immobiles = data;\r\n        this.completamento = [];\r\n        this.immobiles.forEach(function (immobile) {\r\n            _this.retrievePercentualeCompletamento(immobile);\r\n        });\r\n    };\r\n    ImmobileComponent.prototype.retrieveCompletamento = function (id) {\r\n        return this.completamento[id].toPrecision(3);\r\n    };\r\n    ImmobileComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    ImmobileComponent.prototype.cerca = function () {\r\n        var _this = this;\r\n        var formClienteControls = this.formImmobile.controls;\r\n        var searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        // filtro codice\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codice');\r\n        // filtro descrizione\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'descrizione');\r\n        // filtro regione\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'regione');\r\n        // filtro provincia\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\r\n        // filtro indirizzo\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\r\n        // filtro citta\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\r\n        // filtro cap\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\r\n        // filtro note\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'note');\r\n        // filtro dati catastali\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'datiCatastali');\r\n        // filtro particella\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'particella');\r\n        // filtro sub\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'sub');\r\n        // filtro foglio\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'foglio');\r\n        this.immobileService\r\n            .query(searchFilter)\r\n            .subscribe(function (res) { return _this.paginateImmobiles(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    ImmobileComponent.prototype.resetFiltri = function () {\r\n        this.initRicerca();\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    ImmobileComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-immobile',\r\n            templateUrl: './immobile.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof immobile_service_1.ImmobileService !== \"undefined\" && immobile_service_1.ImmobileService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _f : Object, typeof (_g = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _g : Object, typeof (_h = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _h : Object])\r\n    ], ImmobileComponent);\r\n    return ImmobileComponent;\r\n}());\r\nexports.ImmobileComponent = ImmobileComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\immobile\\immobile.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {HttpErrorResponse, HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Subscription} from 'rxjs';\r\nimport {JhiAlertService, JhiDataUtils, JhiEventManager, JhiParseLinks} from 'ng-jhipster';\r\n\r\nimport {Immobile} from 'app/shared/model/immobile.model';\r\nimport {Principal} from 'app/core';\r\n\r\nimport {checkAndCompileSearchFilterContains, ITEMS_PER_PAGE} from 'app/shared';\r\nimport {ImmobileService} from './immobile.service';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {Cliente} from 'app/shared/model/cliente.model';\r\n\r\n@Component({\r\n    selector: 'jhi-immobile',\r\n    templateUrl: './immobile.component.html'\r\n})\r\nexport class ImmobileComponent implements OnInit, OnDestroy {\r\n    currentAccount: any;\r\n    immobiles: Immobile[];\r\n    error: any;\r\n    success: any;\r\n    eventSubscriber: Subscription;\r\n    routeData: any;\r\n    links: any;\r\n    totalItems: any;\r\n    queryCount: any;\r\n    itemsPerPage: any;\r\n    page: any;\r\n    predicate: any;\r\n    previousPage: any;\r\n    reverse: any;\r\n    completamento: number[];\r\n    formImmobile: FormGroup;\r\n\r\n    constructor(\r\n        private immobileService: ImmobileService,\r\n        private parseLinks: JhiParseLinks,\r\n        private jhiAlertService: JhiAlertService,\r\n        private principal: Principal,\r\n        private activatedRoute: ActivatedRoute,\r\n        private dataUtils: JhiDataUtils,\r\n        private router: Router,\r\n        private eventManager: JhiEventManager\r\n    ) {\r\n        this.itemsPerPage = ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(data => {\r\n            this.page = data.pagingParams.page;\r\n            this.previousPage = data.pagingParams.page;\r\n            this.reverse = data.pagingParams.ascending;\r\n            this.predicate = data.pagingParams.predicate;\r\n        });\r\n\r\n    }\r\n\r\n    initRicerca() {\r\n\r\n        this.formImmobile = new FormGroup({\r\n            codice: new FormControl(''),\r\n            descrizione: new FormControl(''),\r\n            indirizzo: new FormControl(''),\r\n            regione: new FormControl(''),\r\n            provincia: new FormControl(''),\r\n            citta: new FormControl(''),\r\n            cap: new FormControl(''),\r\n            note: new FormControl(''),\r\n            datiCatastali: new FormControl(''),\r\n            foglio: new FormControl(''),\r\n            sub: new FormControl(''),\r\n            particella: new FormControl('')\r\n        });\r\n\r\n    }\r\n\r\n    loadAll() {\r\n        const queryParams = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n\r\n        this.immobileService\r\n            .query(queryParams)\r\n            .subscribe(\r\n                (res: HttpResponse<Immobile[]>) => this.paginateImmobiles(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    }\r\n\r\n    transition() {\r\n        this.router.navigate(['/immobile'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    }\r\n\r\n    clear() {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/immobile',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAll();\r\n        this.principal.identity().then(account => {\r\n            this.currentAccount = account;\r\n        });\r\n        this.registerChangeInImmobiles();\r\n        this.initRicerca();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n    }\r\n\r\n    trackId(index: number, item: Immobile) {\r\n        return item.id;\r\n    }\r\n\r\n    byteSize(field) {\r\n        return this.dataUtils.byteSize(field);\r\n    }\r\n\r\n    openFile(contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    }\r\n\r\n    registerChangeInImmobiles() {\r\n        this.eventSubscriber = this.eventManager.subscribe('immobileListModification', response => this.loadAll());\r\n    }\r\n\r\n    retrievePercentualeCompletamento(current: Immobile) {\r\n        const nCampi = 8;\r\n        let i = 0;\r\n\r\n        if (current.codice != null) {\r\n            i++;\r\n        }\r\n        if (current.descrizione != null) {\r\n            i++;\r\n        }\r\n        if (current.indirizzo != null) {\r\n            i++;\r\n        }\r\n        if (current.cap != null) {\r\n            i++;\r\n        }\r\n        if (current.regione != null) {\r\n            i++;\r\n        }\r\n        if (current.provincia != null) {\r\n            i++;\r\n        }\r\n        if (current.citta != null) {\r\n            i++;\r\n        }\r\n        if (current.note != null) {\r\n            i++;\r\n        }\r\n        console.log('per immobile:' + current.id + 'i:' + i);\r\n        const percentuale = (i / nCampi) * 100;\r\n        this.completamento[current.id] = percentuale;\r\n        console.log(this.completamento);\r\n    }\r\n\r\n    sort() {\r\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private paginateImmobiles(data: Immobile[], headers: HttpHeaders) {\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.immobiles = data;\r\n        this.completamento = [];\r\n        this.immobiles.forEach(immobile => {\r\n            this.retrievePercentualeCompletamento(immobile);\r\n        });\r\n    }\r\n\r\n    retrieveCompletamento(id: any) {\r\n        return this.completamento[id].toPrecision(3);\r\n    }\r\n\r\n    private onError(errorMessage: string) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    }\r\n\r\n    cerca() {\r\n        const formClienteControls = this.formImmobile.controls;\r\n        let searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n\r\n        // filtro codice\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'codice');\r\n        // filtro descrizione\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'descrizione');\r\n        // filtro regione\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'regione');\r\n        // filtro provincia\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'provincia');\r\n        // filtro indirizzo\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'indirizzo');\r\n        // filtro citta\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'citta');\r\n        // filtro cap\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'cap');\r\n        // filtro note\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'note');\r\n        // filtro dati catastali\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'datiCatastali');\r\n        // filtro particella\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'particella');\r\n        // filtro sub\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'sub');\r\n        // filtro foglio\r\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'foglio');\r\n\r\n        this.immobileService\r\n            .query(searchFilter)\r\n            .subscribe(\r\n                (res: HttpResponse<Cliente[]>) => this.paginateImmobiles(res.body, res.headers),\r\n                (res: HttpErrorResponse) => this.onError(res.message)\r\n            );\r\n    }\r\n\r\n    resetFiltri() {\r\n        this.initRicerca();\r\n    }\r\n}\r\n"]}]}
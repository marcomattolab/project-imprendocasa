{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.component.ts","mtime":1548761752896},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar incarico_model_1 = require(\"app/shared/model/incarico.model\");\r\nvar core_2 = require(\"app/core\");\r\nvar cliente_1 = require(\"app/entities/cliente\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar incarico_service_1 = require(\"./incarico.service\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar tag_1 = require(\"app/entities/tag\");\r\nvar partner_1 = require(\"app/entities/partner\");\r\nvar handler_util_1 = require(\"app/shared/util/handler-util\");\r\nvar IncaricoComponent = /** @class */ (function () {\r\n    function IncaricoComponent(incaricoService, parseLinks, jhiAlertService, principal, activatedRoute, dataUtils, router, tagService, userService, clienteService, eventManager, partnerService) {\r\n        var _this = this;\r\n        this.incaricoService = incaricoService;\r\n        this.parseLinks = parseLinks;\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.principal = principal;\r\n        this.activatedRoute = activatedRoute;\r\n        this.dataUtils = dataUtils;\r\n        this.router = router;\r\n        this.tagService = tagService;\r\n        this.userService = userService;\r\n        this.clienteService = clienteService;\r\n        this.eventManager = eventManager;\r\n        this.partnerService = partnerService;\r\n        this.COMMITTENTE = 1;\r\n        this.PROPONENTE = 2;\r\n        this.ACQLOC = 3;\r\n        this.EMPTY = '';\r\n        this.itemsPerPage = shared_1.ITEMS_PER_PAGE;\r\n        this.routeData = this.activatedRoute.data.subscribe(function (data) {\r\n            _this.page = data.pagingParams.page;\r\n            _this.previousPage = data.pagingParams.page;\r\n            _this.reverse = data.pagingParams.ascending;\r\n            _this.predicate = data.pagingParams.predicate;\r\n        });\r\n    }\r\n    IncaricoComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.loadAll();\r\n        this.principal.identity().then(function (account) {\r\n            _this.currentAccount = account;\r\n        });\r\n        this.retrievePartners();\r\n        this.registerChangeInIncaricos();\r\n        this.initRicerca();\r\n        this.initStatiIncarico();\r\n        this.initTipiNegoziazione();\r\n        this.retrieveUsersAgents();\r\n        this.retrieveClienti();\r\n    };\r\n    IncaricoComponent.prototype.retrieveClienti = function () {\r\n        var _this = this;\r\n        this.clienteService.query().subscribe(function (res) {\r\n            _this.clienti = res.body;\r\n            _this.retrieveCommittenti();\r\n            _this.retrieveProponenti();\r\n            _this.retrieveAcquirenteLocatario();\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.retrieveCommittenti = function () {\r\n        var _this = this;\r\n        this.committenti = new Array;\r\n        this.clienti.forEach(function (current) {\r\n            current.tags.forEach(function (res) {\r\n                if (res.id === _this.COMMITTENTE) {\r\n                    _this.committenti.push(current);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.retrieveProponenti = function () {\r\n        var _this = this;\r\n        this.proponenti = new Array;\r\n        this.clienti.forEach(function (current) {\r\n            current.tags.forEach(function (res) {\r\n                if (res.id === _this.PROPONENTE) {\r\n                    _this.proponenti.push(current);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.retrieveAcquirenteLocatario = function () {\r\n        var _this = this;\r\n        this.acquirenti_locatari = new Array;\r\n        this.clienti.forEach(function (current) {\r\n            current.tags.forEach(function (res) {\r\n                if (res.id === _this.ACQLOC) {\r\n                    _this.acquirenti_locatari.push(current);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.retrievePartners = function () {\r\n        var _this = this;\r\n        this.partnerService.query().subscribe(function (res) {\r\n            _this.partners = res.body;\r\n        }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoComponent.prototype.retrieveUsersAgents = function () {\r\n        var _this = this;\r\n        handler_util_1.closeSubscription(this.usersSubscription);\r\n        this.usersSubscription = this.userService.queryAgents().subscribe(function (res) {\r\n            _this.tempUsers = res.body;\r\n            if (_this.users && _this.users.length === 1) {\r\n                _this.users = new Array();\r\n                _this.users.push(_this.tempUsers[0]);\r\n            }\r\n            else {\r\n                _this.users = _this.tempUsers;\r\n            }\r\n        }, function (res) { return _this.onError(res.body); });\r\n    };\r\n    IncaricoComponent.prototype.initStatiIncarico = function () {\r\n        this.statiIncarico = [\r\n            incarico_model_1.StatoIncarico.BOZZA,\r\n            incarico_model_1.StatoIncarico.ATTIVO,\r\n            incarico_model_1.StatoIncarico.CONCLUSO,\r\n            incarico_model_1.StatoIncarico.INTERROTTO,\r\n            incarico_model_1.StatoIncarico.SCADUTO\r\n        ];\r\n    };\r\n    IncaricoComponent.prototype.initTipiNegoziazione = function () {\r\n        this.tipiNegoziazione = [\r\n            incarico_model_1.TipoNegoziazione.COMPRAVENDITA,\r\n            incarico_model_1.TipoNegoziazione.LOCAZIONE,\r\n            incarico_model_1.TipoNegoziazione.PRATICA_TECNICA,\r\n            incarico_model_1.TipoNegoziazione.PRATICA_LEGALE,\r\n            incarico_model_1.TipoNegoziazione.MUTUO,\r\n            incarico_model_1.TipoNegoziazione.SERVIZI_ACCESSORI,\r\n            incarico_model_1.TipoNegoziazione.ALTRO\r\n        ];\r\n    };\r\n    IncaricoComponent.prototype.ngOnDestroy = function () {\r\n        this.eventManager.destroy(this.eventSubscriber);\r\n        handler_util_1.closeSubscription(this.incaricoServiceSubscription);\r\n    };\r\n    IncaricoComponent.prototype.initRicerca = function () {\r\n        this.formIncarico = new forms_1.FormGroup({\r\n            riferimento: new forms_1.FormControl(''),\r\n            agente: new forms_1.FormControl(''),\r\n            partnerId: new forms_1.FormControl(''),\r\n            tipo: new forms_1.FormControl(''),\r\n            stato: new forms_1.FormControl(''),\r\n            dataScadenzaD: new forms_1.FormControl(''),\r\n            dataScadenzaA: new forms_1.FormControl(''),\r\n            dataInizioD: new forms_1.FormControl(''),\r\n            dataInizioA: new forms_1.FormControl(''),\r\n            prezzoRichiestaD: new forms_1.FormControl(''),\r\n            prezzoRichiestaA: new forms_1.FormControl(''),\r\n            prezzoAcquistoD: new forms_1.FormControl(''),\r\n            prezzoAcquistoA: new forms_1.FormControl(''),\r\n            importoProvvigioneD: new forms_1.FormControl(''),\r\n            importoProvvigioneA: new forms_1.FormControl(''),\r\n            committenteId: new forms_1.FormControl(''),\r\n            proponenteId: new forms_1.FormControl(''),\r\n            acquirenteLocatarioId: new forms_1.FormControl(''),\r\n            categoriaIncarico: new forms_1.FormControl('')\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.loadAll = function () {\r\n        var _this = this;\r\n        this.incaricoService\r\n            .query({\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        })\r\n            .subscribe(function (res) { return _this.paginateIncaricos(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoComponent.prototype.loadPage = function (page) {\r\n        if (page !== this.previousPage) {\r\n            this.previousPage = page;\r\n            this.transition();\r\n        }\r\n    };\r\n    IncaricoComponent.prototype.transition = function () {\r\n        this.router.navigate(['/incarico'], {\r\n            queryParams: {\r\n                page: this.page,\r\n                size: this.itemsPerPage,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        });\r\n        this.loadAll();\r\n    };\r\n    IncaricoComponent.prototype.clear = function () {\r\n        this.page = 0;\r\n        this.router.navigate([\r\n            '/incarico',\r\n            {\r\n                page: this.page,\r\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\r\n            }\r\n        ]);\r\n        this.loadAll();\r\n    };\r\n    IncaricoComponent.prototype.trackId = function (index, item) {\r\n        return item.id;\r\n    };\r\n    IncaricoComponent.prototype.byteSize = function (field) {\r\n        return this.dataUtils.byteSize(field);\r\n    };\r\n    IncaricoComponent.prototype.openFile = function (contentType, field) {\r\n        return this.dataUtils.openFile(contentType, field);\r\n    };\r\n    IncaricoComponent.prototype.registerChangeInIncaricos = function () {\r\n        var _this = this;\r\n        this.eventSubscriber = this.eventManager.subscribe('incaricoListModification', function (response) { return _this.loadAll(); });\r\n    };\r\n    IncaricoComponent.prototype.sort = function () {\r\n        var result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\r\n        if (this.predicate !== 'id') {\r\n            result.push('id');\r\n        }\r\n        return result;\r\n    };\r\n    IncaricoComponent.prototype.paginateIncaricos = function (data, headers) {\r\n        var _this = this;\r\n        this.links = this.parseLinks.parse(headers.get('link'));\r\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\r\n        this.queryCount = this.totalItems;\r\n        this.incaricos = data;\r\n        this.completamento = [];\r\n        this.incaricos.forEach(function (incarico) {\r\n            _this.retrievePercentualeCompletamento(incarico);\r\n        });\r\n    };\r\n    IncaricoComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    IncaricoComponent.prototype.retrievePercentualeCompletamento = function (current) {\r\n        var nCampi = 9;\r\n        var i = 0;\r\n        if (current.riferimento != null) {\r\n            i++;\r\n        }\r\n        if (current.tipo != null) {\r\n            i++;\r\n        }\r\n        if (current.stato != null) {\r\n            i++;\r\n        }\r\n        if (current.agente != null) {\r\n            i++;\r\n        }\r\n        if (current.agenteDiContatto != null) {\r\n            i++;\r\n        }\r\n        if (current.dataContatto != null) {\r\n            i++;\r\n        }\r\n        if (current.noteTrattativa != null) {\r\n            i++;\r\n        }\r\n        if (current.datiFiscali != null) {\r\n            i++;\r\n        }\r\n        /*        if (current.ruolo != null) {\r\n                    i++;\r\n                }*/\r\n        var percentuale = (i / nCampi) * 100;\r\n        this.completamento[current.id] = percentuale;\r\n    };\r\n    IncaricoComponent.prototype.retrieveCompletamento = function (id) {\r\n        return this.completamento[id].toPrecision(3);\r\n    };\r\n    IncaricoComponent.prototype.cerca = function () {\r\n        var _this = this;\r\n        var formClienteControls = this.formIncarico.controls;\r\n        var searchFilter = {\r\n            page: this.page - 1,\r\n            size: this.itemsPerPage,\r\n            sort: this.sort()\r\n        };\r\n        // filtro riferimento\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'riferimento');\r\n        // filtro agente\r\n        searchFilter = shared_1.checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'agente');\r\n        // filtro partner\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'partnerId');\r\n        // filtro tipo\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tipo');\r\n        // filtro stato\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'stato');\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'dataScadenzaD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'dataScadenzaA');\r\n        // filtro dataScadA\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataScadenzaD', 'dataScadenzaA', 'dataScadenza');\r\n        // searchFilter =  checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'prezzoRichiestaD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'prezzoRichiestaA');\r\n        // filtro prezzo richiesta\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'prezzoRichiestaD', 'prezzoRichiestaA', 'prezzoRichiesta');\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'importoProvvigioneD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'importoProvvigioneA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'importoProvvigioneD', 'importoProvvigioneA', 'importoProvvigioni');\r\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'prezzoAcquistoD');\r\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'prezzoAcquistoA');\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'prezzoAcquistoD', 'prezzoAcquistoA', 'prezzoAcquisto');\r\n        // filtro committenteId\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'committenteId');\r\n        // filtr proponenteId\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'proponenteId');\r\n        // filtro acquirenteLocatoreId\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'acquirenteLocatarioId');\r\n        // filtro data inizio\r\n        searchFilter = shared_1.checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataInizioD', 'dataInizioA', 'dataInizioLocazione');\r\n        // filtro categoriaIncarico\r\n        searchFilter = shared_1.checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'categoriaIncarico');\r\n        handler_util_1.closeSubscription(this.incaricoServiceSubscription);\r\n        this.incaricoServiceSubscription = this.incaricoService.query(searchFilter).subscribe(function (res) { return _this.paginateIncaricos(res.body, res.headers); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    IncaricoComponent.prototype.resetFiltri = function () {\r\n        this.initRicerca();\r\n    };\r\n    IncaricoComponent.prototype.getOrderByIcon = function (param) {\r\n        if (param === this.predicate) {\r\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\r\n        }\r\n        else {\r\n            return 'fa-sort';\r\n        }\r\n    };\r\n    IncaricoComponent.prototype.onSuccessRetrieveUsers = function (users) {\r\n        this.users = users;\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\r\n    IncaricoComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-incarico',\r\n            templateUrl: './incarico.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof incarico_service_1.IncaricoService !== \"undefined\" && incarico_service_1.IncaricoService) === \"function\" ? _a : Object, typeof (_b = typeof ng_jhipster_1.JhiParseLinks !== \"undefined\" && ng_jhipster_1.JhiParseLinks) === \"function\" ? _b : Object, typeof (_c = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _c : Object, typeof (_d = typeof core_2.Principal !== \"undefined\" && core_2.Principal) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object, typeof (_f = typeof ng_jhipster_1.JhiDataUtils !== \"undefined\" && ng_jhipster_1.JhiDataUtils) === \"function\" ? _f : Object, typeof (_g = typeof router_1.Router !== \"undefined\" && router_1.Router) === \"function\" ? _g : Object, typeof (_h = typeof tag_1.TagService !== \"undefined\" && tag_1.TagService) === \"function\" ? _h : Object, typeof (_j = typeof core_2.UserService !== \"undefined\" && core_2.UserService) === \"function\" ? _j : Object, typeof (_k = typeof cliente_1.ClienteService !== \"undefined\" && cliente_1.ClienteService) === \"function\" ? _k : Object, typeof (_l = typeof ng_jhipster_1.JhiEventManager !== \"undefined\" && ng_jhipster_1.JhiEventManager) === \"function\" ? _l : Object, typeof (_m = typeof partner_1.PartnerService !== \"undefined\" && partner_1.PartnerService) === \"function\" ? _m : Object])\r\n    ], IncaricoComponent);\r\n    return IncaricoComponent;\r\n}());\r\nexports.IncaricoComponent = IncaricoComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\incarico\\incarico.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit, OnDestroy} from '@angular/core';\nimport {HttpErrorResponse, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {JhiEventManager, JhiParseLinks, JhiAlertService, JhiDataUtils} from 'ng-jhipster';\n\nimport {Incarico, StatoIncarico, TipoNegoziazione} from 'app/shared/model/incarico.model';\nimport {Principal, User, UserService} from 'app/core';\nimport {ClienteService} from 'app/entities/cliente';\nimport {\n    checkAndCompileSearchBetween,\n    checkAndCompileSearchFilterContains, checkAndCompileSearchFilterEquals,\n    checkAndCompileSearchFilterGt,\n    checkAndCompileSearchFilterLt,\n    ITEMS_PER_PAGE\n} from 'app/shared';\nimport {IncaricoService} from './incarico.service';\nimport {FormGroup, FormControl} from '@angular/forms';\nimport {Cliente} from 'app/shared/model/cliente.model';\nimport {Tag} from 'app/shared/model/tag.model';\nimport {TagService} from 'app/entities/tag';\nimport {Partner} from 'app/shared/model/partner.model';\nimport {PartnerService} from 'app/entities/partner';\nimport {closeSubscription} from 'app/shared/util/handler-util';\n\n@Component({\n    selector: 'jhi-incarico',\n    templateUrl: './incarico.component.html'\n})\nexport class IncaricoComponent implements OnInit, OnDestroy {\n    currentAccount: any;\n    incaricos: Incarico[];\n    error: any;\n    success: any;\n    eventSubscriber: Subscription;\n    routeData: any;\n    links: any;\n    totalItems: any;\n    queryCount: any;\n    itemsPerPage: any;\n    page: any;\n    predicate: any;\n    previousPage: any;\n    reverse: any;\n    formIncarico: FormGroup;\n    tags: Tag[];\n    statiIncarico: StatoIncarico[];\n    users: User[];\n    tempUsers: User[];\n    committenti: Cliente[];\n    proponenti: Cliente[];\n    acquirenti_locatari: Cliente[];\n    clienti: Cliente[];\n    COMMITTENTE = 1;\n    PROPONENTE = 2;\n    ACQLOC = 3;\n    EMPTY = '';\n\n    completamento: number[];\n    partners: Partner[];\n    tipiNegoziazione: TipoNegoziazione[];\n    private incaricoServiceSubscription: Subscription;\n    private usersSubscription: Subscription;\n\n    constructor(\n        private incaricoService: IncaricoService,\n        private parseLinks: JhiParseLinks,\n        private jhiAlertService: JhiAlertService,\n        private principal: Principal,\n        private activatedRoute: ActivatedRoute,\n        private dataUtils: JhiDataUtils,\n        private router: Router,\n        private tagService: TagService,\n        private userService: UserService,\n        private clienteService: ClienteService,\n        private eventManager: JhiEventManager,\n        private partnerService: PartnerService\n    ) {\n        this.itemsPerPage = ITEMS_PER_PAGE;\n        this.routeData = this.activatedRoute.data.subscribe(data => {\n            this.page = data.pagingParams.page;\n            this.previousPage = data.pagingParams.page;\n            this.reverse = data.pagingParams.ascending;\n            this.predicate = data.pagingParams.predicate;\n        });\n    }\n\n    ngOnInit() {\n        this.loadAll();\n        this.principal.identity().then(account => {\n            this.currentAccount = account;\n        });\n\n        this.retrievePartners();\n        this.registerChangeInIncaricos();\n        this.initRicerca();\n        this.initStatiIncarico();\n        this.initTipiNegoziazione();\n        this.retrieveUsersAgents();\n        this.retrieveClienti();\n    }\n\n    private retrieveClienti() {\n        this.clienteService.query().subscribe(res => {\n            this.clienti = res.body;\n            this.retrieveCommittenti();\n            this.retrieveProponenti();\n            this.retrieveAcquirenteLocatario();\n        });\n\n    }\n\n    private retrieveCommittenti() {\n        this.committenti = new Array;\n        this.clienti.forEach(current => {\n            current.tags.forEach(res => {\n                if (res.id === this.COMMITTENTE) {\n                    this.committenti.push(current);\n                }\n            });\n        });\n    }\n\n    private retrieveProponenti() {\n        this.proponenti = new Array;\n        this.clienti.forEach(current => {\n            current.tags.forEach(res => {\n                if (res.id === this.PROPONENTE) {\n                    this.proponenti.push(current);\n                }\n            });\n        });\n    }\n\n    private retrieveAcquirenteLocatario() {\n        this.acquirenti_locatari = new Array;\n        this.clienti.forEach(current => {\n            current.tags.forEach(res => {\n                if (res.id === this.ACQLOC) {\n                    this.acquirenti_locatari.push(current);\n                }\n            });\n        });\n    }\n\n    private retrievePartners() {\n        this.partnerService.query().subscribe(\n            (res: HttpResponse<Partner[]>) => {\n                this.partners = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    private retrieveUsersAgents() {\n        closeSubscription(this.usersSubscription);\n        this.usersSubscription = this.userService.queryAgents().subscribe(\n            (res: HttpResponse<User[]>) => {\n                this.tempUsers = res.body;\n                if (this.users && this.users.length === 1) {\n                    this.users = new Array();\n                    this.users.push(this.tempUsers[0]);\n                } else {\n                    this.users = this.tempUsers;\n                }\n            },\n            (res: HttpResponse<any>) => this.onError(res.body)\n        );\n    }\n\n    private initStatiIncarico() {\n\n        this.statiIncarico = [\n            StatoIncarico.BOZZA,\n            StatoIncarico.ATTIVO,\n            StatoIncarico.CONCLUSO,\n            StatoIncarico.INTERROTTO,\n            StatoIncarico.SCADUTO\n        ];\n    }\n\n    private initTipiNegoziazione() {\n        this.tipiNegoziazione = [\n            TipoNegoziazione.COMPRAVENDITA,\n            TipoNegoziazione.LOCAZIONE,\n            TipoNegoziazione.PRATICA_TECNICA,\n            TipoNegoziazione.PRATICA_LEGALE,\n            TipoNegoziazione.MUTUO,\n            TipoNegoziazione.SERVIZI_ACCESSORI,\n            TipoNegoziazione.ALTRO\n        ];\n    }\n\n    ngOnDestroy() {\n        this.eventManager.destroy(this.eventSubscriber);\n        closeSubscription(this.incaricoServiceSubscription);\n    }\n\n    initRicerca() {\n\n        this.formIncarico = new FormGroup({\n            riferimento: new FormControl(''),\n            agente: new FormControl(''),\n            partnerId: new FormControl(''),\n            tipo: new FormControl(''),\n            stato: new FormControl(''),\n            dataScadenzaD: new FormControl(''),\n            dataScadenzaA: new FormControl(''),\n            dataInizioD: new FormControl(''),\n            dataInizioA: new FormControl(''),\n            prezzoRichiestaD: new FormControl(''),\n            prezzoRichiestaA: new FormControl(''),\n            prezzoAcquistoD: new FormControl(''),\n            prezzoAcquistoA: new FormControl(''),\n            importoProvvigioneD: new FormControl(''),\n            importoProvvigioneA: new FormControl(''),\n            committenteId: new FormControl(''),\n            proponenteId: new FormControl(''),\n            acquirenteLocatarioId: new FormControl(''),\n            categoriaIncarico: new FormControl('')\n        });\n    }\n\n    loadAll() {\n        this.incaricoService\n            .query({\n                page: this.page - 1,\n                size: this.itemsPerPage,\n                sort: this.sort()\n            })\n            .subscribe(\n                (res: HttpResponse<Incarico[]>) => this.paginateIncaricos(res.body, res.headers),\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n    }\n\n    loadPage(page: number) {\n        if (page !== this.previousPage) {\n            this.previousPage = page;\n            this.transition();\n        }\n    }\n\n    transition() {\n        this.router.navigate(['/incarico'], {\n            queryParams: {\n                page: this.page,\n                size: this.itemsPerPage,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        });\n        this.loadAll();\n    }\n\n    clear() {\n        this.page = 0;\n        this.router.navigate([\n            '/incarico',\n            {\n                page: this.page,\n                sort: this.predicate + ',' + (this.reverse ? 'asc' : 'desc')\n            }\n        ]);\n        this.loadAll();\n    }\n\n    trackId(index: number, item: Incarico) {\n        return item.id;\n    }\n\n    byteSize(field) {\n        return this.dataUtils.byteSize(field);\n    }\n\n    openFile(contentType, field) {\n        return this.dataUtils.openFile(contentType, field);\n    }\n\n    registerChangeInIncaricos() {\n        this.eventSubscriber = this.eventManager.subscribe('incaricoListModification', response => this.loadAll());\n    }\n\n    sort() {\n        const result = [this.predicate + ',' + (this.reverse ? 'asc' : 'desc')];\n        if (this.predicate !== 'id') {\n            result.push('id');\n        }\n        return result;\n    }\n\n    private paginateIncaricos(data: Incarico[], headers: HttpHeaders) {\n        this.links = this.parseLinks.parse(headers.get('link'));\n        this.totalItems = parseInt(headers.get('X-Total-Count'), 10);\n        this.queryCount = this.totalItems;\n        this.incaricos = data;\n        this.completamento = [];\n        this.incaricos.forEach(incarico => {\n            this.retrievePercentualeCompletamento(incarico);\n        });\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    retrievePercentualeCompletamento(current: Incarico) {\n        const nCampi = 9;\n        let i = 0;\n\n        if (current.riferimento != null) {\n            i++;\n        }\n        if (current.tipo != null) {\n            i++;\n        }\n        if (current.stato != null) {\n            i++;\n        }\n        if (current.agente != null) {\n            i++;\n        }\n        if (current.agenteDiContatto != null) {\n            i++;\n        }\n        if (current.dataContatto != null) {\n            i++;\n        }\n        if (current.noteTrattativa != null) {\n            i++;\n        }\n        if (current.datiFiscali != null) {\n            i++;\n        }\n        /*        if (current.ruolo != null) {\n                    i++;\n                }*/\n        const percentuale = (i / nCampi) * 100;\n        this.completamento[current.id] = percentuale;\n    }\n\n    retrieveCompletamento(id: any) {\n        return this.completamento[id].toPrecision(3);\n    }\n\n    cerca() {\n        const formClienteControls = this.formIncarico.controls;\n\n        let searchFilter = {\n            page: this.page - 1,\n            size: this.itemsPerPage,\n            sort: this.sort()\n        };\n\n        // filtro riferimento\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'riferimento');\n        // filtro agente\n        searchFilter = checkAndCompileSearchFilterContains(formClienteControls, searchFilter, 'agente');\n        // filtro partner\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'partnerId');\n        // filtro tipo\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'tipo');\n        // filtro stato\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'stato');\n\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'dataScadenzaD');\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'dataScadenzaA');\n        // filtro dataScadA\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataScadenzaD', 'dataScadenzaA', 'dataScadenza');\n\n        // searchFilter =  checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'prezzoRichiestaD');\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'prezzoRichiestaA');\n        // filtro prezzo richiesta\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'prezzoRichiestaD', 'prezzoRichiestaA', 'prezzoRichiesta');\n\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'importoProvvigioneD');\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'importoProvvigioneA');\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'importoProvvigioneD', 'importoProvvigioneA', 'importoProvvigioni');\n\n        // searchFilter = checkAndCompileSearchFilterGt(formClienteControls, searchFilter, 'prezzoAcquistoD');\n        // searchFilter = checkAndCompileSearchFilterLt(formClienteControls, searchFilter, 'prezzoAcquistoA');\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'prezzoAcquistoD', 'prezzoAcquistoA', 'prezzoAcquisto');\n\n        // filtro committenteId\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'committenteId');\n        // filtr proponenteId\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'proponenteId');\n        // filtro acquirenteLocatoreId\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'acquirenteLocatarioId');\n\n        // filtro data inizio\n        searchFilter = checkAndCompileSearchBetween(formClienteControls, searchFilter, 'dataInizioD', 'dataInizioA', 'dataInizioLocazione');\n\n        // filtro categoriaIncarico\n        searchFilter = checkAndCompileSearchFilterEquals(formClienteControls, searchFilter, 'categoriaIncarico');\n\n        closeSubscription(this.incaricoServiceSubscription);\n        this.incaricoServiceSubscription = this.incaricoService.query(searchFilter).subscribe(\n            (res: HttpResponse<Incarico[]>) => this.paginateIncaricos(res.body, res.headers),\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    resetFiltri() {\n        this.initRicerca();\n    }\n\n    getOrderByIcon(param: string) {\n        if (param === this.predicate) {\n            return this.reverse ? 'fa-sort-up' : 'fa-sort-down';\n        } else {\n            return 'fa-sort';\n        }\n    }\n\n    private onSuccessRetrieveUsers(users: User[]) {\n        this.users = users;\n    }\n}\n"]}]}
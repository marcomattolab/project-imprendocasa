{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-update.component.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-update.component.ts","mtime":1548761754315},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar tag_service_1 = require(\"./tag.service\");\r\nvar TagUpdateComponent = /** @class */ (function () {\r\n    function TagUpdateComponent(tagService, activatedRoute) {\r\n        this.tagService = tagService;\r\n        this.activatedRoute = activatedRoute;\r\n    }\r\n    TagUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var tag = _a.tag;\r\n            _this.tag = tag;\r\n        });\r\n    };\r\n    TagUpdateComponent.prototype.previousState = function () {\r\n        window.history.back();\r\n    };\r\n    TagUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        if (this.tag.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.tagService.update(this.tag));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.tagService.create(this.tag));\r\n        }\r\n    };\r\n    TagUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    TagUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    TagUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    var _a, _b;\r\n    TagUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-tag-update',\r\n            templateUrl: './tag-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof tag_service_1.TagService !== \"undefined\" && tag_service_1.TagService) === \"function\" ? _a : Object, typeof (_b = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _b : Object])\r\n    ], TagUpdateComponent);\r\n    return TagUpdateComponent;\r\n}());\r\nexports.TagUpdateComponent = TagUpdateComponent;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-update.component.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-update.component.ts"],"names":[],"mappings":";;;AAAA,sCAAgD;AAChD,0CAA+C;AAK/C,6CAAyC;AAMzC;IAII,4BAAoB,UAAsB,EAAU,cAA8B;QAA9D,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAClF,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAKC;QAJG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,EAAK;gBAAJ,YAAG;YACpC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,0CAAa,GAAb;QACI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAED,iCAAI,GAAJ;QACI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,SAAS,EAAE;YAC3B,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;aAAM;YACH,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAClE;IACL,CAAC;IAEO,oDAAuB,GAA/B,UAAgC,MAAqC;QAArE,iBAEC;QADG,MAAM,CAAC,SAAS,CAAC,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,aAAa,EAAE,EAApB,CAAoB,EAAE,UAAC,GAAsB,IAAK,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;IACvH,CAAC;IAEO,0CAAa,GAArB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC;IAEO,wCAAW,GAAnB;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;;IAtCQ,kBAAkB;QAJ9B,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,6BAA6B;SAC7C,CAAC;qEAKkC,wBAAU,oBAAV,wBAAU,oDAA0B,uBAAc,oBAAd,uBAAc;OAJzE,kBAAkB,CAuC9B;IAAD,yBAAC;CAAA,AAvCD,IAuCC;AAvCY,gDAAkB","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nimport {Tag} from 'app/shared/model/tag.model';\nimport {TagService} from './tag.service';\n\n@Component({\n    selector: 'jhi-tag-update',\n    templateUrl: './tag-update.component.html'\n})\nexport class TagUpdateComponent implements OnInit {\n    tag: Tag;\n    isSaving: boolean;\n\n    constructor(private tagService: TagService, private activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({tag}) => {\n            this.tag = tag;\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.tag.id !== undefined) {\n            this.subscribeToSaveResponse(this.tagService.update(this.tag));\n        } else {\n            this.subscribeToSaveResponse(this.tagService.create(this.tag));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<Tag>>) {\n        result.subscribe((res: HttpResponse<Tag>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n}\n"]}]}
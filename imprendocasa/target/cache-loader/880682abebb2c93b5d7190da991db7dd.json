{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-resolve.service.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-resolve.service.ts","mtime":1548761754298},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar tag_model_1 = require(\"app/shared/model/tag.model\");\r\nvar tag_service_1 = require(\"app/entities/tag/tag.service\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar TagResolve = /** @class */ (function () {\r\n    function TagResolve(service) {\r\n        this.service = service;\r\n    }\r\n    TagResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (tag) { return tag.body; }));\r\n        }\r\n        return rxjs_1.of(new tag_model_1.Tag());\r\n    };\r\n    var _a;\r\n    TagResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof tag_service_1.TagService !== \"undefined\" && tag_service_1.TagService) === \"function\" ? _a : Object])\r\n    ], TagResolve);\r\n    return TagResolve;\r\n}());\r\nexports.TagResolve = TagResolve;\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-resolve.service.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\entities\\tag\\tag-resolve.service.ts"],"names":[],"mappings":";;;AAAA,sCAAyC;AAEzC,wDAA+C;AAC/C,4DAAwD;AACxD,6BAAoC;AACpC,4CAA2C;AAI3C;IACI,oBAAoB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;IACvC,CAAC;IAED,4BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA2B,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACpD,eAAG,CAAC,UAAC,GAAsB,IAAK,OAAA,GAAG,CAAC,IAAI,EAAR,CAAQ,CAAC,CAC5C,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,eAAG,EAAE,CAAC,CAAC;IACzB,CAAC;;IAbQ,UAAU;QADtB,iBAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;qEAEA,wBAAU,oBAAV,wBAAU;OAD9B,UAAU,CActB;IAAD,iBAAC;CAAA,AAdD,IAcC;AAdY,gCAAU","sourcesContent":["import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Tag} from 'app/shared/model/tag.model';\nimport {TagService} from 'app/entities/tag/tag.service';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {HttpResponse} from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class TagResolve implements Resolve<Tag> {\n    constructor(private service: TagService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Tag> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<Tag>) => response.ok),\n                map((tag: HttpResponse<Tag>) => tag.body)\n            );\n        }\n        return of(new Tag());\n    }\n}\n"]}]}
{"remainingRequest":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\request-util.ts","dependencies":[{"path":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\request-util.ts","mtime":1548761755230},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548763036447},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1548763032809},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http_1 = require(\"@angular/common/http\");\r\nexports.createRequestOption = function (req) {\r\n    var options = new http_1.HttpParams();\r\n    if (req) {\r\n        Object.keys(req).forEach(function (key) {\r\n            if (key !== 'sort') {\r\n                options = options.set(key, req[key]);\r\n            }\r\n        });\r\n        if (req.sort) {\r\n            req.sort.forEach(function (val) {\r\n                options = options.append('sort', val);\r\n            });\r\n        }\r\n    }\r\n    return options;\r\n};\r\nexports.checkAndCompileSearchFilterEquals = function (formControls, searchFilter, field) {\r\n    var value = formControls[field].value;\r\n    console.log(value);\r\n    if (value !== '') {\r\n        searchFilter[field + \".equals\"] = value;\r\n    }\r\n    return searchFilter;\r\n};\r\nexports.checkAndCompileSearchFilterContains = function (formControls, searchFilter, field) {\r\n    var value = formControls[field].value;\r\n    if (value !== '') {\r\n        searchFilter[field + \".contains\"] = value;\r\n    }\r\n    return searchFilter;\r\n};\r\n/** MMA - ATTENZIONE VANNO ABOLITI E CHIAMATO checkAndCompileSearchBetween invece che questo controlliamo e testiamo!!! */\r\nexports.checkAndCompileSearchFilterGt = function (formControls, searchFilter, field) {\r\n    var value = formControls[field].value;\r\n    // taglio l'ultima lettere per allinerlo alla richiesta su db\r\n    field = field.slice(0, -1);\r\n    if (value !== '') {\r\n        searchFilter[field + \".greaterOrEqualThan\"] = value;\r\n    }\r\n    return searchFilter;\r\n};\r\n/** MMA - ATTENZIONE VANNO ABOLITI E CHIAMATO checkAndCompileSearchBetween invece che questo controlliamo e testiamo!!!*/\r\nexports.checkAndCompileSearchFilterLt = function (formControls, searchFilter, field) {\r\n    var value = formControls[field].value;\r\n    // taglio l'ultima lettere per allinerlo alla richiesta su db\r\n    field = field.slice(0, -1);\r\n    if (value !== '') {\r\n        searchFilter[field + \".lessOrEqualThan\"] = value;\r\n    }\r\n    return searchFilter;\r\n};\r\nexports.checkAndCompileSearchBetween = function (formControls, searchFilter, fieldDa, fieldA, fieldName) {\r\n    var valueDa = formControls[fieldDa].value;\r\n    var valueA = formControls[fieldA].value;\r\n    if (valueDa !== '') {\r\n        searchFilter[fieldName + \".greaterOrEqualThan\"] = valueDa;\r\n    }\r\n    if (valueA !== '') {\r\n        searchFilter[fieldName + \".lessOrEqualThan\"] = valueA;\r\n    }\r\n    return searchFilter;\r\n};\r\n",{"version":3,"file":"C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\request-util.ts","sourceRoot":"","sources":["C:\\workspace-jidea\\imprendocasa\\node_modules\\angular-router-loader\\src\\index.js!C:\\workspace-jidea\\imprendocasa\\node_modules\\tslint-loader\\index.js!C:\\workspace-jidea\\imprendocasa\\src\\main\\webapp\\app\\shared\\util\\request-util.ts"],"names":[],"mappings":"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","sourcesContent":["import {HttpParams} from '@angular/common/http';\n\nexport const createRequestOption = (req?: any): HttpParams => {\n    let options: HttpParams = new HttpParams();\n    if (req) {\n        Object.keys(req).forEach(key => {\n            if (key !== 'sort') {\n                options = options.set(key, req[key]);\n            }\n        });\n        if (req.sort) {\n            req.sort.forEach(val => {\n                options = options.append('sort', val);\n            });\n        }\n    }\n    return options;\n};\n\nexport const checkAndCompileSearchFilterEquals = (formControls, searchFilter, field: string) => {\n    const value = formControls[field].value;\n    console.log(value);\n    if (value !== '') {\n        searchFilter[`${field}.equals`] = value;\n    }\n    return searchFilter;\n};\n\nexport const checkAndCompileSearchFilterContains = (formControls, searchFilter, field: string) => {\n    const value = formControls[field].value;\n\n    if (value !== '') {\n        searchFilter[`${field}.contains`] = value;\n    }\n    return searchFilter;\n};\n\n/** MMA - ATTENZIONE VANNO ABOLITI E CHIAMATO checkAndCompileSearchBetween invece che questo controlliamo e testiamo!!! */\nexport const checkAndCompileSearchFilterGt = (formControls, searchFilter, field: string) => {\n    const value = formControls[field].value;\n\n    // taglio l'ultima lettere per allinerlo alla richiesta su db\n    field = field.slice(0, -1);\n    if (value !== '') {\n        searchFilter[`${field}.greaterOrEqualThan`] = value;\n    }\n    return searchFilter;\n};\n\n/** MMA - ATTENZIONE VANNO ABOLITI E CHIAMATO checkAndCompileSearchBetween invece che questo controlliamo e testiamo!!!*/\nexport const checkAndCompileSearchFilterLt = (formControls, searchFilter, field: string) => {\n    const value = formControls[field].value;\n\n    // taglio l'ultima lettere per allinerlo alla richiesta su db\n    field = field.slice(0, -1);\n    if (value !== '') {\n        searchFilter[`${field}.lessOrEqualThan`] = value;\n    }\n    return searchFilter;\n};\n\nexport const checkAndCompileSearchBetween = (formControls, searchFilter, fieldDa: string, fieldA: string, fieldName: string) => {\n    const valueDa = formControls[fieldDa].value;\n    const valueA = formControls[fieldA].value;\n    if (valueDa !== '') {\n        searchFilter[`${fieldName}.greaterOrEqualThan`] = valueDa;\n    }\n    if (valueA !== '') {\n        searchFilter[`${fieldName}.lessOrEqualThan`] = valueA;\n    }\n    return searchFilter;\n};\n"]}]}